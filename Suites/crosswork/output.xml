<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.12.8 on win32)" generated="2024-12-04T20:05:23.960111" rpa="false" schemaversion="5">
<suite id="s1" name="Cnc" source="C:\temp\RoboWorks\Suites\crosswork\cnc.robot">
<kw name="Suite Setup" owner="CW_Keywords" type="SETUP">
<kw name="Create Hosts" owner="CW_Environments">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.466586" level="INFO">${CW_ENDPOINTS} = {}</msg>
<var>${CW_ENDPOINTS}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:24.466586" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.466586" level="INFO">${admin_default} = {"username":"admin","password":"cRo55work!"}</msg>
<var>${admin_default}</var>
<arg>{"username":"admin","password":"cRo55work!"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.466586" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.466586" level="INFO">${admin_default_2} = {"username":"admin","password":"mypassword"}</msg>
<var>${admin_default_2}</var>
<arg>{"username":"admin","password":"mypassword"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.466586" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.466586" level="INFO">${nbnlab} = {"username":"admin","password":"EyeManage20!"}</msg>
<var>${nbnlab}</var>
<arg>{"username":"admin","password":"EyeManage20!"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.466586" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>dclouddemo</arg>
<arg>{"host":"198.18.134.219","protocol":"https","port":"30603","auth":${admin_default}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:24.466586" elapsed="0.000997"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>mycnclablocal</arg>
<arg>{"host":"192.168.254.233","protocol":"https","port":"30605","auth":${admin_default_2}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>nbnlab</arg>
<arg>{"host":"10.67.22.45","protocol":"https","port":"30603","auth":${nbnlab}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.467583" level="INFO">${CW_ENDPOINTS} = {'dclouddemo': '{"host":"198.18.134.219","protocol":"https","port":"30603","auth":{"username":"admin","password":"cRo55work!"}}', 'mycnclablocal': '{"host":"192.168.254.233","protocol":"https","port":...</msg>
<arg>${CW_ENDPOINTS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:24.465583" elapsed="0.002000"/>
</kw>
<kw name="Get Current DTTM" owner="CW_Keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.467583" level="INFO">LOGLEVEL:DEBUG</msg>
<arg>LOGLEVEL:${LOG LEVEL}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.000000"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-12-04T20:05:24.467583" level="INFO">${now} = 20241204-200524</msg>
<var>${now}</var>
<arg>result_format=%Y%m%d-%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.468585" level="INFO">${now} = 20241204-200524</msg>
<arg>${now}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nCurrent Time: ${now}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.000000"/>
</kw>
<doc>Gets the current time as a reference</doc>
<status status="PASS" start="2024-12-04T20:05:24.467583" elapsed="0.001002"/>
</kw>
<tag>setup</tag>
<doc>Load environments and get current time stamp</doc>
<status status="PASS" start="2024-12-04T20:05:24.465583" elapsed="0.003002"/>
</kw>
<test id="s1-t1" name="Logon CNC" line="29">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:24.468585" level="INFO">${MSG} = ENVIRONMENT:nbnlab
</msg>
<arg>${MSG}</arg>
<arg>ENVIRONMENT:${ENV}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:24.468585" level="INFO">${RESP} = ('PASS', '{"host":"10.67.22.45","protocol":"https","port":"30603","auth":{"username":"admin","password":"EyeManage20!"}}')</msg>
<var>${RESP}</var>
<arg>set variable</arg>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.470092" level="INFO">{'dclouddemo': '{"host":"198.18.134.219","protocol":"https","port":"30603","auth":{"username":"admin","password":"cRo55work!"}}', 'mycnclablocal': '{"host":"192.168.254.233","protocol":"https","port":"30605","auth":{"username":"admin","password":"mypassword"}}', 'nbnlab': '{"host":"10.67.22.45","protocol":"https","port":"30603","auth":{"username":"admin","password":"EyeManage20!"}}'}</msg>
<arg>${CW_ENDPOINTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:24.470092" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Logon to CNC" owner="CW_Keywords">
<kw name="Log Variables" owner="BuiltIn">
<arg>level=TRACE</arg>
<doc>Logs all variables in the current scope with given log level.</doc>
<status status="PASS" start="2024-12-04T20:05:24.471098" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.471098" level="INFO">${data} = {'host': '10.67.22.45', 'protocol': 'https', 'port': '30603', 'auth': {'username': 'admin', 'password': 'EyeManage20!'}}</msg>
<var>${data}</var>
<arg>json.loads($data)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:24.471098" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.472097" level="INFO">${serverURL} = https://10.67.22.45:30603</msg>
<var>${serverURL}</var>
<arg>${data["protocol"]}://${data["host"]}:${data["port"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.471098" elapsed="0.000999"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.473098" level="INFO">${auth} = {"username":"admin","password":"EyeManage20!"}</msg>
<var>${auth}</var>
<arg>{"username":"${data["auth"]["username"]}","password":"${data["auth"]["password"]}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.472097" elapsed="0.001001"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.473098" level="INFO">${headers} = {'Content-type': 'application/x-www-form-urlencoded'}</msg>
<var>${headers}</var>
<arg>Content-type=application/x-www-form-urlencoded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.000000"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:24.473098" level="INFO">Creating Session using : alias=cw, url=https://10.67.22.45:30603, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<msg time="2024-12-04T20:05:24.473098" level="DEBUG">Creating session: cw</msg>
<arg>alias=cw</arg>
<arg>url=${serverURL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.473098" level="INFO">${auth} = /crosswork/sso/v1/tickets?username=admin&amp;password=EyeManage20!</msg>
<var>${auth}</var>
<arg>/crosswork/sso/v1/tickets?username=${data["auth"]["username"]}&amp;password=${data["auth"]["password"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.473098" level="INFO">${tgt} = /crosswork/sso/v1/tickets</msg>
<var>${tgt}</var>
<arg>/crosswork/sso/v1/tickets</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:24.473098" level="INFO">${payload} = service=https://1.2.3.4/app-dashboard/app-dashboard</msg>
<var>${payload}</var>
<arg>service=https://1.2.3.4/app-dashboard/app-dashboard</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:24.475609" level="DEBUG">Starting new HTTPS connection (1): 10.67.22.45:30603</msg>
<msg time="2024-12-04T20:05:25.030691" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/sso/v1/tickets?username=admin&amp;password=EyeManage20! HTTP/11" 201 80</msg>
<msg time="2024-12-04T20:05:25.031557" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets?username=admin&amp;password=EyeManage20! 
 path_url=/crosswork/sso/v1/tickets?username=admin&amp;password=EyeManage20! 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/x-www-form-urlencoded', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:25.031557" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets?username=admin&amp;password=EyeManage20! 
 status=201, reason=Created 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:12 GMT', 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'Content-Length': '80', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Location': 'https://10.67.22.45:5489/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0', 'Pragma': 'no-cache', 'Requestid': 'cf0add27-939a-41df-8fa8-c5d4e076c37d', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 </msg>
<msg time="2024-12-04T20:05:25.031557" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:25.032555" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>cw</arg>
<arg>${serverURL}${auth}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<arg>verify=${False}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:24.473098" elapsed="0.559457"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.033565" level="INFO">${myTGT} = TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0</msg>
<var>${myTGT}</var>
<arg>${resp.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.032555" elapsed="0.001010"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:25.143183" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 HTTP/11" 200 1394</msg>
<msg time="2024-12-04T20:05:25.143183" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 path_url=/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/x-www-form-urlencoded', 'Content-Length': '51'} 
 body=service=https://1.2.3.4/app-dashboard/app-dashboard 
 </msg>
<msg time="2024-12-04T20:05:25.143183" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:12 GMT', 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'Content-Length': '1394', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'Requestid': 'e70425be-5a57-4ce0-8848-9ba7931d8051', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A 
 </msg>
<msg time="2024-12-04T20:05:25.143183" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:25.144183" level="INFO">${resp2} = &lt;Response [200]&gt;</msg>
<var>${resp2}</var>
<arg>cw</arg>
<arg>${serverURL}${tgt}/${resp.text}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>verify=${False}</arg>
<arg>data=${payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:25.033565" elapsed="0.110618"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.144183" level="INFO">${token} = eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXN...</msg>
<var>${token}</var>
<arg>${resp2.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.144183" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.145183" level="INFO">${token} = eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXN...</msg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.145183" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.145183" level="INFO">${myTGT} = TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0</msg>
<arg>${myTGT}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.145183" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.145183" level="INFO">TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0</msg>
<arg>${myTGT}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:25.145183" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.145183" level="INFO">${MSG} = ENVIRONMENT:nbnlab
HOST: https://10.67.22.45:30603</msg>
<arg>${MSG}</arg>
<arg>${MSG}HOST: ${serverURL}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.145183" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.146182" level="INFO">${MSG} = ENVIRONMENT:nbnlab
HOST: https://10.67.22.45:30603
USER: admin</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nUSER: ${data["auth"]["username"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.146182" elapsed="0.000000"/>
</kw>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Retrieves the CNC Authentication token</doc>
<status status="PASS" start="2024-12-04T20:05:24.470092" elapsed="0.676090"/>
</kw>
<msg time="2024-12-04T20:05:25.146182" level="INFO">${logon} = True</msg>
<var>${logon}</var>
<arg>Logon to CNC</arg>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-12-04T20:05:24.470092" elapsed="0.676090"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>not ${logon}</arg>
<arg>Fatal Error</arg>
<arg>Failed to authenticate to ${data} or is not reacheable. Terminating test suite.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:25.146182" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:24.470092" elapsed="0.676090"/>
</branch>
<branch type="ELSE">
<kw name="Fatal Error" owner="BuiltIn">
<arg>Unable to resolve ENVIRONMENT:${ENV}. Terminating test suite.</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:25.147183" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:25.146182" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:24.470092" elapsed="0.677091"/>
</if>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:25.147482" level="INFO">Set test message to:
ENVIRONMENT:nbnlab
HOST: https://10.67.22.45:30603
USER: admin
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:25.147482" elapsed="0.000000"/>
</kw>
<doc>Initial Authentication for CNC session</doc>
<tag>AUTH</tag>
<tag>SETUP-TASKS</tag>
<status status="PASS" start="2024-12-04T20:05:24.468585" elapsed="0.678897">ENVIRONMENT:nbnlab
HOST: https://10.67.22.45:30603
USER: admin
</status>
</test>
<test id="s1-t2" name="Get Current Time" line="46">
<kw name="Get Current DTTM" owner="CW_Keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.149492" level="INFO">LOGLEVEL:DEBUG</msg>
<arg>LOGLEVEL:${LOG LEVEL}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:25.149492" elapsed="0.000000"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-12-04T20:05:25.149492" level="INFO">${now} = 20241204-200525</msg>
<var>${now}</var>
<arg>result_format=%Y%m%d-%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-12-04T20:05:25.149492" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.149492" level="INFO">${now} = 20241204-200525</msg>
<arg>${now}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.149492" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nCurrent Time: ${now}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-12-04T20:05:25.149492" elapsed="0.000000"/>
</kw>
<doc>Gets the current time as a reference</doc>
<status status="PASS" start="2024-12-04T20:05:25.148496" elapsed="0.000996"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:25.150490" level="INFO">Set test message to:
20241204-200525</msg>
<arg>${now}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:25.150490" elapsed="0.000000"/>
</kw>
<doc>Get a suite wide date and time to use as a unique identifier</doc>
<tag>SETUP-TASKS</tag>
<status status="PASS" start="2024-12-04T20:05:25.148496" elapsed="0.001994">20241204-200525</status>
</test>
<test id="s1-t3" name="Retrieve Platform Summary" line="52">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:25.151490" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.150490" elapsed="0.001000"/>
</kw>
<kw name="get-cnc-platform" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.152491" level="INFO">${myurl} = /crosswork/platform/v1/node-manager/clusters</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v1/node-manager/clusters</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.152491" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.152491" level="INFO">@{CNC_PLATFORM} = [ ]</msg>
<var>@{CNC_PLATFORM}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.152491" level="INFO">@{FIELDS} = [ SchemaVersion | CNC_VM_Image | ClusterIPStack | ManagementVIP | ManagementIPNetmask | ManagementIPGateway | DataVIP | DataIPNetmask | DataIPGateway | DomainName | NTP | DNS | RamDiskSize | ThinProvi...</msg>
<var>@{FIELDS}</var>
<arg>SchemaVersion</arg>
<arg>CNC_VM_Image</arg>
<arg>ClusterIPStack</arg>
<arg>ManagementVIP</arg>
<arg>ManagementIPNetmask</arg>
<arg>ManagementIPGateway</arg>
<arg>DataVIP</arg>
<arg>DataIPNetmask</arg>
<arg>DataIPGateway</arg>
<arg>DomainName</arg>
<arg>NTP</arg>
<arg>DNS</arg>
<arg>RamDiskSize</arg>
<arg>ThinProvisioned</arg>
<arg>Timezone</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.152491" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.153491" level="INFO">${description} = Retrieve Platform Summary</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.153491" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:25.214261" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/platform/v1/node-manager/clusters HTTP/11" 200 26</msg>
<msg time="2024-12-04T20:05:25.214261" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/platform/v1/node-manager/clusters 
 path_url=/crosswork/platform/v1/node-manager/clusters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:25.215267" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/platform/v1/node-manager/clusters 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:12 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '26', 'Connection': 'keep-alive', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"CwClusterAndActions":{}} 
 </msg>
<msg time="2024-12-04T20:05:25.215267" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:25.215267" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:25.153491" elapsed="0.061776"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.216265" level="INFO">${json_response} = {'CwClusterAndActions': {}}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:25.216265" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.217288" level="INFO">${MSG} = --CNC Platform Specs--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Platform Specs--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.216265" elapsed="0.001023"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.218274" level="INFO">${search} = $..SchemaVersion</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.217288" elapsed="0.000986"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.233860" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.218274" elapsed="0.015586"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.234861" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.233860" elapsed="0.001001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.234861" elapsed="0.000000"/>
</kw>
<var name="${item}">SchemaVersion</var>
<status status="PASS" start="2024-12-04T20:05:25.217288" elapsed="0.017573"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.234861" level="INFO">${search} = $..CNC_VM_Image</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.234861" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.243440" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.234861" elapsed="0.008579"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.243440" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.243440" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.243440" elapsed="0.000000"/>
</kw>
<var name="${item}">CNC_VM_Image</var>
<status status="PASS" start="2024-12-04T20:05:25.234861" elapsed="0.008579"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.243440" level="INFO">${search} = $..ClusterIPStack</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.243440" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.251680" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.243440" elapsed="0.008240"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.251680" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.251680" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.251680" elapsed="0.000000"/>
</kw>
<var name="${item}">ClusterIPStack</var>
<status status="PASS" start="2024-12-04T20:05:25.243440" elapsed="0.008240"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.251680" level="INFO">${search} = $..ManagementVIP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.251680" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.259821" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.251680" elapsed="0.008141"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.259821" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.259821" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.259821" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementVIP</var>
<status status="PASS" start="2024-12-04T20:05:25.251680" elapsed="0.008141"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.260805" level="INFO">${search} = $..ManagementIPNetmask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.260805" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.267789" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.260805" elapsed="0.007980"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.268785" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.268785" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.268785" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPNetmask</var>
<status status="PASS" start="2024-12-04T20:05:25.259821" elapsed="0.008964"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.268785" level="INFO">${search} = $..ManagementIPGateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.268785" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.276854" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.268785" elapsed="0.008069"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.276854" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.276854" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.276854" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPGateway</var>
<status status="PASS" start="2024-12-04T20:05:25.268785" elapsed="0.008069"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.276854" level="INFO">${search} = $..DataVIP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.276854" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.285388" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.276854" elapsed="0.008534"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.285388" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.285388" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.285388" elapsed="0.000000"/>
</kw>
<var name="${item}">DataVIP</var>
<status status="PASS" start="2024-12-04T20:05:25.276854" elapsed="0.008534"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.285388" level="INFO">${search} = $..DataIPNetmask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.285388" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.293014" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.285388" elapsed="0.007626"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.294012" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.293014" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.294012" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPNetmask</var>
<status status="PASS" start="2024-12-04T20:05:25.285388" elapsed="0.008624"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.294012" level="INFO">${search} = $..DataIPGateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.294012" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.301029" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.294012" elapsed="0.007017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.302028" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.301029" elapsed="0.000999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.302028" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPGateway</var>
<status status="PASS" start="2024-12-04T20:05:25.294012" elapsed="0.008016"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.302028" level="INFO">${search} = $..DomainName</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.302028" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.309832" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.302028" elapsed="0.007804"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.309832" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.309832" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.309832" elapsed="0.000000"/>
</kw>
<var name="${item}">DomainName</var>
<status status="PASS" start="2024-12-04T20:05:25.302028" elapsed="0.007804"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.310818" level="INFO">${search} = $..NTP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.310818" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.317807" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.310818" elapsed="0.006989"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.317807" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.317807" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.318808" elapsed="0.000000"/>
</kw>
<var name="${item}">NTP</var>
<status status="PASS" start="2024-12-04T20:05:25.309832" elapsed="0.008976"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.318808" level="INFO">${search} = $..DNS</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.318808" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.326592" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.318808" elapsed="0.007784"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.326592" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.326592" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.326592" elapsed="0.000000"/>
</kw>
<var name="${item}">DNS</var>
<status status="PASS" start="2024-12-04T20:05:25.318808" elapsed="0.007784"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.326592" level="INFO">${search} = $..RamDiskSize</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.326592" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.334625" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.326592" elapsed="0.008033"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.334625" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.334625" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.334625" elapsed="0.000000"/>
</kw>
<var name="${item}">RamDiskSize</var>
<status status="PASS" start="2024-12-04T20:05:25.326592" elapsed="0.008033"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.335615" level="INFO">${search} = $..ThinProvisioned</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.335615" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.343535" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.335615" elapsed="0.007920"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.344535" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.343535" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.344535" elapsed="0.000000"/>
</kw>
<var name="${item}">ThinProvisioned</var>
<status status="PASS" start="2024-12-04T20:05:25.335615" elapsed="0.008920"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.344535" level="INFO">${search} = $..Timezone</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.344535" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.352535" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.344535" elapsed="0.008000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.353544" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.352535" elapsed="0.001009"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.353544" elapsed="0.000000"/>
</kw>
<var name="${item}">Timezone</var>
<status status="PASS" start="2024-12-04T20:05:25.344535" elapsed="0.009009"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:25.217288" elapsed="0.136256"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.353544" level="INFO">${CNC_PLATFORM} = ['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[...</msg>
<arg>${CNC_PLATFORM}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.353544" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:25.353544" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running information on the CNC Platform</doc>
<status status="PASS" start="2024-12-04T20:05:25.151490" elapsed="0.202054"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:25.354731" level="INFO">Set test message to:
--CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:[]
DNS:[]
RamDiskSize:[]
ThinProvisioned:[]
Timezone:[]

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:25.353544" elapsed="0.001187"/>
</kw>
<doc>Get key information on CNC Platform and hosting as per file spec [cnc-platform.txt]</doc>
<tag>DATA-COLLECTION</tag>
<tag>PLATFORM</tag>
<status status="PASS" start="2024-12-04T20:05:25.150490" elapsed="0.204241">--CNC Platform Specs--
SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:[]
DNS:[]
RamDiskSize:[]
ThinProvisioned:[]
Timezone:[]

</status>
</test>
<test id="s1-t4" name="Retrieve Node Info" line="59">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:25.355745" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.354731" elapsed="0.001014"/>
</kw>
<kw name="get-cnc-nodes" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.355745" level="INFO">${myurl} = /crosswork/platform/v2/cluster/dc/node/summary/list</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/cluster/dc/node/summary/list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.355745" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.355745" level="INFO">@{CNC_NODES} = [ ]</msg>
<var>@{CNC_NODES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.356744" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.356744" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.356744" level="INFO">@{FIELDS} = [ vm_name | node_id | node_type | node_resource.cpu_summary.total | node_resource.memory_summary.total | node_resource.disk_summary.total ]</msg>
<var>@{FIELDS}</var>
<arg>vm_name</arg>
<arg>node_id</arg>
<arg>node_type</arg>
<arg>node_resource.cpu_summary.total</arg>
<arg>node_resource.memory_summary.total</arg>
<arg>node_resource.disk_summary.total</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.356744" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.356744" level="INFO">${description} = Retrieve Node Info</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.356744" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:25.438359" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/platform/v2/cluster/dc/node/summary/list HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:25.438359" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/platform/v2/cluster/dc/node/summary/list 
 path_url=/crosswork/platform/v2/cluster/dc/node/summary/list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:25.438359" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/platform/v2/cluster/dc/node/summary/list 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:12 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"node_summary":[{"node_name":"10-67-22-37-hybrid.nbnco.net.au","node_id":"10.67.22.37","node_health":"Healthy","node_type":"HYBRID","vm_name":"10-67-22-37-hybrid.nbnco.net.au","node_resource":{"cpu_summary":{"current_usage":"61 %","used":"7.36 cores","total":"12.00 cores","thresholds":{"medium_range_start":60,"high_range_start":90}},"memory_summary":{"current_usage":"44 %","used":"41.07 GB","total":"94.29 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"disk_summary":{"current_usage":"8 %","used":"85.65 GB","total":"1032.06 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"node_cpu_summary":{"current_usage":"97 %","used":"10.66 cores","total":"11.00 cores","thresholds":{"medium_range_start":98,"high_range_start":99}},"node_mem_summary":{"current_usage":"68 %","used":"66359132160.00 B","total":"97544253440.00 B","thresholds":{"medium_range_start":98,"high_range_start":99}},"last_updated_time":"Wednesday, 04-Dec-24 09:59:08 UTC"},"actions":{"cancelJob":false,"deployVM":false,"eraseVM":false,"retry":false,"viewDetails":true},"vm_state":"Unknown","vm_id":"","availability":"Protected","recommendation_available":false},{"node_name":"10-67-22-38-hybrid.nbnco.net.au","node_id":"10.67.22.38","node_health":"Healthy","node_type":"HYBRID","vm_name":"10-67-22-38-hybrid.nbnco.net.au","node_resource":{"cpu_summary":{"current_usage":"45 %","used":"5.39 cores","total":"12.00 cores","thresholds":{"medium_range_start":60,"high_range_start":90}},"memory_summary":{"current_usage":"34 %","used":"32.31 GB","total":"94.39 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"disk_summary":{"current_usage":"10 %","used":"101.19 GB","total":"1032.11 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"node_cpu_summary":{"current_usage":"93 %","used":"10.18 cores","total":"11.00 cores","thresholds":{"medium_range_start":98,"high_range_start":99}},"node_mem_summary":{"current_usage":"66 %","used":"64050167808.00 B","total":"97644740608.00 B","thresholds":{"medium_range_start":98,"high_range_start":99}},"last_updated_time":"Wednesday, 04-Dec-24 09:59:08 UTC"},"actions":{"cancelJob":false,"deployVM":false,"eraseVM":false,"retry":false,"viewDetails":true},"vm_state":"Unknown","vm_id":"","availability":"Protected","recommendation_available":false},{"node_name":"10-67-22-39-hybrid.nbnco.net.au","node_id":"10.67.22.39","node_health":"Healthy","node_type":"HYBRID","vm_name":"10-67-22-39-hybrid.nbnco.net.au","node_resource":{"cpu_summary":{"current_usage":"58 %","used":"6.95 cores","total":"12.00 cores","thresholds":{"medium_range_start":60,"high_range_start":90}},"memory_summary":{"current_usage":"43 %","used":"40.96 GB","total":"94.29 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"disk_summary":{"current_usage":"10 %","used":"102.23 GB","total":"1032.06 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"node_cpu_summary":{"current_usage":"94 %","used":"10.36 cores","total":"11.00 cores","thresholds":{"medium_range_start":98,"high_range_start":99}},"node_mem_summary":{"current_usage":"65 %","used":"63548948480.00 B","total":"97544257536.00 B","thresholds":{"medium_range_start":98,"high_range_start":99}},"last_updated_time":"Wednesday, 04-Dec-24 09:59:08 UTC"},"actions":{"cancelJob":false,"deployVM":false,"eraseVM":false,"retry":false,"viewDetails":true},"vm_state":"Unknown","vm_id":"","availability":"Protected","recommendation_available":false}]} 
 </msg>
<msg time="2024-12-04T20:05:25.439775" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:25.439775" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:25.356744" elapsed="0.083031"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.441796" level="INFO">${json_response} = {'node_summary': [{'node_name': '10-67-22-37-hybrid.nbnco.net.au', 'node_id': '10.67.22.37', 'node_health': 'Healthy', 'node_type': 'HYBRID', 'vm_name': '10-67-22-37-hybrid.nbnco.net.au', 'node_resour...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:25.440795" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.441796" level="INFO">${MSG} = --CNC Node Info--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Node Info--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.441796" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.444794" level="INFO">${key} = 10-67-22-37-hybrid.nbnco.net.au</msg>
<var>${key}</var>
<arg>${data['node_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.443796" elapsed="0.000998"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.444794" level="INFO">${search} = $.vm_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.444794" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.458587" level="INFO">${values} = ['10-67-22-37-hybrid.nbnco.net.au']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.444794" elapsed="0.013793"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.459579" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.458587" elapsed="0.000992"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.459579" elapsed="0.000000"/>
</kw>
<var name="${item}">vm_name</var>
<status status="PASS" start="2024-12-04T20:05:25.444794" elapsed="0.014785"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.459579" level="INFO">${search} = $.node_id</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.459579" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.468532" level="INFO">${values} = ['10.67.22.37']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.459579" elapsed="0.008953"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.468532" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.468532" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.468532" elapsed="0.000000"/>
</kw>
<var name="${item}">node_id</var>
<status status="PASS" start="2024-12-04T20:05:25.459579" elapsed="0.008953"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.468532" level="INFO">${search} = $.node_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.468532" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.476835" level="INFO">${values} = ['HYBRID']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.468532" elapsed="0.008303"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.476835" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.476835" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.476835" elapsed="0.000000"/>
</kw>
<var name="${item}">node_type</var>
<status status="PASS" start="2024-12-04T20:05:25.468532" elapsed="0.008303"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.477848" level="INFO">${search} = $.node_resource.cpu_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.476835" elapsed="0.001013"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.484848" level="INFO">${values} = ['12.00 cores']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.477848" elapsed="0.007000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.484848" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.484848" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.484848" elapsed="0.001000"/>
</kw>
<var name="${item}">node_resource.cpu_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.476835" elapsed="0.009013"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.485848" level="INFO">${search} = $.node_resource.memory_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.485848" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.493643" level="INFO">${values} = ['94.29 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.485848" elapsed="0.007795"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.494646" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.493643" elapsed="0.001003"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.494646" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.memory_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.485848" elapsed="0.008798"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.494646" level="INFO">${search} = $.node_resource.disk_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.494646" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.502641" level="INFO">${values} = ['1032.06 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.494646" elapsed="0.007995"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.502641" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.502641" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.502641" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.disk_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.494646" elapsed="0.007995"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:25.444794" elapsed="0.057847"/>
</for>
<var name="${data}">{'node_name': '10-67-22-37-hybrid.nbnco.net.au', 'node_id': '10.67.22.37', 'node_health': 'Healthy', 'node_type': 'HYBRID', 'vm_name': '10-67-22-37-hybrid.nbnco.net.au', 'node_resource': {'cpu_summary...</var>
<status status="PASS" start="2024-12-04T20:05:25.443796" elapsed="0.058845"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.502641" level="INFO">${key} = 10-67-22-38-hybrid.nbnco.net.au</msg>
<var>${key}</var>
<arg>${data['node_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.502641" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.503641" level="INFO">${search} = $.vm_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.503641" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.510956" level="INFO">${values} = ['10-67-22-38-hybrid.nbnco.net.au']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.503641" elapsed="0.007315"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.510956" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.510956" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.510956" elapsed="0.000000"/>
</kw>
<var name="${item}">vm_name</var>
<status status="PASS" start="2024-12-04T20:05:25.503641" elapsed="0.008312"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.511953" level="INFO">${search} = $.node_id</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.511953" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.530011" level="INFO">${values} = ['10.67.22.38']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.511953" elapsed="0.018058"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.530011" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.530011" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.531011" elapsed="0.000000"/>
</kw>
<var name="${item}">node_id</var>
<status status="PASS" start="2024-12-04T20:05:25.511953" elapsed="0.019058"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.531011" level="INFO">${search} = $.node_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.531011" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.538264" level="INFO">${values} = ['HYBRID']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.531011" elapsed="0.007253"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.538264" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.538264" elapsed="0.001014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.539278" elapsed="0.000000"/>
</kw>
<var name="${item}">node_type</var>
<status status="PASS" start="2024-12-04T20:05:25.531011" elapsed="0.008267"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.539278" level="INFO">${search} = $.node_resource.cpu_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.539278" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.546292" level="INFO">${values} = ['12.00 cores']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.539278" elapsed="0.007014"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.547295" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.547295" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.547295" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.cpu_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.539278" elapsed="0.008017"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.547295" level="INFO">${search} = $.node_resource.memory_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.547295" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.554515" level="INFO">${values} = ['94.39 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.547295" elapsed="0.007220"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.554515" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.554515" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.554515" elapsed="0.001031"/>
</kw>
<var name="${item}">node_resource.memory_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.547295" elapsed="0.008251"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.555546" level="INFO">${search} = $.node_resource.disk_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.555546" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.563525" level="INFO">${values} = ['1032.11 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.555546" elapsed="0.007979"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.563525" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.563525" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.563525" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.disk_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.555546" elapsed="0.007979"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:25.503641" elapsed="0.059884"/>
</for>
<var name="${data}">{'node_name': '10-67-22-38-hybrid.nbnco.net.au', 'node_id': '10.67.22.38', 'node_health': 'Healthy', 'node_type': 'HYBRID', 'vm_name': '10-67-22-38-hybrid.nbnco.net.au', 'node_resource': {'cpu_summary...</var>
<status status="PASS" start="2024-12-04T20:05:25.502641" elapsed="0.060884"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.564525" level="INFO">${key} = 10-67-22-39-hybrid.nbnco.net.au</msg>
<var>${key}</var>
<arg>${data['node_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.563525" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.564525" level="INFO">${search} = $.vm_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.564525" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.572094" level="INFO">${values} = ['10-67-22-39-hybrid.nbnco.net.au']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.564525" elapsed="0.007569"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.572094" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.572094" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.572094" elapsed="0.000000"/>
</kw>
<var name="${item}">vm_name</var>
<status status="PASS" start="2024-12-04T20:05:25.564525" elapsed="0.007569"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.573121" level="INFO">${search} = $.node_id</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.573121" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.580669" level="INFO">${values} = ['10.67.22.39']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.573121" elapsed="0.007548"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.580669" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.580669" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.580669" elapsed="0.000000"/>
</kw>
<var name="${item}">node_id</var>
<status status="PASS" start="2024-12-04T20:05:25.573121" elapsed="0.007548"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.580669" level="INFO">${search} = $.node_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.580669" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.589218" level="INFO">${values} = ['HYBRID']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.581669" elapsed="0.007549"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.590214" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.590214" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.590214" elapsed="0.000000"/>
</kw>
<var name="${item}">node_type</var>
<status status="PASS" start="2024-12-04T20:05:25.580669" elapsed="0.009545"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.590214" level="INFO">${search} = $.node_resource.cpu_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.590214" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.598196" level="INFO">${values} = ['12.00 cores']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.590214" elapsed="0.007982"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.598196" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.598196" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.598196" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.cpu_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.590214" elapsed="0.007982"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.599196" level="INFO">${search} = $.node_resource.memory_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.599196" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.607867" level="INFO">${values} = ['94.29 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.599196" elapsed="0.008671"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.607867" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.607867" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.607867" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.memory_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.599196" elapsed="0.008671"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.607867" level="INFO">${search} = $.node_resource.disk_summary.total</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.607867" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.615735" level="INFO">${values} = ['1032.06 GB']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.607867" elapsed="0.007868"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.616732" level="INFO">${MSG} = --CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.615735" elapsed="0.000997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.616732" elapsed="0.000000"/>
</kw>
<var name="${item}">node_resource.disk_summary.total</var>
<status status="PASS" start="2024-12-04T20:05:25.607867" elapsed="0.008865"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:25.564525" elapsed="0.052207"/>
</for>
<var name="${data}">{'node_name': '10-67-22-39-hybrid.nbnco.net.au', 'node_id': '10.67.22.39', 'node_health': 'Healthy', 'node_type': 'HYBRID', 'vm_name': '10-67-22-39-hybrid.nbnco.net.au', 'node_resource': {'cpu_summary...</var>
<status status="PASS" start="2024-12-04T20:05:25.563525" elapsed="0.053207"/>
</iter>
<var>${data}</var>
<value>@{json_response['node_summary']}</value>
<status status="PASS" start="2024-12-04T20:05:25.442798" elapsed="0.173934"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.616732" level="INFO">${CNC_NODES} = ["10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']", "10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']", "10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID']", "10-6...</msg>
<arg>${CNC_NODES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.616732" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.616732" level="INFO">${CNC_NODES_HEALTH} = []</msg>
<arg>${CNC_NODES_HEALTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:25.616732" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:25.616732" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running information on the CNC nodes</doc>
<status status="PASS" start="2024-12-04T20:05:25.355745" elapsed="0.260987"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:25.617733" level="INFO">Set test message to:
--CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-37-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-37-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.29 GB']
10-67-22-37-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.06 GB']
10-67-22-38-hybrid.nbnco.net.au|vm_name:['10-67-22-38-hybrid.nbnco.net.au']
10-67-22-38-hybrid.nbnco.net.au|node_id:['10.67.22.38']
10-67-22-38-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-38-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-38-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.39 GB']
10-67-22-38-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.11 GB']
10-67-22-39-hybrid.nbnco.net.au|vm_name:['10-67-22-39-hybrid.nbnco.net.au']
10-67-22-39-hybrid.nbnco.net.au|node_id:['10.67.22.39']
10-67-22-39-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-39-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-39-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.29 GB']
10-67-22-39-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.06 GB']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:25.617733" elapsed="0.000000"/>
</kw>
<doc>Get key information on CNC nodes</doc>
<tag>DATA-COLLECTION</tag>
<tag>PLATFORM</tag>
<status status="PASS" start="2024-12-04T20:05:25.354731" elapsed="0.263002">--CNC Node Info--
10-67-22-37-hybrid.nbnco.net.au|vm_name:['10-67-22-37-hybrid.nbnco.net.au']
10-67-22-37-hybrid.nbnco.net.au|node_id:['10.67.22.37']
10-67-22-37-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-37-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-37-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.29 GB']
10-67-22-37-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.06 GB']
10-67-22-38-hybrid.nbnco.net.au|vm_name:['10-67-22-38-hybrid.nbnco.net.au']
10-67-22-38-hybrid.nbnco.net.au|node_id:['10.67.22.38']
10-67-22-38-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-38-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-38-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.39 GB']
10-67-22-38-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.11 GB']
10-67-22-39-hybrid.nbnco.net.au|vm_name:['10-67-22-39-hybrid.nbnco.net.au']
10-67-22-39-hybrid.nbnco.net.au|node_id:['10.67.22.39']
10-67-22-39-hybrid.nbnco.net.au|node_type:['HYBRID']
10-67-22-39-hybrid.nbnco.net.au|node_resource.cpu_summary.total:['12.00 cores']
10-67-22-39-hybrid.nbnco.net.au|node_resource.memory_summary.total:['94.29 GB']
10-67-22-39-hybrid.nbnco.net.au|node_resource.disk_summary.total:['1032.06 GB']

</status>
</test>
<test id="s1-t5" name="Retrieve Devices" line="66">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:25.618739" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-devices-v2" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.618739" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.618739" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.001648"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">${description} = Retrieve Devices</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">@{CNC_DEVICES} = [ ]</msg>
<var>@{CNC_DEVICES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">@{CNC_DEVICES_HEALTH} = [ ]</msg>
<var>@{CNC_DEVICES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">@{FIELDS_DATA} = [ profile | dg_name | reachability_check | product_info.software_type | product_info.software_version | product_info.manufacturer | connectivity_info..type | connectivity_info..port | connectivity_inf...</msg>
<var>@{FIELDS_DATA}</var>
<arg>profile</arg>
<arg>dg_name</arg>
<arg>reachability_check</arg>
<arg>product_info.software_type</arg>
<arg>product_info.software_version</arg>
<arg>product_info.manufacturer</arg>
<arg>connectivity_info..type</arg>
<arg>connectivity_info..port</arg>
<arg>connectivity_info..ipaddrs</arg>
<arg>providers_family</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">@{FIELDS_DATA_HEALTH} = [ admin_state | operational_state | reachability_state | nso_state | errors ]</msg>
<var>@{FIELDS_DATA_HEALTH}</var>
<arg>admin_state</arg>
<arg>operational_state</arg>
<arg>reachability_state</arg>
<arg>nso_state</arg>
<arg>errors</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.620387" level="INFO">@{FIELDS_EVENTS} = [ alarm_id ]</msg>
<var>@{FIELDS_EVENTS}</var>
<arg>alarm_id</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:25.620387" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.621402" level="INFO">${myurl} = /crosswork/inventory/v1/nodes/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/nodes/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.621402" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.621402" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.621402" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.621402" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:25.621402" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:25.874643" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/inventory/v1/nodes/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:25.874643" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/inventory/v1/nodes/query 
 path_url=/crosswork/inventory/v1/nodes/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-04T20:05:25.874643" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/inventory/v1/nodes/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.106","mask":"24"},"uuid":"1f7ff894-9129-421b-a693-4d5589b043e5","host_name":"GRE-2.nbnco.net.au","profile":"device","reachability_state":"CONN_STATE_UNREACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.106","mask":"24"}],"port":161,"timeout":"120","reachability_state":"CONN_STATE_UNREACHABLE","reachability_state_upd_time":"1733291358","error":"[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details"},{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.106","mask":"24"}],"port":22,"timeout":"120","reachability_state":"CONN_STATE_UNREACHABLE","reachability_state_upd_time":"1733291358","error":"[REACHABILITY SSH ERROR]:Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.106","mask":"24"}],"port":9339,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"7.11.1","product_type":"Cisco ASR 9902 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.3090","capability":["SNMP","GNMI","YANG_CLI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_UNKNOWN"},"geo_info":{"coordinates":{},"range_incr":{}},"routing_info":{"te_router_id":"22.22.22.22"},"uptime":"24w3d11h12m52s","last_upd_time":"1733290947","reachability_check":"REACH_CHECK_ENABLE","reachability_state_upd_time":"1733291358","operational_state":"ROBOT_OPER_STATE_ERROR","errors":["Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22"],"state_map":{"0":{"value":"DOWN","last_updated_time":"1733306356","next_check_time":"1733306356","info":"ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;"}},"Inventory":{"sys_desc":"Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.","sys_location":"3MEL"},"dg_uuid":"eb4fda3b-3001-4701-bc00-5d9d93b58cef","providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso":{"provider_name":"nso","provider_node_id":"GRE-2.nbnco.net.au","provider_uuid":"c0abd589-7850-4653-9df9-663f1c2d86c8"}}}},"dg_name":"pool1-1","nso_state":"SYNCED","nso_timestamp":"1732071721","tag_names":["sp-gnmi","sp-snmp","gnmi","cli","reach-check","snmp","ios-xr","clock-drift-check","te-tunnel-id","basics"],"device_fqdn":{"host_name":"GRE-2","domain_name":"nbnco.net.au"}},{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.115","mask":"24"},"uuid":"61d6967c-7582-41d8-a711-5ab9363b81ce","host_name":"GRE-1.nbnco.net.au","profile":"device","reachability_state":"CONN_STATE_UNREACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.115","mask":"24"}],"port":161,"timeout":"300","reachability_state":"CONN_STATE_UNREACHABLE","reachability_state_upd_time":"1733291916","error":"[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details"},{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.115","mask":"24"}],"port":22,"timeout":"600","reachability_state":"CONN_STATE_UNREACHABLE","reachability_state_upd_time":"1733291916","error":"[REACHABILITY SSH ERROR]:Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.115","mask":"24"}],"port":9339,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"7.11.1","product_type":"Cisco ASR 9902 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.3090","capability":["SNMP","GNMI","YANG_CLI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_UNKNOWN"},"geo_info":{"coordinates":{},"range_incr":{}},"routing_info":{"te_router_id":"11.11.11.11"},"uptime":"24w3d11h0m35s","last_upd_time":"1733290947","reachability_check":"REACH_CHECK_ENABLE","reachability_state_upd_time":"1733291916","operational_state":"ROBOT_OPER_STATE_ERROR","errors":["Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22"],"state_map":{"0":{"value":"DOWN","last_updated_time":"1733306314","next_check_time":"1733306314","info":"ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;"}},"Inventory":{"sys_desc":"Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.","sys_location":"3MEL"},"dg_uuid":"eb4fda3b-3001-4701-bc00-5d9d93b58cef","providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso":{"provider_name":"nso","provider_node_id":"GRE-1.nbnco.net.au","provider_uuid":"c0abd589-7850-4653-9df9-663f1c2d86c8"}}}},"dg_name":"pool1-1","nso_state":"SYNCED","nso_timestamp":"1732072335","tag_names":["sp-gnmi","sp-snmp","gnmi","cli","reach-check","snmp","ios-xr","clock-drift-check","te-tunnel-id","basics"],"device_fqdn":{"host_name":"GRE-1","domain_name":"nbnco.net.au"}},{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"24"},"uuid":"96c0d2af-ea97-4eb2-aa16-ea74c57c192d","host_name":"vGRE-0.nbnco.com.au","profile":"vgre","reachability_state":"CONN_STATE_UNKNOWN","admin_state":"ROBOT_ADMIN_STATE_DOWN","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"24"}],"port":11022,"timeout":"120","reachability_state":"CONN_STATE_UNKNOWN"},{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"24"}],"port":10022,"timeout":"120","reachability_state":"CONN_STATE_UNKNOWN"}],"product_info":{"software_type":"IOS-XR","software_version":"7.11.1","product_type":"Cisco ASR 9000 Series Aggregation Services Routers","capability":["SNMP","YANG_CLI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_UNKNOWN"},"geo_info":{"coordinates":{},"range_incr":{}},"routing_info":{},"last_upd_time":"1733290256","reachability_check":"REACH_CHECK_ENABLE","operational_state":"ROBOT_OPER_STATE_ADMIN_DOWN","errors":["Info - Node Operational State move to down."],"Inventory":{},"providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso":{"provider_name":"nso","provider_node_id":"vGRE-0.nbnco.com.au","provider_uuid":"c0abd589-7850-4653-9df9-663f1c2d86c8"}}}},"nso_state":"SYNCED","nso_timestamp":"1732237593","tag_names":["cli","snmp","reach-check"],"device_fqdn":{}}],"total_count":3,"result_count":3} 
 </msg>
<msg time="2024-12-04T20:05:25.875641" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:25.875641" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:25.621402" elapsed="0.254239"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.877157" level="INFO">${json_response} = {'data': [{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}, 'uuid': '1f7ff894-9129-421b-a693-4d5589b043e5', 'host_name': 'GRE-2.nbnco.net.au', 'profile': '...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:25.876641" elapsed="0.000516"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.878213" level="INFO">{'data': [{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}, 'uuid': '1f7ff894-9129-421b-a693-4d5589b043e5', 'host_name': 'GRE-2.nbnco.net.au', 'profile': 'device', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'admin_state': 'ROBOT_ADMIN_STATE_UP', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 161, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291358', 'error': '[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 22, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291358', 'error': '[REACHABILITY SSH ERROR]:Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;'}, {'type': 'ROBOT_MSVC_TRANS_GNMI', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 9339, 'timeout': '120', 'reachability_state': 'CONN_STATE_REACHABLE', 'encoding_type': 'PROTO'}], 'product_info': {'software_type': 'IOS XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9902 Router', 'product_family': 'Routers', 'product_series': 'Cisco ASR 9000 Series Aggregation Services Routers', 'manufacturer': 'Cisco Systems', 'sys_object_id': '1.3.6.1.4.1.9.1.3090', 'capability': ['SNMP', 'GNMI', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {'te_router_id': '22.22.22.22'}, 'uptime': '24w3d11h12m52s', 'last_upd_time': '1733290947', 'reachability_check': 'REACH_CHECK_ENABLE', 'reachability_state_upd_time': '1733291358', 'operational_state': 'ROBOT_OPER_STATE_ERROR', 'errors': ['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22'], 'state_map': {'0': {'value': 'DOWN', 'last_updated_time': '1733306356', 'next_check_time': '1733306356', 'info': 'ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;'}}, 'Inventory': {'sys_desc': 'Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.', 'sys_location': '3MEL'}, 'dg_uuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'dg_name': 'pool1-1', 'nso_state': 'SYNCED', 'nso_timestamp': '1732071721', 'tag_names': ['sp-gnmi', 'sp-snmp', 'gnmi', 'cli', 'reach-check', 'snmp', 'ios-xr', 'clock-drift-check', 'te-tunnel-id', 'basics'], 'device_fqdn': {'host_name': 'GRE-2', 'domain_name': 'nbnco.net.au'}}, {'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}, 'uuid': '61d6967c-7582-41d8-a711-5ab9363b81ce', 'host_name': 'GRE-1.nbnco.net.au', 'profile': 'device', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'admin_state': 'ROBOT_ADMIN_STATE_UP', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 161, 'timeout': '300', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291916', 'error': '[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 22, 'timeout': '600', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291916', 'error': '[REACHABILITY SSH ERROR]:Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;'}, {'type': 'ROBOT_MSVC_TRANS_GNMI', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 9339, 'timeout': '120', 'reachability_state': 'CONN_STATE_REACHABLE', 'encoding_type': 'PROTO'}], 'product_info': {'software_type': 'IOS XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9902 Router', 'product_family': 'Routers', 'product_series': 'Cisco ASR 9000 Series Aggregation Services Routers', 'manufacturer': 'Cisco Systems', 'sys_object_id': '1.3.6.1.4.1.9.1.3090', 'capability': ['SNMP', 'GNMI', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {'te_router_id': '11.11.11.11'}, 'uptime': '24w3d11h0m35s', 'last_upd_time': '1733290947', 'reachability_check': 'REACH_CHECK_ENABLE', 'reachability_state_upd_time': '1733291916', 'operational_state': 'ROBOT_OPER_STATE_ERROR', 'errors': ['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22'], 'state_map': {'0': {'value': 'DOWN', 'last_updated_time': '1733306314', 'next_check_time': '1733306314', 'info': 'ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;'}}, 'Inventory': {'sys_desc': 'Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.', 'sys_location': '3MEL'}, 'dg_uuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'dg_name': 'pool1-1', 'nso_state': 'SYNCED', 'nso_timestamp': '1732072335', 'tag_names': ['sp-gnmi', 'sp-snmp', 'gnmi', 'cli', 'reach-check', 'snmp', 'ios-xr', 'clock-drift-check', 'te-tunnel-id', 'basics'], 'device_fqdn': {'host_name': 'GRE-1', 'domain_name': 'nbnco.net.au'}}, {'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}, 'uuid': '96c0d2af-ea97-4eb2-aa16-ea74c57c192d', 'host_name': 'vGRE-0.nbnco.com.au', 'profile': 'vgre', 'reachability_state': 'CONN_STATE_UNKNOWN', 'admin_state': 'ROBOT_ADMIN_STATE_DOWN', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], 'port': 11022, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNKNOWN'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], 'port': 10022, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNKNOWN'}], 'product_info': {'software_type': 'IOS-XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9000 Series Aggregation Services Routers', 'capability': ['SNMP', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {}, 'last_upd_time': '1733290256', 'reachability_check': 'REACH_CHECK_ENABLE', 'operational_state': 'ROBOT_OPER_STATE_ADMIN_DOWN', 'errors': ['Info - Node Operational State move to down.'], 'Inventory': {}, 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'nso_state': 'SYNCED', 'nso_timestamp': '1732237593', 'tag_names': ['cli', 'snmp', 'reach-check'], 'device_fqdn': {}}], 'total_count': 3, 'result_count': 3}</msg>
<arg>${json_response}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:25.877157" elapsed="0.001056"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.878213" level="INFO">${MSG} = --Devices--
</msg>
<arg>${MSG}</arg>
<arg>--Devices--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.878213" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.880213" level="INFO">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}, 'uuid': '1f7ff894-9129-421b-a693-4d5589b043e5', 'host_name': 'GRE-2.nbnco.net.au', 'profile': 'device', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'admin_state': 'ROBOT_ADMIN_STATE_UP', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 161, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291358', 'error': '[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 22, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291358', 'error': '[REACHABILITY SSH ERROR]:Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;'}, {'type': 'ROBOT_MSVC_TRANS_GNMI', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], 'port': 9339, 'timeout': '120', 'reachability_state': 'CONN_STATE_REACHABLE', 'encoding_type': 'PROTO'}], 'product_info': {'software_type': 'IOS XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9902 Router', 'product_family': 'Routers', 'product_series': 'Cisco ASR 9000 Series Aggregation Services Routers', 'manufacturer': 'Cisco Systems', 'sys_object_id': '1.3.6.1.4.1.9.1.3090', 'capability': ['SNMP', 'GNMI', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {'te_router_id': '22.22.22.22'}, 'uptime': '24w3d11h12m52s', 'last_upd_time': '1733290947', 'reachability_check': 'REACH_CHECK_ENABLE', 'reachability_state_upd_time': '1733291358', 'operational_state': 'ROBOT_OPER_STATE_ERROR', 'errors': ['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22'], 'state_map': {'0': {'value': 'DOWN', 'last_updated_time': '1733306356', 'next_check_time': '1733306356', 'info': 'ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.106: Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22;'}}, 'Inventory': {'sys_desc': 'Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.', 'sys_location': '3MEL'}, 'dg_uuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'dg_name': 'pool1-1', 'nso_state': 'SYNCED', 'nso_timestamp': '1732071721', 'tag_names': ['sp-gnmi', 'sp-snmp', 'gnmi', 'cli', 'reach-check', 'snmp', 'ios-xr', 'clock-drift-check', 'te-tunnel-id', 'basics'], 'device_fqdn': {'host_name': 'GRE-2', 'domain_name': 'nbnco.net.au'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:25.880213" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.888948" level="INFO">${key} = ['GRE-2.nbnco.net.au']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.880213" elapsed="0.008735"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.888948" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.888948" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.895900" level="INFO">${values} = ['device']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.888948" elapsed="0.006952"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.896898" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.895900" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.896898" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-04T20:05:25.888948" elapsed="0.007950"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.896898" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.896898" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.904589" level="INFO">${values} = ['pool1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.896898" elapsed="0.007691"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.904589" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.904589" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.904589" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-04T20:05:25.896898" elapsed="0.007691"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.904589" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.904589" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.912659" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.904589" elapsed="0.008070"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.913653" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.912659" elapsed="0.000994"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.913653" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-04T20:05:25.904589" elapsed="0.009064"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.913653" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.913653" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.921079" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.913653" elapsed="0.007426"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.921079" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.921079" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.921079" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-04T20:05:25.913653" elapsed="0.007426"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.922090" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.922090" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.929098" level="INFO">${values} = ['7.11.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.922090" elapsed="0.007008"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.929098" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.929098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.929098" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-04T20:05:25.922090" elapsed="0.007008"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.930413" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.930413" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.938003" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.930413" elapsed="0.007590"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.938003" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.938003" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.938003" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-04T20:05:25.930413" elapsed="0.007590"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.938003" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.938003" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.946054" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.939041" elapsed="0.007013"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.946054" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.946054" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.946054" elapsed="0.001001"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-04T20:05:25.938003" elapsed="0.009052"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.947055" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.947055" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.954640" level="INFO">${values} = [161, 22, 9339]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.947055" elapsed="0.007585"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.954640" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.954640" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.954640" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-04T20:05:25.947055" elapsed="0.007585"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.955655" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.954640" elapsed="0.001015"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.964671" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.955655" elapsed="0.009016"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.964671" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.964671" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.964671" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-04T20:05:25.954640" elapsed="0.010031"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.964671" level="INFO">${search} = $.providers_family</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.964671" elapsed="0.001044"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.972542" level="INFO">${values} = [{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.965715" elapsed="0.006827"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.973545" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:25.972542" elapsed="0.001003"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.973545" elapsed="0.000000"/>
</kw>
<var name="${item}">providers_family</var>
<status status="PASS" start="2024-12-04T20:05:25.964671" elapsed="0.008874"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:25.888948" elapsed="0.084597"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.973545" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.973545" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.982184" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.973545" elapsed="0.008639"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.982184" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-04T20:05:25.973545" elapsed="0.008639"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.982184" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.982184" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.989931" level="INFO">${values} = ['ROBOT_OPER_STATE_ERROR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.982184" elapsed="0.007747"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.989931" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-04T20:05:25.982184" elapsed="0.007747"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.990931" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.990931" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:25.997892" level="INFO">${values} = ['CONN_STATE_UNREACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.990931" elapsed="0.006961"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:25.998888" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-04T20:05:25.990931" elapsed="0.007957"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:25.998888" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:25.998888" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.006435" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:25.998888" elapsed="0.007547"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.006435" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-04T20:05:25.998888" elapsed="0.007547"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.006435" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.006435" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.014434" level="INFO">${values} = [['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.006435" elapsed="0.007999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.014434" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-04T20:05:26.006435" elapsed="0.007999"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-04T20:05:25.973545" elapsed="0.040889"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}, 'uuid': '1f7ff894-9129-421b-a693-4d5589b043e5', 'host_name': 'GRE-2.nbnco.net.au', 'profile': 'device', '...</var>
<status status="PASS" start="2024-12-04T20:05:25.880213" elapsed="0.134221"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.014434" level="INFO">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}, 'uuid': '61d6967c-7582-41d8-a711-5ab9363b81ce', 'host_name': 'GRE-1.nbnco.net.au', 'profile': 'device', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'admin_state': 'ROBOT_ADMIN_STATE_UP', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 161, 'timeout': '300', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291916', 'error': '[REACHABILITY SNMP ERROR]:ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 22, 'timeout': '600', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'reachability_state_upd_time': '1733291916', 'error': '[REACHABILITY SSH ERROR]:Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;'}, {'type': 'ROBOT_MSVC_TRANS_GNMI', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], 'port': 9339, 'timeout': '120', 'reachability_state': 'CONN_STATE_REACHABLE', 'encoding_type': 'PROTO'}], 'product_info': {'software_type': 'IOS XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9902 Router', 'product_family': 'Routers', 'product_series': 'Cisco ASR 9000 Series Aggregation Services Routers', 'manufacturer': 'Cisco Systems', 'sys_object_id': '1.3.6.1.4.1.9.1.3090', 'capability': ['SNMP', 'GNMI', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {'te_router_id': '11.11.11.11'}, 'uptime': '24w3d11h0m35s', 'last_upd_time': '1733290947', 'reachability_check': 'REACH_CHECK_ENABLE', 'reachability_state_upd_time': '1733291916', 'operational_state': 'ROBOT_OPER_STATE_ERROR', 'errors': ['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22'], 'state_map': {'0': {'value': 'DOWN', 'last_updated_time': '1733306314', 'next_check_time': '1733306314', 'info': 'ErrorType ConnectionError ,Invalid SNMP credentials or Wrong SNMP connectivity details Error 10.67.22.115: Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22;'}}, 'Inventory': {'sys_desc': 'Cisco IOS XR Software (ASR9K), Version 7.11.1  Copyright (c) 2013-2023 by Cisco Systems, Inc.', 'sys_location': '3MEL'}, 'dg_uuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'dg_name': 'pool1-1', 'nso_state': 'SYNCED', 'nso_timestamp': '1732072335', 'tag_names': ['sp-gnmi', 'sp-snmp', 'gnmi', 'cli', 'reach-check', 'snmp', 'ios-xr', 'clock-drift-check', 'te-tunnel-id', 'basics'], 'device_fqdn': {'host_name': 'GRE-1', 'domain_name': 'nbnco.net.au'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:26.014434" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.035461" level="INFO">${key} = ['GRE-1.nbnco.net.au']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.014434" elapsed="0.021027"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.035461" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.035461" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.043231" level="INFO">${values} = ['device']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.035461" elapsed="0.007770"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.043231" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.043231" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.043231" elapsed="0.000991"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-04T20:05:26.035461" elapsed="0.008761"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.044222" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.044222" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.051211" level="INFO">${values} = ['pool1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.044222" elapsed="0.006989"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.052213" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.051211" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.052213" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-04T20:05:26.044222" elapsed="0.007991"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.052213" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.052213" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.060182" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.052213" elapsed="0.007969"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.060182" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.060182" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.060182" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-04T20:05:26.052213" elapsed="0.007969"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.060182" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.060182" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.068167" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.060182" elapsed="0.007985"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.068167" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.068167" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.068167" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-04T20:05:26.060182" elapsed="0.007985"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.068167" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.068167" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.076864" level="INFO">${values} = ['7.11.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.069194" elapsed="0.007670"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.076864" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.076864" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.076864" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-04T20:05:26.068167" elapsed="0.008697"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.076864" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.076864" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.084916" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.076864" elapsed="0.008052"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.084916" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.084916" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.084916" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-04T20:05:26.076864" elapsed="0.008052"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.084916" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.084916" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.092656" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.084916" elapsed="0.007740"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.093659" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.092656" elapsed="0.001003"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.093659" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-04T20:05:26.084916" elapsed="0.008743"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.093659" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.093659" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.101643" level="INFO">${values} = [161, 22, 9339]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.093659" elapsed="0.007984"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.101643" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.101643" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.101643" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-04T20:05:26.093659" elapsed="0.007984"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.101643" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.101643" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.110184" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.102641" elapsed="0.007543"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.111182" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.110184" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.111182" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-04T20:05:26.101643" elapsed="0.009539"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.111182" level="INFO">${search} = $.providers_family</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.111182" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.118735" level="INFO">${values} = [{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.111182" elapsed="0.007553"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.118735" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.000000"/>
</kw>
<var name="${item}">providers_family</var>
<status status="PASS" start="2024-12-04T20:05:26.111182" elapsed="0.007553"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:26.035461" elapsed="0.083274"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.118735" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.127330" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.008595"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.127330" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.008595"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.127330" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.127330" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.135332" level="INFO">${values} = ['ROBOT_OPER_STATE_ERROR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.127330" elapsed="0.008002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.135332" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-04T20:05:26.127330" elapsed="0.008002"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.135332" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.135332" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.144927" level="INFO">${values} = ['CONN_STATE_UNREACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.135332" elapsed="0.009595"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.145925" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-04T20:05:26.135332" elapsed="0.010593"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.145925" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.145925" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.154490" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.145925" elapsed="0.008565"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.154490" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-04T20:05:26.145925" elapsed="0.008565"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.154490" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.154490" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.162518" level="INFO">${values} = [['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.154490" elapsed="0.008028"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.162518" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-04T20:05:26.154490" elapsed="0.008028"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-04T20:05:26.118735" elapsed="0.043783"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}, 'uuid': '61d6967c-7582-41d8-a711-5ab9363b81ce', 'host_name': 'GRE-1.nbnco.net.au', 'profile': 'device', '...</var>
<status status="PASS" start="2024-12-04T20:05:26.014434" elapsed="0.148084"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.162518" level="INFO">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}, 'uuid': '96c0d2af-ea97-4eb2-aa16-ea74c57c192d', 'host_name': 'vGRE-0.nbnco.com.au', 'profile': 'vgre', 'reachability_state': 'CONN_STATE_UNKNOWN', 'admin_state': 'ROBOT_ADMIN_STATE_DOWN', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SNMP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], 'port': 11022, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNKNOWN'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], 'port': 10022, 'timeout': '120', 'reachability_state': 'CONN_STATE_UNKNOWN'}], 'product_info': {'software_type': 'IOS-XR', 'software_version': '7.11.1', 'product_type': 'Cisco ASR 9000 Series Aggregation Services Routers', 'capability': ['SNMP', 'YANG_CLI'], 'device_type': 'NODE_TYPE_ROUTER', 'syslog_format': 'RFC_UNKNOWN'}, 'geo_info': {'coordinates': {}, 'range_incr': {}}, 'routing_info': {}, 'last_upd_time': '1733290256', 'reachability_check': 'REACH_CHECK_ENABLE', 'operational_state': 'ROBOT_OPER_STATE_ADMIN_DOWN', 'errors': ['Info - Node Operational State move to down.'], 'Inventory': {}, 'providers_family': {'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}, 'nso_state': 'SYNCED', 'nso_timestamp': '1732237593', 'tag_names': ['cli', 'snmp', 'reach-check'], 'device_fqdn': {}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:26.162518" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.171085" level="INFO">${key} = ['vGRE-0.nbnco.com.au']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.162518" elapsed="0.008567"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.171085" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.171085" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.178658" level="INFO">${values} = ['vgre']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.171085" elapsed="0.007573"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.178658" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.178658" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.179645" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-04T20:05:26.171085" elapsed="0.008560"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.179645" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.179645" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.188227" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.179645" elapsed="0.008582"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.188227" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.188227" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.188227" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-04T20:05:26.179645" elapsed="0.008582"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.188227" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.188227" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.198240" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.188227" elapsed="0.010013"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.199240" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.198240" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.199240" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-04T20:05:26.188227" elapsed="0.011013"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.199240" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.199240" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.207866" level="INFO">${values} = ['IOS-XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.199240" elapsed="0.008626"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.207866" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.207866" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.207866" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-04T20:05:26.199240" elapsed="0.008626"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.207866" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.207866" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.216151" level="INFO">${values} = ['7.11.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.207866" elapsed="0.008285"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.216151" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.216151" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.216151" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-04T20:05:26.207866" elapsed="0.008285"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.216151" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.216151" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.223759" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.216151" elapsed="0.007608"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.223759" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.223759" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.224759" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-04T20:05:26.216151" elapsed="0.008608"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.224759" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.224759" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.232310" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.224759" elapsed="0.007551"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.232310" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.232310" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.233337" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-04T20:05:26.224759" elapsed="0.008578"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.233337" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.233337" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.242692" level="INFO">${values} = [11022, 10022]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.233337" elapsed="0.010345"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.243682" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.243682" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.243682" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-04T20:05:26.233337" elapsed="0.010345"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.243682" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.243682" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.251239" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.243682" elapsed="0.007557"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.251239" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.251239" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.251239" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-04T20:05:26.243682" elapsed="0.007557"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.252238" level="INFO">${search} = $.providers_family</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.252238" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.259849" level="INFO">${values} = [{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.252238" elapsed="0.007611"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.259849" level="INFO">${MSG} = --Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.so...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.259849" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.259849" elapsed="0.000000"/>
</kw>
<var name="${item}">providers_family</var>
<status status="PASS" start="2024-12-04T20:05:26.252238" elapsed="0.007611"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:26.171085" elapsed="0.088764"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.260848" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.260848" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.280998" level="INFO">${values} = ['ROBOT_ADMIN_STATE_DOWN']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.260848" elapsed="0.020150"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.281998" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-04T20:05:26.259849" elapsed="0.022149"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.281998" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.281998" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.290418" level="INFO">${values} = ['ROBOT_OPER_STATE_ADMIN_DOWN']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.281998" elapsed="0.008420"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.290418" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-04T20:05:26.281998" elapsed="0.008420"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.290940" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.290940" elapsed="0.000160"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.299016" level="INFO">${values} = ['CONN_STATE_UNKNOWN']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.291100" elapsed="0.007916"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.299096" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-04T20:05:26.290940" elapsed="0.008156"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.299096" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.299096" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.309707" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.299096" elapsed="0.010611"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.309707" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-04T20:05:26.299096" elapsed="0.010611"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.309707" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.309707" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:26.317721" level="INFO">${values} = [['Info - Node Operational State move to down.']]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:26.309707" elapsed="0.008014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.317721" elapsed="0.000989"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-04T20:05:26.309707" elapsed="0.009003"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-04T20:05:26.259849" elapsed="0.058861"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}, 'uuid': '96c0d2af-ea97-4eb2-aa16-ea74c57c192d', 'host_name': 'vGRE-0.nbnco.com.au', 'profile': 'vgre', 're...</var>
<status status="PASS" start="2024-12-04T20:05:26.162518" elapsed="0.156192"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-04T20:05:25.879210" elapsed="0.439500"/>
</for>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:26.318710" level="INFO">List length is 15 and it contains following items:
0: ['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']
1: ['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
2: ['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
3: ['GRE-2.nbnco.net.au']:nso_state:['SYNCED']
4: ['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]
5: ['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']
6: ['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
7: ['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
8: ['GRE-1.nbnco.net.au']:nso_state:['SYNCED']
9: ['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]
10: ['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']
11: ['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']
12: ['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']
13: ['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']
14: ['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]</msg>
<arg>${CNC_DEVICES_HEALTH}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.318710" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.318710" level="INFO">${CNC_DEVICES} = ["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.sof...</msg>
<arg>${CNC_DEVICES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:26.318710" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.318710" level="INFO">${CNC_DEVICES_HEALTH} = ["['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']", "['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']", "['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHAB...</msg>
<arg>${CNC_DEVICES_HEALTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:26.318710" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.318710" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC device information from /crosswork/inventory/v1/nodes/query</doc>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.699971"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:26.320243" level="INFO">Set test message to:
--Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']
['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']
['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]
['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
['GRE-1.nbnco.net.au']:profile:['device']
['GRE-1.nbnco.net.au']:dg_name:['pool1-1']
['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']
['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']
['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]
['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
['vGRE-0.nbnco.com.au']:profile:['vgre']
['vGRE-0.nbnco.com.au']:dg_name:[]
['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']
['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']
['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']
['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]
['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']
['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]
['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]
['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:26.318710" elapsed="0.001533"/>
</kw>
<doc>Find key device information</doc>
<tag>DATA-COLLECTION</tag>
<tag>DEVICE</tag>
<status status="PASS" start="2024-12-04T20:05:25.618739" elapsed="0.701504">--Devices--
['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']
['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']
['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]
['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
['GRE-1.nbnco.net.au']:profile:['device']
['GRE-1.nbnco.net.au']:dg_name:['pool1-1']
['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']
['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']
['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]
['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
['vGRE-0.nbnco.com.au']:profile:['vgre']
['vGRE-0.nbnco.com.au']:dg_name:[]
['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']
['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']
['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']
['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]
['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']
['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]
['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]
['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]

</status>
</test>
<test id="s1-t6" name="Retrieve NSO Service Types" line="73">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:26.321826" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.321282" elapsed="0.000544"/>
</kw>
<kw name="get-service-types" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.321826" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.321826" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.321826" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.321826" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.322859" level="INFO">${description} = Retrieve NSO Service Types</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.322859" level="INFO">@{CNC_SERVICE_TYPES} = [ ]</msg>
<var>@{CNC_SERVICE_TYPES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.322859" level="INFO">${myurl} = /crosswork/cnc/api/v1/serviceTypes</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/serviceTypes</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.322859" level="INFO">${payload} = {"transport":true}</msg>
<var>${payload}</var>
<arg>{"transport":true}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.322859" level="INFO">${payload_json} = {'transport': True}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:26.493999" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/cnc/api/v1/serviceTypes HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:26.493999" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/serviceTypes 
 path_url=/crosswork/cnc/api/v1/serviceTypes 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '19'} 
 body=b'{"transport": true}' 
 </msg>
<msg time="2024-12-04T20:05:26.494977" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/serviceTypes 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"serviceTypes":[{"serviceType":"Tunnel","servicePath":"ietf-te:te/tunnels/tunnel","serviceLayer":"TRANSPORT"},{"serviceType":"ODN-Template","servicePath":"cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template","serviceLayer":"TRANSPORT"},{"serviceType":"NSS","servicePath":"ietf-network-slice-service:network-slice-services/slice-service","serviceLayer":"NETWORK_SLICE"},{"serviceType":"L3VPN-Service","servicePath":"ietf-l3vpn-ntw:l3vpn-ntw/vpn-services/vpn-service","serviceLayer":"VPN"},{"serviceType":"L2VPN-Service","servicePath":"ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service","serviceLayer":"VPN"},{"serviceType":"Circuit-Style Policy","servicePath":"cisco-cs-sr-te-cfp:cs-sr-te-policy","serviceLayer":"TRANSPORT"},{"serviceType":"Policy","servicePath":"cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-policies:policies/policy","serviceLayer":"TRANSPORT"}]} 
 </msg>
<msg time="2024-12-04T20:05:26.494977" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:26.495964" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:26.322859" elapsed="0.173105"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.496974" level="INFO">${json_response} = {'serviceTypes': [{'serviceType': 'Tunnel', 'servicePath': 'ietf-te:te/tunnels/tunnel', 'serviceLayer': 'TRANSPORT'}, {'serviceType': 'ODN-Template', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.495964" elapsed="0.001010"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.497967" level="INFO">${MSG} = --NSO Service Types--
</msg>
<arg>${MSG}</arg>
<arg>--NSO Service Types--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.496974" elapsed="0.000993"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.500974" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.498962" elapsed="0.002012"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.500974" elapsed="0.001007"/>
</kw>
<var name="${item}">{'serviceType': 'Tunnel', 'servicePath': 'ietf-te:te/tunnels/tunnel', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-04T20:05:26.498962" elapsed="0.003019"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.504524" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.503505" elapsed="0.001019"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.504524" elapsed="0.002013"/>
</kw>
<var name="${item}">{'serviceType': 'ODN-Template', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-04T20:05:26.503505" elapsed="0.003032"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.507535" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.506537" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.508562" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'NSS', 'servicePath': 'ietf-network-slice-service:network-slice-services/slice-service', 'serviceLayer': 'NETWORK_SLICE'}</var>
<status status="PASS" start="2024-12-04T20:05:26.506537" elapsed="0.002025"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.509557" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.509557" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.510557" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'L3VPN-Service', 'servicePath': 'ietf-l3vpn-ntw:l3vpn-ntw/vpn-services/vpn-service', 'serviceLayer': 'VPN'}</var>
<status status="PASS" start="2024-12-04T20:05:26.509557" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.511557" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.510557" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.511557" elapsed="0.000983"/>
</kw>
<var name="${item}">{'serviceType': 'L2VPN-Service', 'servicePath': 'ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service', 'serviceLayer': 'VPN'}</var>
<status status="PASS" start="2024-12-04T20:05:26.510557" elapsed="0.001983"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.512540" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.512540" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.512540" elapsed="0.001016"/>
</kw>
<var name="${item}">{'serviceType': 'Circuit-Style Policy', 'servicePath': 'cisco-cs-sr-te-cfp:cs-sr-te-policy', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-04T20:05:26.512540" elapsed="0.001016"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.513556" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.513556" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.513556" elapsed="0.001001"/>
</kw>
<var name="${item}">{'serviceType': 'Policy', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-policies:policies/policy', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-04T20:05:26.513556" elapsed="0.001001"/>
</iter>
<var>${item}</var>
<value>@{json_response['serviceTypes']}</value>
<status status="PASS" start="2024-12-04T20:05:26.497967" elapsed="0.016590"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.514557" level="INFO">${CNC_SERVICE_TYPES} = ['TRANSPORT:Tunnel', 'TRANSPORT:ODN-Template', 'NETWORK_SLICE:NSS', 'VPN:L3VPN-Service', 'VPN:L2VPN-Service', 'TRANSPORT:Circuit-Style Policy', 'TRANSPORT:Policy']</msg>
<arg>${CNC_SERVICE_TYPES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:26.514557" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.514557" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running CNC/NSO VPN services</doc>
<status status="PASS" start="2024-12-04T20:05:26.321826" elapsed="0.192731"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:26.515159" level="INFO">Set test message to:
--NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:26.515159" elapsed="0.000000"/>
</kw>
<doc>Retrieve the available NSO service models</doc>
<tag>DATA-COLLECTION</tag>
<tag>NSO</tag>
<status status="PASS" start="2024-12-04T20:05:26.321282" elapsed="0.193877">--NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy

</status>
</test>
<test id="s1-t7" name="Retrieve CNC VPN Services" line="80">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:26.516165" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.516165" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-services" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.516165" elapsed="0.001001"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">${description} = Retrieve CNC VPN Services</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">@{CNC_SERVICES} = [ ]</msg>
<var>@{CNC_SERVICES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">${myurl} = /crosswork/cnc/api/v1/services</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/services</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">${payload} = {"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["VPN"],"filterCriteria":{"conditionList":[]}}</msg>
<var>${payload}</var>
<arg>{"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["VPN"],"filterCriteria":{"conditionList":[]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.517166" level="INFO">${payload_json} = {'sortAscending': True, 'sortColumn': 'serviceName', 'startRow': 0, 'endRow': 1000, 'transport': False, 'viewByType': ['VPN'], 'filterCriteria': {'conditionList': []}}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.517166" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:26.694767" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/cnc/api/v1/services HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:26.695905" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/services 
 path_url=/crosswork/cnc/api/v1/services 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '167'} 
 body=b'{"sortAscending": true, "sortColumn": "serviceName", "startRow": 0, "endRow": 1000, "transport": false, "viewByType": ["VPN"], "filterCriteria": {"conditionList": []}}' 
 </msg>
<msg time="2024-12-04T20:05:26.695905" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/services 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:13 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"elements":[],"totalCount":0,"status":"success"} 
 </msg>
<msg time="2024-12-04T20:05:26.695905" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:26.696867" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:26.518166" elapsed="0.178701"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.697864" level="INFO">${json_response} = {'elements': [], 'totalCount': 0, 'status': 'success'}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.696867" elapsed="0.000997"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.697864" level="INFO">${MSG} = --VPN Services--
</msg>
<arg>${MSG}</arg>
<arg>--VPN Services--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.697864" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.698869" elapsed="0.000992"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICES}</arg>
<arg>${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.699861" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:26.698869" elapsed="0.000992"/>
</iter>
<var>${item}</var>
<value>@{json_response['elements']}</value>
<status status="NOT RUN" start="2024-12-04T20:05:26.698869" elapsed="0.000992"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.699861" level="INFO">${CNC_SERVICES} = []</msg>
<arg>${CNC_SERVICES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:26.699861" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.699861" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active VPN service information from /crosswork/cnc/api/v1/services (first 1000)</doc>
<status status="PASS" start="2024-12-04T20:05:26.516165" elapsed="0.184699"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:26.700864" level="INFO">Set test message to:
--VPN Services--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:26.700864" elapsed="0.000000"/>
</kw>
<doc>Find all CNC Network Services</doc>
<tag>DATA-COLLECTION</tag>
<tag>SERVICES</tag>
<status status="PASS" start="2024-12-04T20:05:26.516165" elapsed="0.185695">--VPN Services--

</status>
</test>
<test id="s1-t8" name="Retrieve NSO VPN Transport" line="87">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:26.704782" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.701860" elapsed="0.002922"/>
</kw>
<kw name="get-cnc-transport" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.705814" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.705814" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.705814" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.705814" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.706812" level="INFO">${description} = Retrieve NSO VPN Transport</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.706812" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.706812" level="INFO">@{CNC_TRANSPORT} = [ ]</msg>
<var>@{CNC_TRANSPORT}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:26.706812" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.706812" level="INFO">${myurl} = /crosswork/cnc/api/v1/services</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/services</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.706812" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.707811" level="INFO">${payload} = {"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["TRANSPORT"],"filterCriteria":{"conditionList":[]}}</msg>
<var>${payload}</var>
<arg>{"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["TRANSPORT"],"filterCriteria":{"conditionList":[]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.707811" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.707811" level="INFO">${payload_json} = {'sortAscending': True, 'sortColumn': 'serviceName', 'startRow': 0, 'endRow': 1000, 'transport': False, 'viewByType': ['TRANSPORT'], 'filterCriteria': {'conditionList': []}}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.707811" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:26.902418" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/cnc/api/v1/services HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:26.902418" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/services 
 path_url=/crosswork/cnc/api/v1/services 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '173'} 
 body=b'{"sortAscending": true, "sortColumn": "serviceName", "startRow": 0, "endRow": 1000, "transport": false, "viewByType": ["TRANSPORT"], "filterCriteria": {"conditionList": []}}' 
 </msg>
<msg time="2024-12-04T20:05:26.902418" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/cnc/api/v1/services 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:14 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"elements":[],"totalCount":0,"status":"success"} 
 </msg>
<msg time="2024-12-04T20:05:26.903417" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:26.903987" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:26.707811" elapsed="0.196176"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.903987" level="INFO">${json_response} = {'elements': [], 'totalCount': 0, 'status': 'success'}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.903987" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.905003" level="INFO">${MSG} = --Transport--
</msg>
<arg>${MSG}</arg>
<arg>--Transport--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.903987" elapsed="0.001016"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.905003" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_TRANSPORT}</arg>
<arg>${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.905003" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:26.905003" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{json_response['elements']}</value>
<status status="NOT RUN" start="2024-12-04T20:05:26.905003" elapsed="0.000000"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.906016" level="INFO">${CNC_TRANSPORT} = []</msg>
<arg>${CNC_TRANSPORT}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:26.906016" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.906016" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active TRANSPORT service information from /crosswork/cnc/api/v1/services (first 1000)</doc>
<status status="PASS" start="2024-12-04T20:05:26.704782" elapsed="0.201234"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:26.907015" level="INFO">Set test message to:
--Transport--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:26.906016" elapsed="0.000999"/>
</kw>
<doc>Find all CNC Transport services from NSO</doc>
<tag>DATA-COLLECTION</tag>
<tag>SERVICES</tag>
<status status="PASS" start="2024-12-04T20:05:26.701860" elapsed="0.205155">--Transport--

</status>
</test>
<test id="s1-t9" name="Retrieve CNC Application Health" line="94">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:26.911028" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.909026" elapsed="0.002002"/>
</kw>
<kw name="get-application-health" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.913029" level="INFO">${myurl} = /crosswork/platform/v2/cluster/app/health/list</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/cluster/app/health/list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.913029" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.914049" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.914049" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.914049" elapsed="0.000996"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.915045" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.916157" level="INFO">@{CNC_APP_HEALTHY} = [ ]</msg>
<var>@{CNC_APP_HEALTHY}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:26.915045" elapsed="0.001112"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.916157" level="INFO">@{CNC_APP_DEGRADED} = [ ]</msg>
<var>@{CNC_APP_DEGRADED}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:26.916157" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.917101" level="INFO">${description} = Retrieve CNC Application Health</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:26.917101" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:26.981300" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/platform/v2/cluster/app/health/list HTTP/11" 200 1138</msg>
<msg time="2024-12-04T20:05:26.981300" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/platform/v2/cluster/app/health/list 
 path_url=/crosswork/platform/v2/cluster/app/health/list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:26.981300" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/platform/v2/cluster/app/health/list 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:14 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '1138', 'Connection': 'keep-alive', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"app_health_summary":[{"health_summary":{"state":"Healthy","total":37,"healthy":37,"degraded":0,"down":0,"obj_name":"capp-infra","availability":"Limited protection"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":1,"healthy":1,"degraded":0,"down":0,"obj_name":"capp-ca","availability":"Limited protection"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":13,"healthy":13,"degraded":0,"down":0,"obj_name":"capp-coe","availability":"Limited protection"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":11,"healthy":11,"degraded":0,"down":0,"obj_name":"capp-common-ems-services","availability":"Limited protection"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":6,"healthy":6,"degraded":0,"down":0,"obj_name":"capp-cat","availability":"Limited protection"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":2,"healthy":2,"degraded":0,"down":0,"obj_name":"capp-hi","availability":"Limited protection"},"recommendation":"None","description":""}]} 
 </msg>
<msg time="2024-12-04T20:05:26.982296" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:26.983298" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:26.917101" elapsed="0.066197"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.984299" level="INFO">${json_response} = {'app_health_summary': [{'health_summary': {'state': 'Healthy', 'total': 37, 'healthy': 37, 'degraded': 0, 'down': 0, 'obj_name': 'capp-infra', 'availability': 'Limited protection'}, 'recommendation':...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:26.983298" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.985301" level="INFO">${MSG} = --CNC Application Health--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Application Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.984299" elapsed="0.001002"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.988237" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.986827" elapsed="0.001410"/>
</kw>
<msg time="2024-12-04T20:05:26.988237" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.986827" elapsed="0.001410"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.988237" elapsed="0.001030"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.989267" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.989267" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:26.988237" elapsed="0.001030"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.989267" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.989267" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:26.989267" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:26.988237" elapsed="0.001030"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 37, 'healthy': 37, 'degraded': 0, 'down': 0, 'obj_name': 'capp-infra', 'availability': 'Limited protection'}, 'recommendation': 'None', 'description': ...</var>
<status status="PASS" start="2024-12-04T20:05:26.985301" elapsed="0.003966"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.990270" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.990270" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.991279" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.001009"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.001009"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.991279" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.991279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:26.991279" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.001009"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 1, 'healthy': 1, 'degraded': 0, 'down': 0, 'obj_name': 'capp-ca', 'availability': 'Limited protection'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-04T20:05:26.990270" elapsed="0.001009"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.992297" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.991279" elapsed="0.001018"/>
</kw>
<msg time="2024-12-04T20:05:26.992297" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.991279" elapsed="0.001018"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.993313" elapsed="0.000979"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.994292" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.994292" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:26.993313" elapsed="0.000979"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.995291" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.995291" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:26.994292" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:26.993313" elapsed="0.001978"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 13, 'healthy': 13, 'degraded': 0, 'down': 0, 'obj_name': 'capp-coe', 'availability': 'Limited protection'}, 'recommendation': 'None', 'description': ''...</var>
<status status="PASS" start="2024-12-04T20:05:26.991279" elapsed="0.004012"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.996291" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.995291" elapsed="0.001000"/>
</kw>
<msg time="2024-12-04T20:05:26.996291" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.995291" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.996291" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.997294" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
capp-common-ems-services:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.997294" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:26.996291" elapsed="0.001003"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.997294" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.997294" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:26.997294" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:26.996291" elapsed="0.001003"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 11, 'healthy': 11, 'degraded': 0, 'down': 0, 'obj_name': 'capp-common-ems-services', 'availability': 'Limited protection'}, 'recommendation': 'None', '...</var>
<status status="PASS" start="2024-12-04T20:05:26.995291" elapsed="0.002003"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.998294" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.998294" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:26.998294" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.997294" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:26.998294" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:26.999293" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
capp-common-ems-services:Healthy
capp-cat:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:26.999293" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:26.998294" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.999293" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:26.999293" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:26.999293" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:26.998294" elapsed="0.000999"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 6, 'healthy': 6, 'degraded': 0, 'down': 0, 'obj_name': 'capp-cat', 'availability': 'Limited protection'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-04T20:05:26.997294" elapsed="0.001999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.000286" level="DEBUG">Argument types are:
&lt;class 'str'&gt;
&lt;class 'str'&gt;</msg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-04T20:05:26.999293" elapsed="0.000993"/>
</kw>
<msg time="2024-12-04T20:05:27.000286" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:26.999293" elapsed="0.000993"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.000286" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.000286" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
capp-common-ems-services:Healthy
capp-cat:Healthy
capp-hi:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.000286" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:27.000286" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:27.000286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:27.001285" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:27.000286" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:27.000286" elapsed="0.000999"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 2, 'healthy': 2, 'degraded': 0, 'down': 0, 'obj_name': 'capp-hi', 'availability': 'Limited protection'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-04T20:05:26.999293" elapsed="0.001992"/>
</iter>
<var>${item}</var>
<value>@{json_response['app_health_summary']}</value>
<status status="PASS" start="2024-12-04T20:05:26.985301" elapsed="0.015984"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.001285" level="INFO">${CNC_APP_DEGRADED} = []</msg>
<arg>${CNC_APP_DEGRADED}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:27.001285" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.001285" level="INFO">${CNC_APP_HEALTHY} = ['capp-infra', 'capp-ca', 'capp-coe', 'capp-common-ems-services', 'capp-cat', 'capp-hi']</msg>
<arg>${CNC_APP_HEALTHY}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:27.001285" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:27.001285" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves health info from the CNC cluster api (/crosswork/platform/v2/cluster/app/health/list). Creates 2 variables - one for healty applications, one for degraded.</doc>
<status status="PASS" start="2024-12-04T20:05:26.913029" elapsed="0.088256"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:27.001285" level="INFO">Set test message to:
--CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
capp-common-ems-services:Healthy
capp-cat:Healthy
capp-hi:Healthy

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:27.001285" elapsed="0.000000"/>
</kw>
<doc>Find Health of CNC applications</doc>
<tag>APPLICATIONS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-04T20:05:26.909026" elapsed="0.092259">--CNC Application Health--
capp-infra:Healthy
capp-ca:Healthy
capp-coe:Healthy
capp-common-ems-services:Healthy
capp-cat:Healthy
capp-hi:Healthy

</status>
</test>
<test id="s1-t10" name="Retrieve CNC Device Alerts" line="101">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:27.003295" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.002286" elapsed="0.001009"/>
</kw>
<kw name="get-device-alerts" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.003809" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.003809" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.003809" level="INFO">${description} = Retrieve CNC Device Alerts</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.003809" level="INFO">${myurl} = /crosswork/hi/v1/alerts/device/devices</msg>
<var>${myurl}</var>
<arg>/crosswork/hi/v1/alerts/device/devices</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.003809" level="INFO">${payload} = {"time_ago":"0m","offset":"0","time_interval":"1h","levels":["CRITICAL","MAJOR","WARNING","MINOR","INFO"],"limit":"100","top_devices":true}</msg>
<var>${payload}</var>
<arg>{"time_ago":"0m","offset":"0","time_interval":"1h","levels":["CRITICAL","MAJOR","WARNING","MINOR","INFO"],"limit":"100","top_devices":true}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.004833" level="INFO">${json_payload} = {'time_ago': '0m', 'offset': '0', 'time_interval': '1h', 'levels': ['CRITICAL', 'MAJOR', 'WARNING', 'MINOR', 'INFO'], 'limit': '100', 'top_devices': True}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003809" elapsed="0.001024"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:27.169922" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/hi/v1/alerts/device/devices HTTP/11" 200 1089</msg>
<msg time="2024-12-04T20:05:27.169922" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/hi/v1/alerts/device/devices 
 path_url=/crosswork/hi/v1/alerts/device/devices 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '154'} 
 body=b'{"time_ago": "0m", "offset": "0", "time_interval": "1h", "levels": ["CRITICAL", "MAJOR", "WARNING", "MINOR", "INFO"], "limit": "100", "top_devices": true}' 
 </msg>
<msg time="2024-12-04T20:05:27.169922" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/hi/v1/alerts/device/devices 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:14 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Content-Length': '1089', 'Connection': 'keep-alive', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={
 "device_alerts": [
  {
   "device_id": "GRE-1.nbnco.net.au",
   "device_type": "Cisco ASR 9902 Router",
   "device_IP": "10.67.22.115",
   "impact_score": 0,
   "total_alerts": 0,
   "summary": {
    "levels": [
     {
      "level": "CRITICAL",
      "alert": 0
     },
     {
      "level": "MAJOR",
      "alert": 0
     },
     {
      "level": "WARNING",
      "alert": 0
     },
     {
      "level": "MINOR",
      "alert": 0
     },
     {
      "level": "INFO",
      "alert": 0
     }
    ]
   }
  },
  {
   "device_id": "GRE-2.nbnco.net.au",
   "device_type": "Cisco ASR 9902 Router",
   "device_IP": "10.67.22.106",
   "impact_score": 0,
   "total_alerts": 0,
   "summary": {
    "levels": [
     {
      "level": "CRITICAL",
      "alert": 0
     },
     {
      "level": "MAJOR",
      "alert": 0
     },
     {
      "level": "WARNING",
      "alert": 0
     },
     {
      "level": "MINOR",
      "alert": 0
     },
     {
      "level": "INFO",
      "alert": 0
     }
    ]
   }
  }
 ],
 "kpi_alerts": [
 ],
 "series": [
 ],
 "start_time": "0",
 "time_series": null
} 
 </msg>
<msg time="2024-12-04T20:05:27.170939" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:27.170939" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json_payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:27.004833" elapsed="0.166106"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.171947" level="INFO">${alerts} = {'device_alerts': [{'device_id': 'GRE-1.nbnco.net.au', 'device_type': 'Cisco ASR 9902 Router', 'device_IP': '10.67.22.115', 'impact_score': 0, 'total_alerts': 0, 'summary': {'levels': [{'level': 'CRIT...</msg>
<var>${alerts}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:27.171947" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.172944" level="INFO">${MSG} = --CNC Device Alerts--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Device Alerts--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.172944" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.174936" level="INFO">GRE-1.nbnco.net.au</msg>
<arg>${item['device_id']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:27.173938" elapsed="0.000998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.175940" level="INFO">${MSG} = --CNC Device Alerts--
Device:GRE-1.nbnco.net.au:0
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Device:${item['device_id']}:${item['impact_score']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.174936" elapsed="0.001999"/>
</kw>
<var name="${item}">{'device_id': 'GRE-1.nbnco.net.au', 'device_type': 'Cisco ASR 9902 Router', 'device_IP': '10.67.22.115', 'impact_score': 0, 'total_alerts': 0, 'summary': {'levels': [{'level': 'CRITICAL', 'alert': 0},...</var>
<status status="PASS" start="2024-12-04T20:05:27.173938" elapsed="0.002997"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.176935" level="INFO">GRE-2.nbnco.net.au</msg>
<arg>${item['device_id']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:27.176935" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.178944" level="INFO">${MSG} = --CNC Device Alerts--
Device:GRE-1.nbnco.net.au:0
Device:GRE-2.nbnco.net.au:0
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Device:${item['device_id']}:${item['impact_score']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.177936" elapsed="0.001008"/>
</kw>
<var name="${item}">{'device_id': 'GRE-2.nbnco.net.au', 'device_type': 'Cisco ASR 9902 Router', 'device_IP': '10.67.22.106', 'impact_score': 0, 'total_alerts': 0, 'summary': {'levels': [{'level': 'CRITICAL', 'alert': 0},...</var>
<status status="PASS" start="2024-12-04T20:05:27.176935" elapsed="0.002526"/>
</iter>
<var>${item}</var>
<value>@{alerts['device_alerts']}</value>
<status status="PASS" start="2024-12-04T20:05:27.172944" elapsed="0.006517"/>
</for>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${item['device_id']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:27.180476" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}KPI:${item['device_id']}:${item['impact_score']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:27.180476" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:27.180476" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{alerts['kpi_alerts']}</value>
<status status="NOT RUN" start="2024-12-04T20:05:27.179461" elapsed="0.001015"/>
</for>
<msg time="2024-12-04T20:05:27.180476" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves KPI alerts associated with devices and KPIs. Limited to first 100 devices.</doc>
<status status="PASS" start="2024-12-04T20:05:27.003295" elapsed="0.177181"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:27.181474" level="INFO">Set test message to:
--CNC Device Alerts--
Device:GRE-1.nbnco.net.au:0
Device:GRE-2.nbnco.net.au:0

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:27.181474" elapsed="0.000000"/>
</kw>
<doc>Find all the current /active device alerts</doc>
<tag>ALARMS</tag>
<tag>DATA-COLLECTION</tag>
<tag>DEVICE</tag>
<status status="PASS" start="2024-12-04T20:05:27.002286" elapsed="0.179188">--CNC Device Alerts--
Device:GRE-1.nbnco.net.au:0
Device:GRE-2.nbnco.net.au:0

</status>
</test>
<test id="s1-t11" name="Retrieve CNC System Alarms" line="108">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:27.183481" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:27.182482" elapsed="0.000999"/>
</kw>
<kw name="get-system-alarms" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.184481" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.183481" elapsed="0.001000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.184481" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.184481" level="INFO">${description} = Retrieve CNC System Alarms</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.184481" level="INFO">@{CNC_SYSALARMS} = [ ]</msg>
<var>@{CNC_SYSALARMS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.184481" level="INFO">@{FIELDS_DATA} = [ AlarmCategory | Description | events_count ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>AlarmCategory</arg>
<arg>Description</arg>
<arg>events_count</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.185481" level="INFO">@{FIELDS_EVENTS} = [ alarm_id ]</msg>
<var>@{FIELDS_EVENTS}</var>
<arg>alarm_id</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:27.184481" elapsed="0.001000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.185481" level="INFO">${myurl} = /crosswork/alarms/v1/query</msg>
<var>${myurl}</var>
<arg>/crosswork/alarms/v1/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.185481" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.185481" level="INFO">${payload} = {"openAlarmsOnly":true,"criteria":"select * from alarm limit 10 page 0 where alarmCategory=1 "}</msg>
<var>${payload}</var>
<arg>{"openAlarmsOnly":true,"criteria":"select * from alarm limit 10 page 0 where alarmCategory=1 "}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:27.185481" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:27.185481" level="INFO">${json_payload} = {'openAlarmsOnly': True, 'criteria': 'select * from alarm limit 10 page 0 where alarmCategory=1 '}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:27.185481" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:29.161821" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/alarms/v1/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:29.162819" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/alarms/v1/query 
 path_url=/crosswork/alarms/v1/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '98'} 
 body=b'{"openAlarmsOnly": true, "criteria": "select * from alarm limit 10 page 0 where alarmCategory=1 "}' 
 </msg>
<msg time="2024-12-04T20:05:29.162819" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/alarms/v1/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:16 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"state":"Success","alarms":[{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"events_count":9,"Created":"1730986667612","Updated":"1733194738757","AlarmCategory":"System","AlarmId":"a4178322-8839-439c-a3ee-f661bcaff347","Events":[{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"26c5d9c9-c90d-4a34-9b6c-789a02a7d298","Timestamp":"1733194737792","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"9ef8dd70-b6eb-4b2d-bb82-e8fe5dbe1bbf","Timestamp":"1733194423324","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"02cc1565-92bf-4112-b2d9-50db77cad47f","Timestamp":"1733194381395","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"bb08907e-d17a-4ada-9fb5-6ab6a2793de8","Timestamp":"1732392474543","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"7905e783-cf05-4fb1-97cb-ad1ebd84740c","Timestamp":"1732070708772","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"9395085a-638f-4eec-8bad-69b9e9eebc75","Timestamp":"1732070702985","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"c2a9d7cb-7a78-42de-a260-9e4bc50819c2","Timestamp":"1732070667546","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"ce30843f-9107-46f1-981d-a146176ecc10","Timestamp":"1730987388639","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"HINca","object_description":"HI NCA package","event_type":32,"alarm_id":"189","event_case":0,"EventId":"65e2527b-308e-4093-98f0-1de6bf5992ee","Timestamp":"1730986667612","EventSeverity":"Info","Flagging":true,"Description":"NCAInit","EventCategory":"System"}],"Acknowledge":false,"Description":"NCAInit","State":"Info"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"VM Manager","object_description":"VM Manager: Import task expired waiting for inventory data","event_type":1000,"events_count":3,"Created":"1732074171446","Updated":"1733197881066","AlarmCategory":"System","AlarmId":"21866b50-3868-48d7-a6dc-da4288a39983","Events":[{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"VM Manager","object_description":"VM Manager: Import task expired waiting for inventory data","event_type":1000,"alarm_id":"1556","event_case":0,"EventId":"39d82eb1-6349-43ad-a7a0-55dbc6597e11","Timestamp":"1733197879554","EventSeverity":"Warning","Flagging":true,"Description":"VM Manager: Import task expired waiting for inventory data","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"VM Manager","object_description":"VM Manager: Import task expired waiting for inventory data","event_type":1000,"alarm_id":"1556","event_case":0,"EventId":"ec024caf-3d1e-4edf-9928-7f8361dfe1a3","Timestamp":"1732395401578","EventSeverity":"Warning","Flagging":true,"Description":"VM Manager: Import task expired waiting for inventory data","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-w2jvw","origin_app_id":"capp-infra","object_id":"VM Manager","object_description":"VM Manager: Import task expired waiting for inventory data","event_type":1000,"alarm_id":"1556","event_case":0,"EventId":"4cce42a3-951d-4eca-bcc7-f1c6f39f6136","Timestamp":"1732074171446","EventSeverity":"Warning","Flagging":true,"Description":"VM Manager: Import task expired waiting for inventory data","EventCategory":"System"}],"Acknowledge":false,"Description":"VM Manager: Import task expired waiting for inventory data","State":"Warning"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"events_count":6,"Created":"1733194298796","Updated":"1733290958311","AlarmCategory":"System","AlarmId":"d079a7e4-df26-474e-9a64-141458262a22","Events":[{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"03164d61-2904-4e46-820d-7d7588366f42","Timestamp":"1733290955575","EventSeverity":"Major","Flagging":true,"Description":"Unable to connect to NSO nso service pack.","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"0c484b57-71ac-4255-a90a-b607828acdcd","Timestamp":"1733290955575","EventSeverity":"Major","Flagging":true,"Description":"Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"c4b6ea5b-e796-4965-9568-c71d8ee2aed6","Timestamp":"1733290189309","EventSeverity":"Major","Flagging":true,"Description":"Unable to connect to NSO nso service pack.","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"627224e6-1792-4c98-a894-eba4093ed34a","Timestamp":"1733290189309","EventSeverity":"Major","Flagging":true,"Description":"Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"8e91400d-6e07-4c6e-bb7d-d822722193ed","Timestamp":"1733194298796","EventSeverity":"Major","Flagging":true,"Description":"Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]","object_description":"NSO Provider nso","event_type":2001,"alarm_id":"1990","event_case":0,"EventId":"fb3ccd91-0179-4e7b-9f67-c268eae80148","Timestamp":"1733194298796","EventSeverity":"Major","Flagging":true,"Description":"Unable to connect to NSO nso service pack.","EventCategory":"System"}],"Acknowledge":false,"Description":"Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host","State":"Major"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi:robot-pulse-0","object_id":"ErrLicenseMgr","object_description":"HI startup","event_type":21,"events_count":1,"Created":"1733194811154","Updated":"1733194811154","AlarmCategory":"System","AlarmId":"cceb41ec-cf79-4bad-9b90-15f88bb84360","Events":[{"origin_service_id":"capp-hi","origin_app_id":"capp-hi:robot-pulse-0","object_id":"ErrLicenseMgr","object_description":"HI startup","event_type":21,"alarm_id":"2048","event_case":0,"EventId":"07147124-8854-419c-b06f-25a0c9d875fa","Timestamp":"1733194811154","EventSeverity":"Info","Flagging":true,"Description":"started CLMS update consumer","EventCategory":"System"}],"Acknowledge":false,"Description":"started CLMS update consumer","State":"Info"},{"origin_service_id":"helios","origin_app_id":"capp-infra","object_id":"Crosswork Platform Services","object_description":"Collection services smart license","event_type":0,"events_count":4,"Created":"1732079799481","Updated":"1733291372558","AlarmCategory":"System","AlarmId":"bc4c8d3b-7ace-4533-b29a-0b28b6483e48","Events":[{"origin_service_id":"helios","origin_app_id":"capp-infra","object_id":"Crosswork Platform Services","object_description":"Collection services smart license","event_type":0,"alarm_id":"1565","event_case":0,"EventId":"5d0023ce-ec6e-424c-b4d5-45d14d5589db","Timestamp":"1733291371123","EventSeverity":"Info","Flagging":true,"Description":"Status changed from NOT_IN_USE to EVALUATION","EventCategory":"System"},{"origin_service_id":"helios","origin_app_id":"capp-infra","object_id":"Crosswork Platform Services","object_description":"Collection services smart license","event_type":0,"alarm_id":"1565","event_case":0,"EventId":"332de31a-3e74-44df-bd4e-3eb9cf4a5a48","Timestamp":"1733290762861","EventSeverity":"Info","Flagging":true,"Description":"Status changed from EVALUATION to NOT_IN_USE","EventCategory":"System"},{"origin_service_id":"helios","origin_app_id":"capp-infra","object_id":"Crosswork Platform Services","object_description":"Collection services smart license","event_type":0,"alarm_id":"1565","event_case":0,"EventId":"f526094a-85ec-45c1-9770-303de65b254e","Timestamp":"1732339578609","EventSeverity":"Info","Flagging":true,"Description":"Status changed from IN_COMPLIANCE to EVALUATION","EventCategory":"System"},{"origin_service_id":"helios","origin_app_id":"capp-infra","object_id":"Crosswork Platform Services","object_description":"Collection services smart license","event_type":0,"alarm_id":"1565","event_case":0,"EventId":"7f6b5af5-a8a4-43c1-80e1-905125394464","Timestamp":"1732079799481","EventSeverity":"Info","Flagging":true,"Description":"Status changed from NOT_IN_USE to EVALUATION","EventCategory":"System"}],"Acknowledge":false,"Description":"Status changed from NOT_IN_USE to EVALUATION","State":"Info"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"10-67-22-37-hybrid.nbnco.net.au CPU Utilization Alarm","object_description":"10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.","event_type":1000,"events_count":1,"Created":"1733304741641","Updated":"1733304741641","AlarmCategory":"System","AlarmId":"85a63c7c-5489-4681-bb5b-9d5f8d11d771","Events":[{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"10-67-22-37-hybrid.nbnco.net.au CPU Utilization Alarm","object_description":"10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.","event_type":1000,"alarm_id":"2283","event_case":0,"EventId":"be4fc77c-719e-494c-8286-c4d35745bfe6","Timestamp":"1733304741641","EventSeverity":"Minor","Flagging":true,"Description":"10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.","EventCategory":"System"}],"Acknowledge":false,"Description":"10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.","State":"Minor"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[61d6967c-7582-41d8-a711-5ab9363b81ce]","object_description":"Device GRE-1.nbnco.net.au (61d6967c-7582-41d8-a711-5ab9363b81ce)","event_type":1000,"events_count":3,"Created":"1733290178393","Updated":"1733291009342","AlarmCategory":"System","AlarmId":"a7792f91-bf34-48a3-b04b-cc95533096ee","Events":[{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[61d6967c-7582-41d8-a711-5ab9363b81ce]","object_description":"Device GRE-1.nbnco.net.au (61d6967c-7582-41d8-a711-5ab9363b81ce)","event_type":1000,"alarm_id":"2256","event_case":0,"EventId":"fef40701-5b64-4010-994a-375f35430f7f","Timestamp":"1733291007933","EventSeverity":"Major","Flagging":true,"Description":"Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[61d6967c-7582-41d8-a711-5ab9363b81ce]","object_description":"Device GRE-1.nbnco.net.au (61d6967c-7582-41d8-a711-5ab9363b81ce)","event_type":1000,"alarm_id":"2256","event_case":0,"EventId":"b7bde63f-c9a3-4d3c-be56-9b10189570c8","Timestamp":"1733290947255","EventSeverity":"Info","Flagging":true,"Description":"Node is checking connectivity info.","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[61d6967c-7582-41d8-a711-5ab9363b81ce]","object_description":"Device GRE-1.nbnco.net.au (61d6967c-7582-41d8-a711-5ab9363b81ce)","event_type":1000,"alarm_id":"2256","event_case":0,"EventId":"6f38fb04-5e3f-43bd-aa8d-d71a0fc9700e","Timestamp":"1733290178393","EventSeverity":"Info","Flagging":true,"Description":"Node Operational State move to down.","EventCategory":"System"}],"Acknowledge":false,"Description":"Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22","State":"Major"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"events_count":5,"Created":"1730987396651","Updated":"1733194747923","AlarmCategory":"System","AlarmId":"ea56401d-6b60-445e-b910-96d2a14655b5","Events":[{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"alarm_id":"212","event_case":0,"EventId":"2277c038-e27b-4b06-8b97-3934dc5fee8d","Timestamp":"1733194747125","EventSeverity":"Info","Flagging":true,"Description":"profileChief Initialization","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"alarm_id":"212","event_case":0,"EventId":"e6dfbeca-c15e-4794-a932-64a60adce5ad","Timestamp":"1733194430981","EventSeverity":"Info","Flagging":true,"Description":"profileChief Initialization","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"alarm_id":"212","event_case":0,"EventId":"4d08a2c6-0808-4f28-8558-03f5a34d64e1","Timestamp":"1732070715389","EventSeverity":"Info","Flagging":true,"Description":"profileChief Initialization","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"alarm_id":"212","event_case":0,"EventId":"a31147d3-2e73-49b7-bddf-708f40640cf3","Timestamp":"1732070709269","EventSeverity":"Info","Flagging":true,"Description":"profileChief Initialization","EventCategory":"System"},{"origin_service_id":"capp-hi","origin_app_id":"capp-hi","object_id":"ProfileChiefInit","object_description":"HI KPI Profile chief initalization","event_type":31,"alarm_id":"212","event_case":0,"EventId":"60de2c7a-c7cf-4743-8287-cbb27ed8887b","Timestamp":"1730987396651","EventSeverity":"Info","Flagging":true,"Description":"profileChief Initialization","EventCategory":"System"}],"Acknowledge":false,"Description":"profileChief Initialization","State":"Info"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[1f7ff894-9129-421b-a693-4d5589b043e5]","object_description":"Device GRE-2.nbnco.net.au (1f7ff894-9129-421b-a693-4d5589b043e5)","event_type":1000,"events_count":3,"Created":"1733290178393","Updated":"1733291012406","AlarmCategory":"System","AlarmId":"babfafa8-fb25-4079-8c96-f39ed5263e32","Events":[{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[1f7ff894-9129-421b-a693-4d5589b043e5]","object_description":"Device GRE-2.nbnco.net.au (1f7ff894-9129-421b-a693-4d5589b043e5)","event_type":1000,"alarm_id":"2255","event_case":0,"EventId":"6d6c0afb-5988-412e-979e-0566ac9c7170","Timestamp":"1733291010719","EventSeverity":"Major","Flagging":true,"Description":"Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[1f7ff894-9129-421b-a693-4d5589b043e5]","object_description":"Device GRE-2.nbnco.net.au (1f7ff894-9129-421b-a693-4d5589b043e5)","event_type":1000,"alarm_id":"2255","event_case":0,"EventId":"a374a179-6ce8-455a-98b5-98c66f643dc4","Timestamp":"1733290947255","EventSeverity":"Info","Flagging":true,"Description":"Node is checking connectivity info.","EventCategory":"System"},{"origin_service_id":"robot-dlminvmgr-0","origin_app_id":"capp-infra:DLM","object_id":"RobotNodeData[1f7ff894-9129-421b-a693-4d5589b043e5]","object_description":"Device GRE-2.nbnco.net.au (1f7ff894-9129-421b-a693-4d5589b043e5)","event_type":1000,"alarm_id":"2255","event_case":0,"EventId":"bb871c18-d8fe-4adc-bb9e-3614729afda1","Timestamp":"1733290178393","EventSeverity":"Info","Flagging":true,"Description":"Node Operational State move to down.","EventCategory":"System"}],"Acknowledge":false,"Description":"Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22","State":"Major"},{"origin_service_id":"robot-orch-6c55cd45fc-r9dkr","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"events_count":7,"Created":"1732070494109","Updated":"1733196151171","AlarmCategory":"System","AlarmId":"ad3516b6-ddc5-4ad0-b185-7e0672398f8e","Events":[{"origin_service_id":"robot-orch-6c55cd45fc-r9dkr","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"2af50ee0-fb3f-46e1-a19a-c786b0b71836","Timestamp":"1733196149413","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 305 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"4f1f12ff-5c62-4911-bea7-bc39a8551b02","Timestamp":"1733196108526","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 305 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"40870bdc-e3a9-4024-8f9e-7e2baf545358","Timestamp":"1732395796053","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 315 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-w2jvw","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"299098e9-cfb7-4464-9737-1bf504d9b680","Timestamp":"1732395225808","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 315 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-w2jvw","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"e1e358fc-6045-43df-b272-5ae6e833d2b3","Timestamp":"1732337418422","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 315 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-wmvz4","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":0,"EventId":"7d08da17-42ad-4f65-8d51-a309504ebec4","Timestamp":"1732070668836","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 318 days","EventCategory":"System"},{"origin_service_id":"robot-orch-6c55cd45fc-w2jvw","origin_app_id":"capp-infra","object_id":"CROSSWORK_K8S_CERT_EXPIRY_ALARM","object_description":"Crosswork kubernetes certificate management","event_type":1000,"alarm_id":"1489","event_case":1,"Params":{"1":"Crosswork kubernetes certificates will expire in 318 days"},"EventId":"d72de20c-4fc3-4d8b-8565-5c67ca6d63e8","Timestamp":"1732070494109","EventSeverity":"Info","Flagging":true,"Description":"Crosswork kubernetes certificates will expire in 318 days","EventCategory":"System"}],"Acknowledge":false,"Description":"Crosswork kubernetes certificates will expire in 305 days","State":"Info"}],"total":"46"} 
 </msg>
<msg time="2024-12-04T20:05:29.162819" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:30.193002" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json_payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:27.185481" elapsed="3.007521"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.194893" level="INFO">${json_response} = {'state': 'Success', 'alarms': [{'origin_service_id': 'capp-hi', 'origin_app_id': 'capp-hi', 'object_id': 'HINca', 'object_description': 'HI NCA package', 'event_type': 32, 'events_count': 9, 'Created...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:30.193002" elapsed="0.001891"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.195891" level="INFO">${MSG} = --CNC System Alarms--
</msg>
<arg>${MSG}</arg>
<arg>--CNC System Alarms--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.194893" elapsed="0.000998"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.213429" level="INFO">${key} = ['1733194738757']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.196903" elapsed="0.016526"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.213429" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.213429" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.222859" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.213429" elapsed="0.009430"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.224259" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.222859" elapsed="0.001400"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.224259" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.213429" elapsed="0.010830"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.225276" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.224259" elapsed="0.001017"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.233231" level="INFO">${values} = ['NCAInit']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.225276" elapsed="0.007955"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.233231" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.233231" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.233231" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.224259" elapsed="0.009980"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.234239" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.234239" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.242583" level="INFO">${values} = [9]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.234239" elapsed="0.008344"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.242583" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.242583" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.242583" elapsed="0.001467"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.234239" elapsed="0.009811"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.213429" elapsed="0.030621"/>
</for>
<var name="${data}">{'origin_service_id': 'capp-hi', 'origin_app_id': 'capp-hi', 'object_id': 'HINca', 'object_description': 'HI NCA package', 'event_type': 32, 'events_count': 9, 'Created': '1730986667612', 'Updated': '...</var>
<status status="PASS" start="2024-12-04T20:05:30.196903" elapsed="0.047147"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.252672" level="INFO">${key} = ['1733197881066']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.244050" elapsed="0.008622"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.252672" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.252672" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.261247" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.252672" elapsed="0.008575"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.262745" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.261247" elapsed="0.001498"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.262745" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.252672" elapsed="0.010073"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.262745" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.262745" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.271985" level="INFO">${values} = ['VM Manager: Import task expired waiting for inventory data']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.262745" elapsed="0.009240"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.272993" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.271985" elapsed="0.001008"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.272993" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.262745" elapsed="0.010248"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.272993" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.272993" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.281770" level="INFO">${values} = [3]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.272993" elapsed="0.008777"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.281770" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.281770" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.281770" elapsed="0.001007"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.272993" elapsed="0.009784"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.252672" elapsed="0.030105"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-orch-6c55cd45fc-wmvz4', 'origin_app_id': 'capp-infra', 'object_id': 'VM Manager', 'object_description': 'VM Manager: Import task expired waiting for inventory data', 'even...</var>
<status status="PASS" start="2024-12-04T20:05:30.244050" elapsed="0.038727"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.291059" level="INFO">${key} = ['1733290958311']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.282777" elapsed="0.008282"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.291059" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.291059" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.298516" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.291059" elapsed="0.007457"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.299920" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.298516" elapsed="0.001404"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.299920" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.291059" elapsed="0.008861"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.299920" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.299920" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.308362" level="INFO">${values} = ['Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.299920" elapsed="0.008442"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.308362" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.308362" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.308362" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.299920" elapsed="0.008442"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.309843" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.309843" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.317940" level="INFO">${values} = [6]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.309843" elapsed="0.008097"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.317940" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.317940" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.317940" elapsed="0.000000"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.308362" elapsed="0.009578"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.291059" elapsed="0.026881"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-dlminvmgr-0', 'origin_app_id': 'capp-infra:DLM', 'object_id': 'RobotProviderData[c0abd589-7850-4653-9df9-663f1c2d86c8]', 'object_description': 'NSO Provider nso', 'event_t...</var>
<status status="PASS" start="2024-12-04T20:05:30.282777" elapsed="0.035163"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.326215" level="INFO">${key} = ['1733194811154']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.318947" elapsed="0.007268"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.326215" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.326215" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.334577" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.326215" elapsed="0.008362"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.335574" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.334577" elapsed="0.000997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.335574" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.326215" elapsed="0.009359"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.335574" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.335574" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.343957" level="INFO">${values} = ['started CLMS update consumer']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.335574" elapsed="0.008383"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.345029" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.343957" elapsed="0.001072"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.345029" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.335574" elapsed="0.009455"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.345029" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.345029" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.353251" level="INFO">${values} = [1]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.345029" elapsed="0.008222"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.353251" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.353251" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.353251" elapsed="0.001434"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.345029" elapsed="0.009656"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.326215" elapsed="0.028470"/>
</for>
<var name="${data}">{'origin_service_id': 'capp-hi', 'origin_app_id': 'capp-hi:robot-pulse-0', 'object_id': 'ErrLicenseMgr', 'object_description': 'HI startup', 'event_type': 21, 'events_count': 1, 'Created': '1733194811...</var>
<status status="PASS" start="2024-12-04T20:05:30.317940" elapsed="0.036745"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.362533" level="INFO">${key} = ['1733291372558']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.354685" elapsed="0.007848"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.363553" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.363553" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.371123" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.363553" elapsed="0.007570"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.372155" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.371123" elapsed="0.001032"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.372155" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.362533" elapsed="0.009622"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.372155" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.372155" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.380614" level="INFO">${values} = ['Status changed from NOT_IN_USE to EVALUATION']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.372155" elapsed="0.008459"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.380614" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.380614" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.380614" elapsed="0.000991"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.372155" elapsed="0.009450"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.381605" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.381605" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.390066" level="INFO">${values} = [4]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.381605" elapsed="0.008461"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.391064" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.390066" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.391064" elapsed="0.000000"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.381605" elapsed="0.009459"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.362533" elapsed="0.028531"/>
</for>
<var name="${data}">{'origin_service_id': 'helios', 'origin_app_id': 'capp-infra', 'object_id': 'Crosswork Platform Services', 'object_description': 'Collection services smart license', 'event_type': 0, 'events_count': 4...</var>
<status status="PASS" start="2024-12-04T20:05:30.354685" elapsed="0.036379"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.399071" level="INFO">${key} = ['1733304741641']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.391064" elapsed="0.008007"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.399071" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.399071" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.408009" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.399071" elapsed="0.008938"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.409023" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.408009" elapsed="0.001014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.409023" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.399071" elapsed="0.009952"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.409023" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.409023" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.430860" level="INFO">${values} = ['10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you requir...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.409023" elapsed="0.021837"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.431857" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.430860" elapsed="0.000997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.431857" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.409023" elapsed="0.022834"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.431857" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.431857" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.440286" level="INFO">${values} = [1]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.431857" elapsed="0.008429"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.440286" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.440286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.440286" elapsed="0.001181"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.431857" elapsed="0.009610"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.399071" elapsed="0.042396"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-orch-6c55cd45fc-wmvz4', 'origin_app_id': 'capp-infra', 'object_id': '10-67-22-37-hybrid.nbnco.net.au CPU Utilization Alarm', 'object_description': '10-67-22-37-hybrid.nbnc...</var>
<status status="PASS" start="2024-12-04T20:05:30.391064" elapsed="0.050403"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.448902" level="INFO">${key} = ['1733291009342']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.441467" elapsed="0.008425"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.449892" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.449892" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.457434" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.449892" elapsed="0.007542"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.458432" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.458432" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.458432" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.449892" elapsed="0.008540"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.459428" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.459428" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.467430" level="INFO">${values} = ['Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.459428" elapsed="0.008002"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.467430" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.467430" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.467430" elapsed="0.001000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.458432" elapsed="0.009998"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.468430" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.468430" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.476132" level="INFO">${values} = [3]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.468430" elapsed="0.007702"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.477138" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.476132" elapsed="0.001006"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.477138" elapsed="0.000000"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.468430" elapsed="0.008708"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.449892" elapsed="0.027246"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-dlminvmgr-0', 'origin_app_id': 'capp-infra:DLM', 'object_id': 'RobotNodeData[61d6967c-7582-41d8-a711-5ab9363b81ce]', 'object_description': 'Device GRE-1.nbnco.net.au (61d6...</var>
<status status="PASS" start="2024-12-04T20:05:30.441467" elapsed="0.035671"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.485986" level="INFO">${key} = ['1733194747923']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.478131" elapsed="0.007855"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.486992" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.485986" elapsed="0.001006"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.494942" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.486992" elapsed="0.007950"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.495944" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.494942" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.495944" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.485986" elapsed="0.009958"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.496942" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.496942" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.504656" level="INFO">${values} = ['profileChief Initialization']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.496942" elapsed="0.007714"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.505685" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.505685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.505685" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.495944" elapsed="0.009741"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.505685" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.505685" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.514134" level="INFO">${values} = [5]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.506744" elapsed="0.007390"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.515134" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.514134" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.515134" elapsed="0.000000"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.505685" elapsed="0.009449"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.485986" elapsed="0.029148"/>
</for>
<var name="${data}">{'origin_service_id': 'capp-hi', 'origin_app_id': 'capp-hi', 'object_id': 'ProfileChiefInit', 'object_description': 'HI KPI Profile chief initalization', 'event_type': 31, 'events_count': 5, 'Created'...</var>
<status status="PASS" start="2024-12-04T20:05:30.477138" elapsed="0.037996"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.523191" level="INFO">${key} = ['1733291012406']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.515134" elapsed="0.008057"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.523191" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.523191" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.531177" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.523191" elapsed="0.007986"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.532179" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.531177" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.532179" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.523191" elapsed="0.008988"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.532179" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.532179" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.541041" level="INFO">${values} = ['Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.532179" elapsed="0.008862"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.541041" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.541041" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.541041" elapsed="0.001358"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.532179" elapsed="0.010220"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.542399" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.542399" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.549893" level="INFO">${values} = [3]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.542399" elapsed="0.008511"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.550910" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.550910" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.550910" elapsed="0.000000"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.542399" elapsed="0.008511"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.523191" elapsed="0.027719"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-dlminvmgr-0', 'origin_app_id': 'capp-infra:DLM', 'object_id': 'RobotNodeData[1f7ff894-9129-421b-a693-4d5589b043e5]', 'object_description': 'Device GRE-2.nbnco.net.au (1f7f...</var>
<status status="PASS" start="2024-12-04T20:05:30.515134" elapsed="0.035776"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.561748" level="INFO">${key} = ['1733196151171']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.Updated</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.550910" elapsed="0.010838"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.561748" level="INFO">${search} = $.AlarmCategory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.561748" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.569999" level="INFO">${values} = ['System']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.561748" elapsed="0.008251"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.570518" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.569999" elapsed="0.000519"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.570518" elapsed="0.000000"/>
</kw>
<var name="${item}">AlarmCategory</var>
<status status="PASS" start="2024-12-04T20:05:30.561748" elapsed="0.008770"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.570518" level="INFO">${search} = $.Description</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.570518" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.578612" level="INFO">${values} = ['Crosswork kubernetes certificates will expire in 305 days']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.570518" elapsed="0.008094"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.578612" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.578612" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.579617" elapsed="0.000000"/>
</kw>
<var name="${item}">Description</var>
<status status="PASS" start="2024-12-04T20:05:30.570518" elapsed="0.009099"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.579617" level="INFO">${search} = $.events_count</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.579617" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.588119" level="INFO">${values} = [7]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.579617" elapsed="0.008502"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.588119" level="INFO">${MSG} = --CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
A...</msg>
<arg>${MSG}</arg>
<arg>${MSG}Alarms:${key}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.588119" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms:${key}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.588119" elapsed="0.001016"/>
</kw>
<var name="${item}">events_count</var>
<status status="PASS" start="2024-12-04T20:05:30.579617" elapsed="0.009518"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-04T20:05:30.561748" elapsed="0.027387"/>
</for>
<var name="${data}">{'origin_service_id': 'robot-orch-6c55cd45fc-r9dkr', 'origin_app_id': 'capp-infra', 'object_id': 'CROSSWORK_K8S_CERT_EXPIRY_ALARM', 'object_description': 'Crosswork kubernetes certificate management',...</var>
<status status="PASS" start="2024-12-04T20:05:30.550910" elapsed="0.038225"/>
</iter>
<var>${data}</var>
<value>@{json_response['alarms']}</value>
<status status="PASS" start="2024-12-04T20:05:30.195891" elapsed="0.393244"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.589135" level="INFO">${CNC_SYSALARMS} = ["Alarms:['1733194738757']:AlarmCategory:System", "Alarms:['1733194738757']:Description:NCAInit", "Alarms:['1733194738757']:events_count:9", "Alarms:['1733197881066']:AlarmCategory:System", "Alarms:['...</msg>
<arg>${CNC_SYSALARMS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:30.589135" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:30.589135" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves Open/active system level alarms (first 10)</doc>
<status status="PASS" start="2024-12-04T20:05:27.183481" elapsed="3.405654"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:30.589135" level="INFO">Set test message to:
--CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
Alarms:['1733197881066']:Description:VM Manager: Import task expired waiting for inventory data
Alarms:['1733197881066']:events_count:3
Alarms:['1733290958311']:AlarmCategory:System
Alarms:['1733290958311']:Description:Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host
Alarms:['1733290958311']:events_count:6
Alarms:['1733194811154']:AlarmCategory:System
Alarms:['1733194811154']:Description:started CLMS update consumer
Alarms:['1733194811154']:events_count:1
Alarms:['1733291372558']:AlarmCategory:System
Alarms:['1733291372558']:Description:Status changed from NOT_IN_USE to EVALUATION
Alarms:['1733291372558']:events_count:4
Alarms:['1733304741641']:AlarmCategory:System
Alarms:['1733304741641']:Description:10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.
Alarms:['1733304741641']:events_count:1
Alarms:['1733291009342']:AlarmCategory:System
Alarms:['1733291009342']:Description:Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22
Alarms:['1733291009342']:events_count:3
Alarms:['1733194747923']:AlarmCategory:System
Alarms:['1733194747923']:Description:profileChief Initialization
Alarms:['1733194747923']:events_count:5
Alarms:['1733291012406']:AlarmCategory:System
Alarms:['1733291012406']:Description:Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22
Alarms:['1733291012406']:events_count:3
Alarms:['1733196151171']:AlarmCategory:System
Alarms:['1733196151171']:Description:Crosswork kubernetes certificates will expire in 305 days
Alarms:['1733196151171']:events_count:7

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:30.589135" elapsed="0.000000"/>
</kw>
<doc>Find all the current /active system alarms</doc>
<tag>ALARMS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-04T20:05:27.182482" elapsed="3.406653">--CNC System Alarms--
Alarms:['1733194738757']:AlarmCategory:System
Alarms:['1733194738757']:Description:NCAInit
Alarms:['1733194738757']:events_count:9
Alarms:['1733197881066']:AlarmCategory:System
Alarms:['1733197881066']:Description:VM Manager: Import task expired waiting for inventory data
Alarms:['1733197881066']:events_count:3
Alarms:['1733290958311']:AlarmCategory:System
Alarms:['1733290958311']:Description:Was not able to connect to NSO DLM service Pack: dial tcp 10.67.22.46:20243: connect: no route to host
Alarms:['1733290958311']:events_count:6
Alarms:['1733194811154']:AlarmCategory:System
Alarms:['1733194811154']:Description:started CLMS update consumer
Alarms:['1733194811154']:events_count:1
Alarms:['1733291372558']:AlarmCategory:System
Alarms:['1733291372558']:Description:Status changed from NOT_IN_USE to EVALUATION
Alarms:['1733291372558']:events_count:4
Alarms:['1733304741641']:AlarmCategory:System
Alarms:['1733304741641']:Description:10-67-22-37-hybrid.nbnco.net.au cpu usage observed 62% is in the Moderate range (60% - 90%). If CPU utilization continues to increase plan to add additional resources. Contact Cisco CX if you require assistance.
Alarms:['1733304741641']:events_count:1
Alarms:['1733291009342']:AlarmCategory:System
Alarms:['1733291009342']:Description:Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22
Alarms:['1733291009342']:events_count:3
Alarms:['1733194747923']:AlarmCategory:System
Alarms:['1733194747923']:Description:profileChief Initialization
Alarms:['1733194747923']:events_count:5
Alarms:['1733291012406']:AlarmCategory:System
Alarms:['1733291012406']:Description:Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22
Alarms:['1733291012406']:events_count:3
Alarms:['1733196151171']:AlarmCategory:System
Alarms:['1733196151171']:Description:Crosswork kubernetes certificates will expire in 305 days
Alarms:['1733196151171']:events_count:7

</status>
</test>
<test id="s1-t12" name="Retrieve CNC Providers" line="115">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:30.591161" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.591161" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-providers-v2" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.592158" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.592158" level="INFO">${myurl} = /crosswork/inventory/v1/providers/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/providers/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.592158" level="INFO">${payload} = {"limit":100,"next_from":"0","filter":{}}</msg>
<var>${payload}</var>
<arg>{"limit":100,"next_from":"0","filter":{}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.593158" level="INFO">${json_payload} = {'limit': 100, 'next_from': '0', 'filter': {}}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.001000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.593158" level="INFO">@{CNC_PROVIDERS} = [ ]</msg>
<var>@{CNC_PROVIDERS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:30.593158" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.593158" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:30.593158" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.593158" level="INFO">@{FIELDS} = [ profile | connectivity_info..port | connectivity_info..timeout | connectivity_info..type | connectivity_info..ipaddrs ]</msg>
<var>@{FIELDS}</var>
<arg>profile</arg>
<arg>connectivity_info..port</arg>
<arg>connectivity_info..timeout</arg>
<arg>connectivity_info..type</arg>
<arg>connectivity_info..ipaddrs</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:30.593158" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.593158" level="INFO">${description} = Retrieve CNC Providers</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.593158" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:30.658855" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/inventory/v1/providers/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:30.659855" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/inventory/v1/providers/query 
 path_url=/crosswork/inventory/v1/providers/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:30.659855" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/inventory/v1/providers/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:17 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"uuid":"a9ae2a8c-40ca-4963-9408-ee90935aec89","name":"pce","reachability_state":"CONN_STATE_UNREACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_HTTP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.50","mask":"32"}],"port":8080,"timeout":"30","reachability_state":"CONN_STATE_UNREACHABLE","error":"Get \"http://10.67.22.50:8080/foo/subscribe/json\": dial tcp 10.67.22.50:8080: connect: connection refused","ReachabilityErrorRetryCount":1}],"profile":"pce","last_upd_time":"1728103466","supported_models":[{}],"family":"ROBOT_PROVIDER_XTC"},{"uuid":"c0abd589-7850-4653-9df9-663f1c2d86c8","name":"nso","reachability_state":"CONN_STATE_REACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_HTTP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"32"}],"port":8080,"timeout":"30","reachability_state":"CONN_STATE_REACHABLE"},{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"32"}],"port":22,"timeout":"30","reachability_state":"CONN_STATE_REACHABLE"},{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"10.67.22.46","mask":"32"}],"port":2022,"timeout":"30","reachability_state":"CONN_STATE_REACHABLE"}],"profile":"nso","last_upd_time":"1728263175","supported_models":[{"model_prefix":"Cisco-IOS-XR","model_version":"cisco-iosxr-cli-7.52"}],"family":"ROBOT_PROVIDER_NSO","properties":{"forward":"true","nso_crosslaunch_url":"http://10.67.22.46:8080"}}],"total_count":2,"result_count":2} 
 </msg>
<msg time="2024-12-04T20:05:30.659855" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:30.660849" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:30.593158" elapsed="0.067691"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.661850" level="INFO">${json_response} = {'data': [{'uuid': 'a9ae2a8c-40ca-4963-9408-ee90935aec89', 'name': 'pce', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af'...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:30.660849" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.662925" level="INFO">${MSG} = --Providers--
</msg>
<arg>${MSG}</arg>
<arg>--Providers--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.661850" elapsed="0.001075"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.664946" level="INFO">{'uuid': 'a9ae2a8c-40ca-4963-9408-ee90935aec89', 'name': 'pce', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}], 'port': 8080, 'timeout': '30', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'error': 'Get "http://10.67.22.50:8080/foo/subscribe/json": dial tcp 10.67.22.50:8080: connect: connection refused', 'ReachabilityErrorRetryCount': 1}], 'profile': 'pce', 'last_upd_time': '1728103466', 'supported_models': [{}], 'family': 'ROBOT_PROVIDER_XTC'}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.663947" elapsed="0.000999"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.665940" level="INFO">${key} = pce</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.664946" elapsed="0.000994"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.666951" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.666951" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.681018" level="INFO">${values} = ['pce']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.666951" elapsed="0.014067"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.681018" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.681018" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.681018" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-04T20:05:30.665940" elapsed="0.015078"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.681018" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.681018" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.690458" level="INFO">${values} = [8080]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.681018" elapsed="0.009440"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.691456" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.691456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.691456" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-04T20:05:30.681018" elapsed="0.010438"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.691456" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.691456" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.699849" level="INFO">${values} = ['30']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.691456" elapsed="0.008393"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.699849" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.699849" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.699849" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-04T20:05:30.691456" elapsed="0.008393"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.699849" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.699849" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.707653" level="INFO">${values} = ['ROBOT_MSVC_TRANS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.699849" elapsed="0.007804"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.708678" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.708678" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.708678" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-04T20:05:30.699849" elapsed="0.008829"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.708678" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.708678" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.717152" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.708678" elapsed="0.008474"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.717152" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.717152" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.717152" elapsed="0.000998"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-04T20:05:30.708678" elapsed="0.009472"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:30.665940" elapsed="0.052210"/>
</for>
<var name="${data}">{'uuid': 'a9ae2a8c-40ca-4963-9408-ee90935aec89', 'name': 'pce', 'reachability_state': 'CONN_STATE_UNREACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_I...</var>
<status status="PASS" start="2024-12-04T20:05:30.663947" elapsed="0.054203"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.718150" level="INFO">{'uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8', 'name': 'nso', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], 'port': 8080, 'timeout': '30', 'reachability_state': 'CONN_STATE_REACHABLE'}, {'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], 'port': 22, 'timeout': '30', 'reachability_state': 'CONN_STATE_REACHABLE'}, {'type': 'ROBOT_MSVC_TRANS_NETCONF', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], 'port': 2022, 'timeout': '30', 'reachability_state': 'CONN_STATE_REACHABLE'}], 'profile': 'nso', 'last_upd_time': '1728263175', 'supported_models': [{'model_prefix': 'Cisco-IOS-XR', 'model_version': 'cisco-iosxr-cli-7.52'}], 'family': 'ROBOT_PROVIDER_NSO', 'properties': {'forward': 'true', 'nso_crosslaunch_url': 'http://10.67.22.46:8080'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.718150" level="INFO">${key} = nso</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.718150" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.726537" level="INFO">${values} = ['nso']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.008387"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.727525" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.726537" elapsed="0.000988"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.727525" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.009375"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.727525" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.727525" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.735564" level="INFO">${values} = [8080, 22, 2022]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.727525" elapsed="0.008039"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.736552" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.735564" elapsed="0.000988"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.736552" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-04T20:05:30.727525" elapsed="0.009027"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.736552" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.736552" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.744170" level="INFO">${values} = ['30', '30', '30']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.736552" elapsed="0.007618"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.745187" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.744170" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.745187" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-04T20:05:30.736552" elapsed="0.008635"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.745187" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.745187" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.752197" level="INFO">${values} = ['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.745187" elapsed="0.007010"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.752197" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.752197" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.753721" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-04T20:05:30.745187" elapsed="0.008534"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.753721" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.753721" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:30.774562" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_T...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:30.753721" elapsed="0.020841"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.774562" level="INFO">${MSG} = --Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.774562" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.774562" elapsed="0.000988"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-04T20:05:30.753721" elapsed="0.021829"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.057400"/>
</for>
<var name="${data}">{'uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8', 'name': 'nso', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INE...</var>
<status status="PASS" start="2024-12-04T20:05:30.718150" elapsed="0.057400"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-04T20:05:30.662925" elapsed="0.112625"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.775550" level="INFO">${CNC_PROVIDERS} = ["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet...</msg>
<arg>${CNC_PROVIDERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:30.775550" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:30.775550" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Providers (first 100)</doc>
<status status="PASS" start="2024-12-04T20:05:30.592158" elapsed="0.183392"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:30.775550" level="INFO">Set test message to:
--Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]
nso|profile:['nso']
nso|connectivity_info..port:[8080, 22, 2022]
nso|connectivity_info..timeout:['30', '30', '30']
nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']
nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:30.775550" elapsed="0.000000"/>
</kw>
<doc>Find Providers</doc>
<tag>DATA-COLLECTION</tag>
<tag>PROVIDERS</tag>
<status status="PASS" start="2024-12-04T20:05:30.591161" elapsed="0.184389">--Providers--
pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]
nso|profile:['nso']
nso|connectivity_info..port:[8080, 22, 2022]
nso|connectivity_info..timeout:['30', '30', '30']
nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']
nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]

</status>
</test>
<test id="s1-t13" name="Retrieve CNC Credentials" line="122">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:30.777065" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.775550" elapsed="0.001515"/>
</kw>
<kw name="get-cnc-credentials" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.777065" elapsed="0.001023"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">${description} = Retrieve CNC Credentials</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">@{CNC_CREDENTIALS} = [ ]</msg>
<var>@{CNC_CREDENTIALS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">${myurl} = /crosswork/inventory/v1/credentials/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/credentials/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.778088" level="INFO">${payload} = {"limit":100,"next_from":"0","filter":{}}</msg>
<var>${payload}</var>
<arg>{"limit":100,"next_from":"0","filter":{}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.779081" level="INFO">${json_payload} = {'limit': 100, 'next_from': '0', 'filter': {}}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:30.778088" elapsed="0.000993"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:30.835171" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/inventory/v1/credentials/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:30.835171" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/inventory/v1/credentials/query 
 path_url=/crosswork/inventory/v1/credentials/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '46'} 
 body=b'{"limit": 100, "next_from": "0", "filter": {}}' 
 </msg>
<msg time="2024-12-04T20:05:30.835171" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/inventory/v1/credentials/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"profile":"pce","user_pass":[{"user_name":"cnc_user","password":"******","type":"ROBOT_USERPASS_HTTP"}]},{"profile":"nso","user_pass":[{"user_name":"simon","password":"******","type":"ROBOT_USERPASS_SSH","enable_password":"ROBOT_USERPASSEN_DISABLE"},{"user_name":"simon","password":"******","type":"ROBOT_USERPASS_HTTP"},{"user_name":"simon","password":"******","type":"ROBOT_USERPASS_NETCONF"}]},{"profile":"device","v2_info":{"read_community":"******"},"user_pass":[{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_SSH"},{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_GNMI"}]},{"profile":"vgre","v2_info":{"read_community":"******"},"user_pass":[{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_SSH"}]}],"total_count":4,"result_count":4} 
 </msg>
<msg time="2024-12-04T20:05:30.835171" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:30.836700" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json_payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:30.779081" elapsed="0.057619"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.837725" level="INFO">${credentials} = {'data': [{'profile': 'pce', 'user_pass': [{'user_name': 'cnc_user', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}]}, {'profile': 'nso', 'user_pass': [{'user_name': 'simon', 'password': '******...</msg>
<var>${credentials}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:30.836700" elapsed="0.001025"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.838743" level="INFO">${MSG} = --CNC Credentials--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Credentials--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.837725" elapsed="0.001018"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.839817" level="INFO">{'profile': 'pce', 'user_pass': [{'user_name': 'cnc_user', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.839817" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.840760" elapsed="0.001054"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.843800" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.841814" elapsed="0.001986"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.843800" elapsed="0.001957"/>
</kw>
<var name="${user}">{'user_name': 'cnc_user', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}</var>
<status status="PASS" start="2024-12-04T20:05:30.841814" elapsed="0.003943"/>
</iter>
<var>${user}</var>
<value>@{item['user_pass']}</value>
<status status="PASS" start="2024-12-04T20:05:30.841814" elapsed="0.003943"/>
</for>
<var name="${item}">{'profile': 'pce', 'user_pass': [{'user_name': 'cnc_user', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}]}</var>
<status status="PASS" start="2024-12-04T20:05:30.839817" elapsed="0.005940"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.845757" level="INFO">{'profile': 'nso', 'user_pass': [{'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_SSH', 'enable_password': 'ROBOT_USERPASSEN_DISABLE'}, {'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}, {'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_NETCONF'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.845757" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.845757" elapsed="0.001002"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.847756" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.846759" elapsed="0.000997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.847756" elapsed="0.001000"/>
</kw>
<var name="${user}">{'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_SSH', 'enable_password': 'ROBOT_USERPASSEN_DISABLE'}</var>
<status status="PASS" start="2024-12-04T20:05:30.846759" elapsed="0.001997"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.849755" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.848756" elapsed="0.000999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.849755" elapsed="0.001000"/>
</kw>
<var name="${user}">{'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}</var>
<status status="PASS" start="2024-12-04T20:05:30.848756" elapsed="0.001999"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.850755" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.850755" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.850755" elapsed="0.001000"/>
</kw>
<var name="${user}">{'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_NETCONF'}</var>
<status status="PASS" start="2024-12-04T20:05:30.850755" elapsed="0.001000"/>
</iter>
<var>${user}</var>
<value>@{item['user_pass']}</value>
<status status="PASS" start="2024-12-04T20:05:30.846759" elapsed="0.004996"/>
</for>
<var name="${item}">{'profile': 'nso', 'user_pass': [{'user_name': 'simon', 'password': '******', 'type': 'ROBOT_USERPASS_SSH', 'enable_password': 'ROBOT_USERPASSEN_DISABLE'}, {'user_name': 'simon', 'password': '******',...</var>
<status status="PASS" start="2024-12-04T20:05:30.845757" elapsed="0.005998"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.851755" level="INFO">{'profile': 'device', 'v2_info': {'read_community': '******'}, 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}, {'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_GNMI'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.851755" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.851755" elapsed="0.000807"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.853649" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.852562" elapsed="0.001087"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.853649" elapsed="0.000000"/>
</kw>
<var name="${user}">{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}</var>
<status status="PASS" start="2024-12-04T20:05:30.852562" elapsed="0.001087"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.853649" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USER...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.853649" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.000000"/>
</kw>
<var name="${user}">{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_GNMI'}</var>
<status status="PASS" start="2024-12-04T20:05:30.853649" elapsed="0.001486"/>
</iter>
<var>${user}</var>
<value>@{item['user_pass']}</value>
<status status="PASS" start="2024-12-04T20:05:30.852562" elapsed="0.002573"/>
</for>
<var name="${item}">{'profile': 'device', 'v2_info': {'read_community': '******'}, 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}, {'user_name': 'admin', 'password': '******', 't...</var>
<status status="PASS" start="2024-12-04T20:05:30.851755" elapsed="0.003380"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.855135" level="INFO">{'profile': 'vgre', 'v2_info': {'read_community': '******'}, 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.856606" level="INFO">${MSG} = --CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USER...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['profile']}|${user['user_name']}:${user['type']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.856606" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item['profile']}|${user['user_name']}:${user['type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.856606" elapsed="0.001007"/>
</kw>
<var name="${user}">{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}</var>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.002478"/>
</iter>
<var>${user}</var>
<value>@{item['user_pass']}</value>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.002478"/>
</for>
<var name="${item}">{'profile': 'vgre', 'v2_info': {'read_community': '******'}, 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}</var>
<status status="PASS" start="2024-12-04T20:05:30.855135" elapsed="0.002478"/>
</iter>
<var>${item}</var>
<value>@{credentials['data']}</value>
<status status="PASS" start="2024-12-04T20:05:30.838743" elapsed="0.018870"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.858122" level="INFO">${CNC_CREDENTIALS} = ['pce', 'pce|cnc_user:ROBOT_USERPASS_HTTP', 'nso', 'nso|simon:ROBOT_USERPASS_SSH', 'nso|simon:ROBOT_USERPASS_HTTP', 'nso|simon:ROBOT_USERPASS_NETCONF', 'device', 'device|admin:ROBOT_USERPASS_SSH', 'de...</msg>
<arg>${CNC_CREDENTIALS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:30.857613" elapsed="0.000509"/>
</kw>
<msg time="2024-12-04T20:05:30.858122" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Credentials</doc>
<status status="PASS" start="2024-12-04T20:05:30.777065" elapsed="0.081057"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:30.858122" level="INFO">Set test message to:
--CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USERPASS_GNMI
vgre|admin:ROBOT_USERPASS_SSH

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:30.858122" elapsed="0.000000"/>
</kw>
<doc>Find credential policies</doc>
<tag>CREDENTIALS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-04T20:05:30.775550" elapsed="0.082572">--CNC Credentials--
pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USERPASS_GNMI
vgre|admin:ROBOT_USERPASS_SSH

</status>
</test>
<test id="s1-t14" name="Retrieve CNC KPIs" line="129">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:30.859132" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:30.859132" elapsed="0.000000"/>
</kw>
<kw name="get-kpis" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.860132" level="INFO">${myurl} = /crosswork/hi/v1/kpis</msg>
<var>${myurl}</var>
<arg>/crosswork/hi/v1/kpis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.860132" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.860132" level="INFO">@{CNC_KPI} = [ ]</msg>
<var>@{CNC_KPI}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:30.860132" level="INFO">${description} = Retrieve CNC KPIs</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.093826" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/hi/v1/kpis HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:31.094831" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/hi/v1/kpis 
 path_url=/crosswork/hi/v1/kpis 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:31.095829" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/hi/v1/kpis 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={
  "kpis": {
    "kpi": [
      {
        "kpi_id": "pulse_device_uptime",
        "kpi_name": "Device uptime",
        "category": "BASICS",
        "summary": "Monitors device uptime",
        "details": "Monitors device uptime",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 600,
                "min": 600,
                "max": 1800,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysObjectID"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysUpTime"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysContact"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysName"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysLocation"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysServices"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysORLastChange"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_device_uptime_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_device_uptime\",\n  \"description\" : \"This alert template detects abnormal condition if KPI value goes below a threshold.\",\n  \"master_template\": \"stream-simple-threshold-below-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1800.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Device uptime in seconds below which alert is raised to detect recent reboot of the device\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_device_uptime\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003c= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : Device Reloaded {kpi_stream} sec back!\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003e ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : Device uptime \u003e Threshold.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(sysUpTime)/100.0\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"sysUpTime\",\n         \"eval_expression\" : \"SNMPv2-MIB:SNMPv2-MIB/system\"\n       }\n     ]\n  }\n}",
              "template": "One Level(Lower) Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1800.0",
                    "description": "Device uptime in seconds below which alert is raised to detect recent reboot of the device",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-device-uptime-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "SNMPv2-MIB:",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738
      },
      {
        "kpi_id": "pulse_cpu_threshold",
        "kpi_name": "CPU threshold",
        "category": "CPU",
        "summary": "Monitors CPU usage across route processor and line cards on routers",
        "details": "Monitors CPU usage across route processor and line cards on routers; generates an alert when CPU utilization exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-one-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-five-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-fifteen-minute"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_cpu_threshold_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_cpu_threshold\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"LEVEL1_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"50.0\",\n      \"display_name\" : \"Level 1 Alert Threshold\",\n      \"description\": \"Generates a level 1 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL1_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"WARNING\",\n      \"display_name\" : \"Level 1 Alert Severity\",\n      \"description\": \"Severity label of a level 1 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"LEVEL2_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"70.0\",\n      \"display_name\" : \"Level 2 Alert Threshold\",\n      \"description\": \"Generates a level 2 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL2_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"CRITICAL\",\n      \"display_name\" : \"Level 2 Alert Severity\",\n      \"description\": \"Severity label of a level 2 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"total-cpu-five-minute\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_cpu_threshold\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL2_SEVERITY} : {node-name}  5min CPU Utilization: {kpi_stream} % higher than Threshold: {LEVEL2_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL1_THRESHOLD \u0026\u0026 kpi_stream \u003c LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL1_SEVERITY} : {node-name}  5min CPU Utilization: {kpi_stream} % higher than Threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003c LEVEL1_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : 5min CPU Utilization: {kpi_stream} is below threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(total-cpu-five-minute)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"total-cpu-five-minute\",\n         \"eval_expression\" : \"Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "LEVEL1_THRESHOLD",
                    "type": "float",
                    "value": "50.0",
                    "description": "Generates a level 1 alert when this threshold is exceeded",
                    "display_name": "Level 1 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL1_SEVERITY",
                    "type": "string",
                    "value": "WARNING",
                    "description": "Severity label of a level 1 alert",
                    "display_name": "Level 1 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  },
                  {
                    "name": "LEVEL2_THRESHOLD",
                    "type": "float",
                    "value": "70.0",
                    "description": "Generates a level 2 alert when this threshold is exceeded",
                    "display_name": "Level 2 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL2_SEVERITY",
                    "type": "string",
                    "value": "CRITICAL",
                    "description": "Severity label of a level 2 alert",
                    "display_name": "Level 2 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-cpu-threshold-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-cpu-threshold-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-wdsysmon-fd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738
      },
      {
        "kpi_id": "pulse_cpu_utilization",
        "kpi_name": "CPU utilization",
        "category": "CPU",
        "summary": "Monitors CPU usage across route processor and line cards on routers",
        "details": "Monitors CPU usage across route processor and line cards on routers; generates an alert when CPU utilization is unusual",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-one-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-five-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-fifteen-minute"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_cpu_utilization_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_cpu_utilization\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"total-cpu-five-minute\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_cpu_utilization\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {node-name}  5min CPU Utilization: {kpi_stream} % is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {node-name}  5min CPU Utilization: {kpi_stream} % is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {node-name}  5min CPU Utilization: {kpi_stream} % is now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(total-cpu-five-minute)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"total-cpu-five-minute\",\n         \"eval_expression\" : \"Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-cpu-utilization-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-cpu-utilization-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-wdsysmon-fd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738
      },
      {
        "kpi_id": "pulse_cef_drops",
        "kpi_name": "CEF drops",
        "category": "Dataplane-Counters",
        "summary": "Monitors CEF drop counters",
        "details": "Monitors CEF drop counters and baseline; generates an alert when an unusual amount of drops occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/no-route-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/punt-unreachable-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/df-unreachable-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/encapsulation-failure-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/incomplete-adjacency-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/unresolved-prefix-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/unsupported-feature-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/discard-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/checksum-error-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/fragmenation-consumed-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/fragmenation-failure-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/null-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/rpf-check-failure-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/acl-in-rpf-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/rp-destination-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/total-number-of-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/mpls-disabled-interface"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/gre-lookup-failed-drop"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/gre-error-drop"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/lisp-punt-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/lisp-encap-error-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/lisp-decap-error-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops/multi-label-drops"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_cef_drops_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_cef_drops\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_cef_drops\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {node-name}  CEF drops: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {node-name}  CEF drops: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"acl-in-rpf-packets + checksum-error-packets + df-unreachable-packets + discard-packets + encapsulation-failure-packets + fragmenation-consumed-packets + fragmenation-failure-packets + gre-error-drop + gre-lookup-failed-drop + incomplete-adjacency-packets + lisp-decap-error-drops + lisp-encap-error-drops + lisp-punt-drops + mpls-disabled-interface + multi-label-drops + no-route-packets + null-packets + punt-unreachable-packets + rp-destination-drop-packets + rpf-check-failure-packets + unresolved-prefix-packets + unsupported-feature-packets\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"acl-in-rpf-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"checksum-error-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"df-unreachable-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"discard-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"encapsulation-failure-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"fragmenation-consumed-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"fragmenation-failure-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"gre-error-drop\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"gre-lookup-failed-drop\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"incomplete-adjacency-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"lisp-decap-error-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"lisp-encap-error-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"lisp-punt-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"mpls-disabled-interface\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"multi-label-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"no-route-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"null-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"punt-unreachable-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"rp-destination-drop-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"rpf-check-failure-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"unresolved-prefix-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"unsupported-feature-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-fib-common-oper:fib-statistics/nodes/node/drops\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-cef-drops-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-cef-drops-detail.json",
              "label": "Detailed"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-fib-common-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738
      },
      {
        "kpi_id": "pulse_cli_filesystem_utilization",
        "kpi_name": "Filesystem utilization",
        "category": "Filesystem",
        "summary": "Monitors filesystem usage on active route processor",
        "details": "Monitors filesystem usage on active route processor; generates an alert when filesystem utilization exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "cli_xr_fileSystem:fileSystems/fileSystem/properties/size"
                  },
                  {
                    "path_id": "cli_xr_fileSystem:fileSystems/fileSystem/properties/free_space"
                  },
                  {
                    "path_id": "cli_xr_fileSystem:fileSystems/fileSystem/properties/fs_type"
                  },
                  {
                    "path_id": "cli_xr_fileSystem:fileSystems/fileSystem/properties/flags"
                  },
                  {
                    "path_id": "cli_xr_fileSystem:fileSystems/fileSystem/prefix"
                  }
                ]
              }
            }
          ],
          "transformers": [
            {
              "operation": "addFieldToTag",
              "fields": [
                "fileSystem/prefix"
              ],
              "arguments": [
                ""
              ]
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "prefix"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_cli_filesystem_utilization_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_cli_filesystem_utilization\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"LEVEL1_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"50.0\",\n      \"display_name\" : \"Level 1 Alert Threshold\",\n      \"description\": \"Generates a level 1 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL1_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"WARNING\",\n      \"display_name\" : \"Level 1 Alert Severity\",\n      \"description\": \"Severity label of a level 1 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"LEVEL2_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"70.0\",\n      \"display_name\" : \"Level 2 Alert Threshold\",\n      \"description\": \"Generates a level 2 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL2_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"CRITICAL\",\n      \"display_name\" : \"Level 2 Alert Severity\",\n      \"description\": \"Severity label of a level 2 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"fileSystem__prefix\\\" matches '^disk' or \\\"fileSystem__prefix\\\" matches '^harddisk'\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_cli_filesystem_utilization\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL: {fileSystem__prefix}  Filesystem Utilization: {kpi_stream}% is higher than Threshold: {LEVEL2_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL1_THRESHOLD \u0026\u0026 kpi_stream \u003c LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: {fileSystem__prefix} Filesystem Utilization: {kpi_stream}% is higher than Threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003c LEVEL1_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO: {fileSystem__prefix} Filesystem Utilization: {kpi_stream}% is below Threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"100 - (fileSystem__properties__free_space/fileSystem__properties__size)*100\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"fileSystem__properties__free_space\",\n         \"eval_expression\" : \"cli_xr_fileSystem:fileSystems\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"fileSystem__properties__size\",\n         \"eval_expression\" : \"cli_xr_fileSystem:fileSystems\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "LEVEL1_THRESHOLD",
                    "type": "float",
                    "value": "50.0",
                    "description": "Generates a level 1 alert when this threshold is exceeded",
                    "display_name": "Level 1 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL1_SEVERITY",
                    "type": "string",
                    "value": "WARNING",
                    "description": "Severity label of a level 1 alert",
                    "display_name": "Level 1 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  },
                  {
                    "name": "LEVEL2_THRESHOLD",
                    "type": "float",
                    "value": "70.0",
                    "description": "Generates a level 2 alert when this threshold is exceeded",
                    "display_name": "Level 2 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL2_SEVERITY",
                    "type": "string",
                    "value": "CRITICAL",
                    "description": "Severity label of a level 2 alert",
                    "display_name": "Level 2 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-FileSystem-Summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-FileSystem-Raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "YANG_CLI",
        "module_and_revision": "cli_xr_fileSystem:",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738
      },
      {
        "kpi_id": "pulse_ipsla_udp_echo_rtt",
        "kpi_name": "IP SLA UDP Echo RTT",
        "category": "IPSLA",
        "summary": "Monitors IP SLA UDP echo RTT; generates an alert when unusual RTT values occur",
        "details": "Monitors IP SLA UDP echo RTT; generates an alert when unusual RTT values occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target/common-stats/response-time"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "operation-id"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_ipsla_udp_echo_rtt_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ipsla_udp_echo_rtt\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"common-stats__response-time\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ipsla_udp_echo_rtt\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {operation-id}  RTT : {kpi_stream} msec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {operation-id}  RTT : {kpi_stream} msec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {operation-id} RTT : {kpi_stream} msec has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(common-stats__response-time)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"common-stats__response-time\",\n         \"eval_expression\" : \"Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-ipsla-udp-echo-rtt.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-man-ipsla-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_ipsla_udp_jitter",
        "kpi_name": "IP SLA UDP jitter monitoring",
        "category": "IPSLA",
        "summary": "Monitors IP SLA UDP jitter; generates an alert when an abnormal UDP jitter occurs",
        "details": "Monitors IP SLA UDP jitter; generates an alert when an abnormal UDP jitter occurs",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target/specific-stats/udp-jitter-stats/jitter-in"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target/specific-stats/udp-jitter-stats/jitter-out"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "operation-id"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_ipsla_udp_jitter_in_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ipsla_udp_jitter_in\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"specific-stats__udp-jitter-stats__jitter-in\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ipsla_udp_jitter_in\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {operation-id}  UDP Jitter-In : {kpi_stream} msec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {operation-id}  UDP Jitter-In : {kpi_stream} msec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name} UDP Jitter-In : {kpi_stream} msec has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(specific-stats__udp-jitter-stats__jitter-in)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"specific-stats__udp-jitter-stats__jitter-in\",\n         \"eval_expression\" : \"Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ipsla_udp_jitter_out_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ipsla_udp_jitter_out\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"specific-stats__udp-jitter-stats__jitter-out\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ipsla_udp_jitter_out\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {operation-id}  UDP Jitter-Out : {kpi_stream} msec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {operation-id}  UDP Jitter-Out : {kpi_stream} msec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name} UDP Jitter-Out : {kpi_stream} msec has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(specific-stats__udp-jitter-stats__jitter-out)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"specific-stats__udp-jitter-stats__jitter-out\",\n         \"eval_expression\" : \"Cisco-IOS-XR-man-ipsla-oper:ipsla/operation-data/operations/operation/statistics/latest/target\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-ipsla-udp-jitter-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-man-ipsla-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_layer2_lldp_summary",
        "kpi_name": "LLDP neighbors",
        "category": "LLDP",
        "summary": "Monitors LLDP neighbors; generates an alert when any sudden changes are detected",
        "details": "Monitors LLDP neighbors; generates an alert when any sudden changes are detected",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 120,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/device-id"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/chassis-id"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/port-id-detail"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/header-version"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/hold-time"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ethernet-lldp-oper:lldp/nodes/node/neighbors/summaries/summary/lldp-neighbor/enabled-capabilities"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer2-lldp-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-layer2-lldp-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ethernet-lldp-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_layer1_optics_alarms",
        "kpi_name": "Layer 1 optical alarms",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port optical alarms",
        "details": "Monitors per-port optical alarms",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/amp-gain-deg-high/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/amp-gain-deg-high/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/amp-gain-deg-low/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/amp-gain-deg-low/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/hidgd/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/hidgd/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-lbc/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-lbc/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-rx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-rx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-temperature/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-temperature/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-tx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-tx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-voltage/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-voltage/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-rx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-rx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/mea/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/mea/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/oorcd/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/oorcd/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/osnr/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/osnr/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-loc/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-loc/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-lol/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-lol/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-los/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/rx-los/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-fault/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-fault/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-lol/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-lol/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-los/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/tx-los/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/txpwr-mismatch/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/txpwr-mismatch/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/wvlool/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/wvlool/is-detected"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "optics-alarms-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-controller-optics-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_layer1_optics_errors",
        "kpi_name": "Layer 1 optical errors",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port Layer 1 errors",
        "details": "Monitors per-port Layer 1 errors; generates alert when error rates exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/admin-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/oper-state-up"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/link-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/error-counts/sync-header-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/error-counts/pcsbip-errors"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_layer1_optics_errors_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_layer1_optics_errors\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_layer1_optics_errors\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  (sync header errors + Pscbip errors)  Rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  (sync header errors + Pscbip errors)  Rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"sync-header-errors + pcsbip-errors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"sync-header-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"pcsbip-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-optics-errors-Raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-drivers-media-eth-oper:2015-01-07",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_layer1_optics_fecerrors",
        "kpi_name": "Layer 1 optical FEC errors",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port optical FEC errors",
        "details": "Monitors per-port optical FEC errors; generates an alert when FEC errors exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/admin-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/oper-state-up"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/phy-present"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/loopback"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/phy-details/vendor-serial-number"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/phy-details/optics-wavelength"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/phy-details/vendor"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/fec-details/fec"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/fec-details/corrected-codeword-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/fec-details/uncorrected-codeword-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/phy-info/media-type"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/link-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/speed"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/duplex"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/flowcontrol"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/ipg"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/laser-squelch-enabled"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/bandwidth-utilization"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/bandwidth"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/duplex"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/flowcontrol"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/config-override"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/fec"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/autoneg-enabled"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/mask"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/autoneg/speed"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface/layer1-info/led-state"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_layer1_optics_fecerrors_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_layer1_optics_fecerrors\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"100.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"phy-info__fec-details__fec\\\" == 'standard'\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_layer1_optics_fecerrors\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  FEC error rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  FEC error rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"phy-info__fec-details__corrected-codeword-count + phy-info__fec-details__uncorrected-codeword-count\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"phy-info__fec-details__corrected-codeword-count\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"phy-info__fec-details__uncorrected-codeword-count\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/interfaces/interface\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "100.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-ethernet-optics-fecerrors.json",
              "label": "Detailed"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-drivers-media-eth-oper:2015-01-07",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_layer1_optics_power",
        "kpi_name": "Layer 1 optical power",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port optical power",
        "details": "Monitors per-port optical power; generates alert when power levels exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/high-rx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/high-rx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/high-tx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/high-tx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/low-rx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/low-rx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/low-tx-power/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-alarm-info/low-tx-power/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/lane-index"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/receive-power"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-lanes/optics-lane/transmit-power"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "number"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-ethernet-optics-power.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-optics-power-Raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-controller-optics-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_layer1_optics_temperature",
        "kpi_name": "Layer 1 optical temperature",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port optical temperature",
        "details": "Monitors per-port optical temperature; generates alert when temperature exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-temperature/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-temperature/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-temperature/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-temperature/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/optics-pid"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/optics-serial-no"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/vendor-name"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/temp-high-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/temp-high-warning-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/temp-low-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/temp-low-warning-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/temperature"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-ethernet-optics-temperature.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-optics-temperature-Raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-controller-optics-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_layer1_optics_voltage",
        "kpi_name": "Layer 1 optical voltage",
        "category": "Layer1-Optics",
        "summary": "Monitors per-port optical voltage",
        "details": "Monitors per-port optical voltage; generates alert when voltages exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-voltage/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/high-voltage/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-voltage/counter"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/optics-alarm-info/low-voltage/is-detected"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/optics-pid"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/optics-serial-no"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/transceiver-info/vendor-name"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/volt-high-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/volt-high-warning-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/volt-low-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/volt-low-warning-threshold"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-controller-optics-oper:optics-oper/optics-ports/optics-port/optics-info/voltage"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-ethernet-optics-voltage.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-layer1-optics-voltage-Raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-controller-optics-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194742
      },
      {
        "kpi_id": "pulse_ethernet_port_error_counters",
        "kpi_name": "Ethernet port error counters",
        "category": "Layer1-Traffic",
        "summary": "Monitors port transmit and receive error counters",
        "details": "Monitors port transmit and receive error counters",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-good-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-good-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/number-of-buffer-overrun-packets-dropped"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/number-of-aborted-packets-dropped"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/numberof-invalid-vlan-id-packets-dropped"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/invalid-dest-mac-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/invalid-encap-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/number-of-miscellaneous-packets-dropped"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-giant-packets-greaterthan-mru"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-ether-stats-undersize-pkts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-jabbers-packets-greaterthan-mru"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-ether-stats-fragments"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-packets-with-crc-align-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/ether-stats-collisions"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/symbol-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/dropped-miscellaneous-error-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/rfc2819-ether-stats-oversized-pkts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/rfc2819-ether-stats-jabbers"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/rfc2819-ether-stats-crc-align-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/rfc3635dot3-stats-alignment-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-bytes-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-good-bytes-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-frames-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-good-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/buffer-underrun-packet-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/aborted-packet-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/uncounted-dropped-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/miscellaneous-output-errors"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_ethernet_port_error_counters_mru-template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_error_counters_mru\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_error_counters_mru\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \" CRITICAL : {interface-name}  MRU/fragments/collision/symbol error rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \" INFO : {interface-name}  MRU/fragments/collision/symbol error rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"dropped-giant-packets-greaterthan-mru + dropped-ether-stats-undersize-pkts + dropped-jabbers-packets-greaterthan-mru + dropped-ether-stats-fragments + dropped-packets-with-crc-align-errors + ether-stats-collisions + symbol-errors + dropped-miscellaneous-error-packets\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-giant-packets-greaterthan-mru\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-ether-stats-undersize-pkts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-jabbers-packets-greaterthan-mru\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-ether-stats-fragments\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-packets-with-crc-align-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ether-stats-collisions\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"symbol-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"dropped-miscellaneous-error-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ethernet_port_error_counters_dropped_packets-template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_error_counters_dropped_packets\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_error_counters_dropped_packets\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Ethernet drop Rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  Ethernet drop Rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"number-of-buffer-overrun-packets-dropped + number-of-aborted-packets-dropped + numberof-invalid-vlan-id-packets-dropped + invalid-dest-mac-drop-packets + invalid-encap-drop-packets + number-of-miscellaneous-packets-dropped\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"number-of-buffer-overrun-packets-dropped\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"number-of-aborted-packets-dropped\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"numberof-invalid-vlan-id-packets-dropped\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"invalid-dest-mac-drop-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"invalid-encap-drop-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"number-of-miscellaneous-packets-dropped\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ethernet_port_error_counters_rfc-template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_error_counters_rfc\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_error_counters_rfc\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  RFC2819 drop rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  RFC2819 drop rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"rfc2819-ether-stats-oversized-pkts + rfc2819-ether-stats-jabbers + rfc2819-ether-stats-crc-align-errors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"rfc2819-ether-stats-oversized-pkts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"rfc2819-ether-stats-jabbers\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"rfc2819-ether-stats-crc-align-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ethernet_port_error_counters_misc-template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_error_counters_misc\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_error_counters_misc\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  underrun/unaccounted/aborted rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  underrun/unaccounted/aborted rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"miscellaneous-output-errors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"miscellaneous-output-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ethernet_port_error_counters_underruns-template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_error_counters_underruns\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_error_counters_underruns\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  buffer underrun drop rate: {kpi_rate_change} Frames/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  buffer underrun drop rate: {kpi_rate_change} Frames/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"buffer-underrun-packet-drops + aborted-packet-drops + uncounted-dropped-frames\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"buffer-underrun-packet-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"aborted-packet-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"uncounted-dropped-frames\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-port-error-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-port-error-counters-detail.json",
              "label": "Detailed"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-drivers-media-eth-oper:2015-01-07",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194738,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_ethernet_port_packet_size_distribution",
        "kpi_name": "Ethernet port packet size distribution",
        "category": "Layer1-Traffic",
        "summary": "Monitors port transmit and receive packet size distributions",
        "details": "Monitors port transmit and receive packet size distributions",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total64-octet-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from65-to127"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from128-to255"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from256-to511"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from512-to1023"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from1024-to1518"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-octet-frames-from1519-to-max"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total64-octet-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from65-to127"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from128-to255"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from256-to511"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from512-to1023"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from1024-to1518"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-octet-frames-from1518-to-max"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-ethernet-packet-size-distribution-line.json",
              "label": "LineGraph"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-ethernet-packet-size-distribution-pie.json",
              "label": "PieChart"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-drivers-media-eth-oper:2015-01-07",
        "created_by": "admin",
        "creation_date": 1728104073,
        "last_updated_by": "admin",
        "last_updation_date": 1733194739,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_ethernet_port_stats",
        "kpi_name": "Ethernet port packet statistics",
        "category": "Layer1-Traffic",
        "summary": "Monitors port transmit and receive packet statistics",
        "details": "Monitors port transmit and receive packet statistics",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-good-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-total-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received8021q-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-pause-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-unknown-opcodes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-good-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-unicast-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-multicast-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/received-broadcast-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-bytes-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-good-bytes-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/total-frames-transmitted"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted8021q-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-total-pause-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-good-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-unicast-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-multicast-frames"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic/transmitted-broadcast-frames"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_ethernet_port_stats_rxrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_stats_rxrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_stats_rxrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Rx Rate: {kpi_rate_change} bytes/sec unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {interface-name}  Rx Rate: {kpi_rate_change} bytes/sec unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  Rx Rate: {kpi_rate_change} bytes/sec now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(received-good-bytes)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"received-good-bytes\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_ethernet_port_stats_txrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_ethernet_port_stats_txrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_ethernet_port_stats_txrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Tx Rate: {kpi_rate_change} bytes/sec unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {interface-name}  Tx Rate: {kpi_rate_change} bytes/sec unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  Tx Rate: {kpi_rate_change} bytes/sec now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(total-good-bytes-transmitted)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"total-good-bytes-transmitted\",\n         \"eval_expression\" : \"Cisco-IOS-XR-drivers-media-eth-oper:ethernet-interface/statistics/statistic\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-ethernet-packet-stats-pie.json",
              "label": "PieChart"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-ethernet-packet-stats-rates.json",
              "label": "LineGraph"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-drivers-media-eth-oper:2015-01-07",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194739,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_flap_detector",
        "kpi_name": "Interface flap detection",
        "category": "Layer2-Interface",
        "summary": "Monitors interface flaps",
        "details": "Monitors interface flaps and alerts when flap count reaches set threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/interface-type"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/line-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/encapsulation"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/encapsulation-type-string"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/mtu"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/is-l2-transport-enabled"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface/state-transition-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_flap_detector_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_flap_detector\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_flap_detector\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  flap rate: {kpi_rate_change} flaps/min \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  flap rate: {kpi_rate_change}  threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda, 30)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"state-transition-count\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"state-transition-count\",\n         \"eval_expression\" : \"Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-xr/interface\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-flap-count-raw.json",
              "label": "Raw"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-flap-count-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-pfi-im-cmd-oper:2016-12-18",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_state_info",
        "kpi_name": "Line state",
        "category": "Layer2-Interface",
        "summary": "Monitors interface line states; generates an alert when link states change",
        "details": "Monitors interface line states; generates an alert when links states change",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/type"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/actual-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/line-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/actual-line-state"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/encapsulation"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/encapsulation-type-string"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/mtu"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/l2-transport"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-pfi-im-cmd-oper:interfaces/interface-briefs/interface-brief/bandwidth"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-state-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-pfi-im-cmd-oper:2016-12-18",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_bandwidth_utilization",
        "kpi_name": "Interface bandwidth monitor",
        "category": "Layer2-Traffic",
        "summary": "Monitors bandwidth utilization across all interfaces on a router",
        "details": "Monitors bandwidth utilization across all interfaces on a router; generates an alert when bandwidth exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-packet-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-load"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-packet-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-load"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/bandwidth"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_bandwidth_utilization_rx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_bandwidth_utilization_rx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"LEVEL1_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"75.0\",\n      \"display_name\" : \"Level 1 Alert Threshold\",\n      \"description\": \"Generates a level 1 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL1_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"WARNING\",\n      \"display_name\" : \"Level 1 Alert Severity\",\n      \"description\": \"Severity label of a level 1 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"LEVEL2_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"90.0\",\n      \"display_name\" : \"Level 2 Alert Threshold\",\n      \"description\": \"Generates a level 2 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL2_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"CRITICAL\",\n      \"display_name\" : \"Level 2 Alert Severity\",\n      \"description\": \"Severity label of a level 2 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"bandwidth\\\" \u003e 0.0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_bandwidth_utilization_rx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL2_SEVERITY} : {interface-name}  Rx bandwidth utilization: {kpi_stream}% above threshold: {LEVEL2_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL1_THRESHOLD \u0026\u0026 kpi_stream \u003c LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL1_SEVERITY}: {interface-name}  Rx bandwidth utilization: {kpi_stream}% above threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003c LEVEL1_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO: {interface-name} Rx Bandwidth Utilization: {kpi_stream}%  below threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"(input-data-rate/bandwidth)*100\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-data-rate\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"bandwidth\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "LEVEL1_THRESHOLD",
                    "type": "float",
                    "value": "75.0",
                    "description": "Generates a level 1 alert when this threshold is exceeded",
                    "display_name": "Level 1 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL1_SEVERITY",
                    "type": "string",
                    "value": "WARNING",
                    "description": "Severity label of a level 1 alert",
                    "display_name": "Level 1 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  },
                  {
                    "name": "LEVEL2_THRESHOLD",
                    "type": "float",
                    "value": "90.0",
                    "description": "Generates a level 2 alert when this threshold is exceeded",
                    "display_name": "Level 2 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL2_SEVERITY",
                    "type": "string",
                    "value": "CRITICAL",
                    "description": "Severity label of a level 2 alert",
                    "display_name": "Level 2 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_interface_bandwidth_utilization_tx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_bandwidth_utilization_tx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"LEVEL1_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"75.0\",\n      \"display_name\" : \"Level 1 Alert Threshold\",\n      \"description\": \"Generates a level 1 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL1_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"WARNING\",\n      \"display_name\" : \"Level 1 Alert Severity\",\n      \"description\": \"Severity label of a level 1 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"LEVEL2_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"90.0\",\n      \"display_name\" : \"Level 2 Alert Threshold\",\n      \"description\": \"Generates a level 2 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL2_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"CRITICAL\",\n      \"display_name\" : \"Level 2 Alert Severity\",\n      \"description\": \"Severity label of a level 2 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"bandwidth\\\" \u003e 0.0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_bandwidth_utilization_tx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL2_SEVERITY} : {interface-name}  Tx bandwidth utilization: {kpi_stream}% above threshold: {LEVEL2_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL1_THRESHOLD \u0026\u0026 kpi_stream \u003c LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL1_SEVERITY}: {interface-name}  Tx bandwidth utilization: {kpi_stream}% above threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003c LEVEL1_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO: {interface-name} Tx Bandwidth Utilization: {kpi_stream}%  below threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"(output-data-rate/bandwidth)*100\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-data-rate\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"bandwidth\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "LEVEL1_THRESHOLD",
                    "type": "float",
                    "value": "75.0",
                    "description": "Generates a level 1 alert when this threshold is exceeded",
                    "display_name": "Level 1 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL1_SEVERITY",
                    "type": "string",
                    "value": "WARNING",
                    "description": "Severity label of a level 1 alert",
                    "display_name": "Level 1 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  },
                  {
                    "name": "LEVEL2_THRESHOLD",
                    "type": "float",
                    "value": "90.0",
                    "description": "Generates a level 2 alert when this threshold is exceeded",
                    "display_name": "Level 2 Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "LEVEL2_SEVERITY",
                    "type": "string",
                    "value": "CRITICAL",
                    "description": "Severity label of a level 2 alert",
                    "display_name": "Level 2 Alert Severity",
                    "possible_values": [
                      "CRITICAL",
                      "WARNING",
                      "MAJOR",
                      "MINOR",
                      "INFO"
                    ]
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-bandwidth-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-infra-statsd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194739,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_error_counters",
        "kpi_name": "Interface packet error counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface transmit and receive error counters",
        "details": "Monitors interface transmit and receive error counters; generates an alert when unusual error rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-queue-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-queue-drops"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/runt-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/giant-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/throttled-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/parity-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/unknown-protocol-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/crc-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-overruns"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/framing-errors-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-ignored-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/input-aborts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-errors"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-underruns"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-buffer-failures"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/output-buffers-swapped-out"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/carrier-transitions"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_error_counters_rx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_error_counters\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_error_counters\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"crc-errors + framing-errors-received + giant-packets-received + input-aborts + input-drops + input-errors + input-ignored-packets + input-queue-drops + parity-packets-received + runt-packets-received + unknown-protocol-packets-received + input-overruns\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"crc-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"framing-errors-received\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"giant-packets-received\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-aborts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-ignored-packets\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-queue-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"parity-packets-received\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"runt-packets-received\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"unknown-protocol-packets-received\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-overruns\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_interface_error_counters_tx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_error_counters\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_error_counters\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {interface-name}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"output-buffer-failures + output-buffers-swapped-out + output-drops + output-errors + output-queue-drops + output-underruns\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-buffer-failures\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-buffers-swapped-out\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-errors\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-queue-drops\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-underruns\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-detail.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-infra-statsd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194740,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_error_counters_oc",
        "kpi_name": "Interface packet error counters(Openconfig)",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface transmit and receive error counters using openconfig-interfaces model",
        "details": "Monitors interface transmit and receive error counters; generates an alert when unusual error rates occur. This KPI uses openconfig-interfaces YANG model",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/in-discards"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/in-errors"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/in-unknown-protos"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/in-fcs-errors"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/out-discards"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/out-errors"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_error_counters_oc_rx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_error_counters_oc_rx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_error_counters_oc_rx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {name}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {name}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"counters__in-discards + counters__in-errors + counters__in-unknown-protos + counters__in-fcs-errors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__in-discards\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__in-errors\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__in-unknown-protos\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__in-fcs-errors\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_interface_error_counters_oc_tx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_error_counters_oc_tx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_error_counters_oc_tx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {name}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {name}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD}.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"counters__out-discards + counters__out-errors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__out-discards\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__out-errors\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-oc-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-oc-detail.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-error-counters-oc-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI",
        "module_and_revision": "openconfig-interfaces:2016-12-22",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194740,
        "filter_keys": [
          "name"
        ]
      },
      {
        "kpi_id": "pulse_interface_packet_counters",
        "kpi_name": "Interface packet counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface transmit and receive counters",
        "details": "Monitors interface transmit and receive counters; generates an alert when unusual traffic rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/bytes-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/multicast-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/broadcast-packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/packets-sent"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/bytes-sent"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/multicast-packets-sent"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/generic-counters/broadcast-packets-sent"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-packet-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-packet-counters-detail.json",
              "label": "Detailed"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-infra-statsd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_rate_counters",
        "kpi_name": "Interface rate counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface statistics as rate counters",
        "details": "Monitors interface statistics as rate counters; generates an alert when unusual traffic rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-packet-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-packet-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/output-load"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/input-load"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate/bandwidth"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_rate_counters_rxrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_rate_counters_rxrate\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_rate_counters_rxrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Rx Rate : {kpi_stream} pkts/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {interface-name}  Rx Rate : {kpi_stream} pkts/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name} Rx Rate: {kpi_stream} pkts/sec has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(input-data-rate)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"input-data-rate\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_interface_rate_counters_txrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_rate_counters_txrate\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_rate_counters_txrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {interface-name}  Tx Rate : {kpi_stream} pkts/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {interface-name}  Tx Rate : {kpi_stream} pkts/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {interface-name} Tx Rate: {kpi_stream} pkts/sec has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(output-data-rate)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"output-data-rate\",\n         \"eval_expression\" : \"Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/data-rate\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-rate-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-rate-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-infra-statsd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_rate_counters_oc",
        "kpi_name": "Interface rate counters(Openconfig)",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface statistics as rate counters using openconfig-interfaces model",
        "details": "Monitors interface statistics as rate counters; generates an alert when unusual traffic rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/in-octets"
                  },
                  {
                    "path_id": "openconfig-interfaces:interfaces/interface/state/counters/out-octets"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_interface_rate_counters_oc_rxrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_rate_counters_oc_rxrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_rate_counters_oc_rxrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {name}  Rx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {name}  Rx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {name}  Rx Rate: {kpi_rate_change} bits/sec is now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(counters__in-octets)*8.0\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__in-octets\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_interface_rate_counters_oc_txrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_interface_rate_counters_oc_rxrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_interface_rate_counters_oc_rxrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {name} Tx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {name} Tx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {name}  Tx Rate: {kpi_rate_change} bits/sec is now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(counters__out-octets)*8.0\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"counters__out-octets\",\n         \"eval_expression\" : \"openconfig-interfaces:interfaces/interface/state\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-rate-counters-oc-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-rate-counters-oc-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI",
        "module_and_revision": "openconfig-interfaces:2016-12-22",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "name"
        ]
      },
      {
        "kpi_id": "pulse_snmp_interface_error_counters",
        "kpi_name": "SNMP interface packet error counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface transmit and receive error counters",
        "details": "Monitors interface transmit and receive error counters; generates an alert when unusual error rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifName"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifDescr"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifAlias"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifType"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifMtu"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifSpeed"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifAdminStatus"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifOperStatus"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInOctets"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutOctets"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifInUnknownProtos"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifInErrors"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifInDiscards"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifOutDiscards"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifOutErrors"
                  }
                ]
              }
            }
          ],
          "transformers": [
            {
              "operation": "addFieldToTag",
              "fields": [
                "ifDescr"
              ],
              "arguments": [
                ""
              ]
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "ifIndex"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_snmp_interface_error_counters_rx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_snmp_interface_error_counters_rx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"100.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_snmp_interface_error_counters_rx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {ifDescr}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD} pkts/sec.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {ifDescr}  Rx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD} pkts/sec.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"ifInDiscards + ifInErrors + ifInUnknownProtos\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifInDiscards\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifInErrors\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifInUnknownProtos\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "100.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_snmp_interface_error_counters_tx_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_snmp_interface_error_counters_tx\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_rate_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1000.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Value that rate must be equal or greater than to enter alert state\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_snmp_interface_error_counters_tx\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_rate_change \u003e= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {ifDescr}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003e threshold: {ALERT_THRESHOLD} pkts/sec.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_rate_change \u003c ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : {ifDescr}  Tx error counters rate: {kpi_rate_change} pkts/sec \u003c threshold: {ALERT_THRESHOLD} pkts/sec.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(stream_eval_lambda)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"stream_eval_lambda\",\n        \"eval_expression\": \"ifOutDiscards + ifOutErrors\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifOutDiscards\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifOutErrors\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       }\n     ]\n  }\n}",
              "template": "Two Level Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1000.0",
                    "description": "Value that rate must be equal or greater than to enter alert state",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "SNMP-interface-error-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "SNMP-interface-error-counters-detail.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "SNMP-interface-error-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "IF-MIB:",
        "created_by": "admin",
        "creation_date": 1728104077,
        "last_updated_by": "admin",
        "last_updation_date": 1733194746,
        "filter_keys": [
          "ifDescr",
          "ifIndex"
        ]
      },
      {
        "kpi_id": "pulse_snmp_interface_packet_counters",
        "kpi_name": "SNMP interface packet counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface transmit and receive counters",
        "details": "Monitors interface transmit and receive counters; generates an alert when unusual traffic rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifName"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifDescr"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifAlias"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifType"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifMtu"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifSpeed"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifAdminStatus"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifOperStatus"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInOctets"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutOctets"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInUcastPkts"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInMulticastPkts"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInBroadcastPkts"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutUcastPkts"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutMulticastPkts"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutBroadcastPkts"
                  }
                ]
              }
            }
          ],
          "transformers": [
            {
              "operation": "addFieldToTag",
              "fields": [
                "ifDescr"
              ],
              "arguments": [
                ""
              ]
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "ifIndex"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "SNMP-interface-packet-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "SNMP-interface-packet-counters-detail.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "SNMP-interface-packet-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "IF-MIB:",
        "created_by": "admin",
        "creation_date": 1728104077,
        "last_updated_by": "admin",
        "last_updation_date": 1733194746,
        "filter_keys": [
          "ifDescr",
          "ifIndex"
        ]
      },
      {
        "kpi_id": "pulse_snmp_interface_rate_counters",
        "kpi_name": "SNMP interface rate counters",
        "category": "Layer2-Traffic",
        "summary": "Monitors interface statistics as rate counters",
        "details": "Monitors interface statistics as rate counters; generates an alert when unusual traffic rates occur",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 60,
                "max": 900,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifName"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifDescr"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCInOctets"
                  },
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifHCOutOctets"
                  }
                ]
              }
            }
          ],
          "transformers": [
            {
              "operation": "addFieldToTag",
              "fields": [
                "ifDescr"
              ],
              "arguments": [
                ""
              ]
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "ifIndex"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_snmp_interface_rate_counters_rxrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_snmp_interface_rate_counters_rxrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_snmp_interface_rate_counters_rxrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {ifDescr}  Rx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {ifDescr}  Rx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {ifDescr}  Rx Rate: {kpi_rate_change} bits/sec is now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(ifHCInOctets)*8\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifHCInOctets\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_snmp_interface_rate_counters_txrate_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_snmp_interface_rate_counters_txrate\",\n  \"description\" : \"This Tick Script detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values. Threshold for number of standard deviations that cause alerts can be set in the vars JSON as 'alert_threshold'.\",\n  \"master_template\": \"stream-derivative-stddev-alert-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_snmp_interface_rate_counters_txrate\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {ifDescr}  Tx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {ifDescr}  Tx Rate: {kpi_rate_change} bits/sec is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {ifDescr}  Tx Rate: {kpi_rate_change} bits/sec is now normal, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_rate_change)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_rate_change\",\n        \"eval_expression\": \"time_based_rate_change(kpi_stream)\"\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(ifHCOutOctets)*8\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"ifHCOutOctets\",\n         \"eval_expression\" : \"IF-MIB:IF-MIB/ifTable/ifEntry\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "SNMP-interface-rate-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "SNMP-interface-rate-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "IF-MIB:",
        "created_by": "admin",
        "creation_date": 1728104077,
        "last_updated_by": "admin",
        "last_updation_date": 1733194746,
        "filter_keys": [
          "ifDescr",
          "ifIndex"
        ]
      },
      {
        "kpi_id": "pulse_routing_ipv6_rib_bgp",
        "kpi_name": "IPv6 RIB BGP route count",
        "category": "Layer3-Routing",
        "summary": "Monitors IPv6 RIB for route count and memory used by BGP",
        "details": "Monitors IPv6 RIB for route count and memory used by BGP; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ipv6_rib_bgp_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_bgp_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_bgp_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : BGP IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: BGP IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: BGP IPv6 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ipv6_rib_bgp_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_bgp_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_bgp_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : BGP IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: BGP IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: BGP IPv6 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-bgp-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-bgp-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194744
      },
      {
        "kpi_id": "pulse_routing_ipv6_rib_isis",
        "kpi_name": "IPv6 RIB IS-IS route count",
        "category": "Layer3-Routing",
        "summary": "Monitors IPv6 RIB for route count and memory used by IS-IS",
        "details": "Monitors IPv6 RIB for route count and memory used by IS-IS; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ipv6_rib_isis_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_isis_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_isis_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : ISIS IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: ISIS IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: ISIS IPv6 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ipv6_rib_isis_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_isis_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_isis_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : ISIS IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: ISIS IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: ISIS IPv6 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-isis-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-isis-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194745
      },
      {
        "kpi_id": "pulse_routing_ipv6_rib_ospf",
        "kpi_name": "IPv6 RIB OSPF route count",
        "category": "Layer3-Routing",
        "summary": "Monitors IPv6 RIB for route count and memory used by OSPF",
        "details": "Monitors IPv6 RIB for route count and memory used by OSPF; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ipv6_rib_ospf_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_ospf_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_ospf_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : OOSPF IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: OOSPF IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: OOSPF IPv6 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ipv6_rib_ospf_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ipv6_rib_ospf_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ipv6_rib_ospf_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : OSPF IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: OSPF IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: OSPF IPv6 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-ospf-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-ospf-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194745
      },
      {
        "kpi_id": "pulse_routing_rib_bgp",
        "kpi_name": "RIB BGP route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by BGP",
        "details": "Monitors RIB for route count and memory used by BGP; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_bgp_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_bgp_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_bgp_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : BGP IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: BGP IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: BGP IPv4 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_bgp_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_bgp_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_bgp_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : BGP IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: BGP IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: BGP IPv4 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/bgp/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-bgp-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-bgp-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_routing_rib_connected",
        "kpi_name": "RIB CONNECTED route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by connected",
        "details": "Monitors RIB for route count and memory used by connected; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_connected_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_connected_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_connected_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : CONNECTED IPv4 RIB Route Count :{kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: CONNECTED IPv4 RIB Route Count :{kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: CONNECTED IPv4 RIB Route Count : {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_connected_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_connected_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_connected_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL: CONNECTED IPv4 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: CONNECTED IPv4 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : CONNECTED IPv4 RIB Route Memory: {kpi_stream} bytes has returned to Usual range, Threshold: {ALERT_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-connected-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-connected-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_routing_rib_isis",
        "kpi_name": "RIB IS-IS route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by IS-IS",
        "details": "Monitors RIB for route count and memory used by IS-IS; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_isis_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_isis_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_isis_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : ISIS IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: ISIS IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: ISIS IPv4 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_isis_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_isis_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_isis_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : ISIS IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: ISIS IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: ISIS IPv4 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/isis/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-isis-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-isis-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_routing_rib_local",
        "kpi_name": "RIB local route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by local",
        "details": "Monitors RIB for route count and memory used by local; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_local_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_local_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_local_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : LOCAL IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: LOCAL IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: LOCAL IPv4 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_local_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_local_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_local_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : LOCAL IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: LOCAL IPv4 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: LOCAL IPv4 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-local-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-local-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194744
      },
      {
        "kpi_id": "pulse_routing_rib_ospf",
        "kpi_name": "RIB OSPF route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by OSPF",
        "details": "Monitors RIB for route count and memory used by OSPF; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "as"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_ospf_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_ospf_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_ospf_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : OSPF IPv4 RIB Route Memory: {kpi_stream}  bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: OSPF IPv4 RIB Route Memory: {kpi_stream}  bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: OSPF IPv4 RIB Route Memory:  {kpi_stream}  bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_ospf_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_ospf_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_ospf_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : OSPF IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: OSPF IPv4 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: OSPF IPv4 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/ospf/as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-ospf-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-ospf-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194744
      },
      {
        "kpi_id": "pulse_routing_rib_static",
        "kpi_name": "RIB static route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIB for route count and memory used by static",
        "details": "Monitors RIB for route count and memory used by static; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_rib_static_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_static_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_static_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : STATIC IPv4 RIB Route Count :{kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: STATIC IPv4 RIB Route Count :{kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: STATIC IPv4 RIB Route Count : {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_rib_static_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_rib_static_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.5\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_rib_static_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL: STATIC IPv4 RIB Route Memory : {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: STATIC IPv4 RIB Route Memory : {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: STATIC IPv4 RIB Route Memory : {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv4-oper:rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.5",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-static-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-rib-static-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv4-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194744
      },
      {
        "kpi_id": "pulse_routing_ribv6_connected",
        "kpi_name": "RIBv6 connected route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIBv6 for route count and memory used by connected",
        "details": "Monitors RIBv6 for route count and memory used by connected; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ribv6_connected_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_connected_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_connected_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL: CONNECTED IPv6 RIB Route Count :{kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: CONNECTED IPv6 RIB Route Count :{kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: CONNECTED IPv6 RIB Route Count : {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ribv6_connected_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_connected_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_connected_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL: CONNECTED IPv6 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: CONNECTED IPv6 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: CONNECTED IPv6 RIB Route Memory : {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/connected/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-connected-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-connected-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194744
      },
      {
        "kpi_id": "pulse_routing_ribv6_local",
        "kpi_name": "RIBv6 local route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIBv6 for route count and memory used by local",
        "details": "Monitors RIBv6 for route count and memory used by local; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ribv6_local_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_local_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_local_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : LOCAL IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: LOCAL IPv6 RIB Route Count: {kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: LOCAL IPv6 RIB Route Count:  {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ribv6_local_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_local_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_local_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : LOCAL IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: LOCAL IPv6 RIB Route Memory: {kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: LOCAL IPv6 RIB Route Memory:  {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/local/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-local-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-local-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104076,
        "last_updated_by": "admin",
        "last_updation_date": 1733194745
      },
      {
        "kpi_id": "pulse_routing_ribv6_static",
        "kpi_name": "RIBv6 static route count",
        "category": "Layer3-Routing",
        "summary": "Monitors RIBv6 for route count and memory used by static",
        "details": "Monitors RIBv6 for route count and memory used by static; generates an alert when an anomaly is detected (such as significant increase or decrease in route counts)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/routes-counts"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/active-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/deleted-routes-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/protocol-route-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information/paths-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "vrf-name"
            },
            {
              "alert_tag": "af-name"
            },
            {
              "alert_tag": "saf-name"
            },
            {
              "alert_tag": "route-table-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_routing_ribv6_static_routecount_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_static_routecount\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"3.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_static_routecount\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : STATIC IPv6 RIB Route Count :{kpi_stream} is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: STATIC IPv6 RIB Route Count :{kpi_stream} is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: STATIC IPv6 RIB Route Count : {kpi_stream} has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(routes-counts)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"routes-counts\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "3.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            },
            {
              "script_id": "pulse_routing_ribv6_static_routememory_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_routing_ribv6_static_routememory\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.5\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_routing_ribv6_static_routememory\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : STATIC IPv6 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING: STATIC IPv6 RIB Route Memory :{kpi_stream} bytes is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO: STATIC IPv6 RIB Route Memory : {kpi_stream} bytes has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(protocol-route-memory)\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"protocol-route-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-ip-rib-ipv6-oper:ipv6-rib/vrfs/vrf/afs/af/safs/saf/ip-rib-route-table-names/ip-rib-route-table-name/protocol/static/non-as/information\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.5",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-static-routecount-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-ribv6-static-routecount-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-ip-rib-ipv6-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104077,
        "last_updated_by": "admin",
        "last_updation_date": 1733194745
      },
      {
        "kpi_id": "pulse_intf_stat_protocol",
        "kpi_name": "Interface counters by protocol",
        "category": "Layer3-Traffic",
        "summary": "Monitors interface statistics by protocol",
        "details": "Monitors interface statistics (such as incoming and outgoing packets or byte counters) organized by protocol",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/bytes-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/bytes-sent"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/packets-received"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/packets-sent"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/protocol"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/input-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/input-packet-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/output-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-infra-statsd-oper:infra-statistics/interfaces/interface/latest/protocols/protocol/output-packet-rate"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "protocol-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-protocol-counters-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-protocol-counters-detail.json",
              "label": "Detailed"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-protocol-counters-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-infra-statsd-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_memory_utilization",
        "kpi_name": "Memory utilization",
        "category": "Memory",
        "summary": "Monitors memory usage across route processor and line cards on routers",
        "details": "Monitors memory usage across route processor and line cards on routers; generates an alert when memory usage is unusual",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 120,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary/ram-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary/free-physical-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary/system-ram-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary/free-application-memory"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_memory_utilization_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_memory_utilization\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_memory_utilization\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {node-name}  Memory Utilization : {kpi_stream} % is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {node-name}  Memory Utilization : {kpi_stream} % is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {node-name} Memory Utilization : {kpi_stream} % has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"((system-ram-memory - free-application-memory) * 100.0) / system-ram-memory\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"free-application-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"system-ram-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-nto-misc-oper:memory-summary/nodes/node/summary\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-memory-utilization-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-memory-utilization-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-nto-misc-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_memory_utilization_cxr",
        "kpi_name": "Memory utilization (cXR)",
        "category": "Memory",
        "summary": "Monitors memory usage across route processor and line cards on routers on classic XR devices",
        "details": "Monitors memory usage across route processor and line cards on routers on classic XR devices; generates an alert when memory usage is unusual",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 120,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary/ram-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary/free-physical-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary/system-ram-memory"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary/free-application-memory"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_memory_utilization_cxr_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_memory_utilization_cxr\",\n  \"description\" : \"This alert template detects spikes or drops in measured values by alerting when values deviate some number of standard deviations away from normal values\",\n  \"master_template\": \"stream-stddev-activate-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"CRIT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Critical Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"WARN_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"2.0\",\n      \"display_name\" : \"Warning Alert Threshold\",\n      \"description\": \"Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold\"\n    },\n    {\n      \"name\": \"ACTIVATION_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"-1.0\",\n      \"display_name\" : \"Activation Threshold\",\n      \"description\": \"Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_memory_utilization_cxr\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : {node-name}  Memory Utilization : {kpi_stream} % is unusual, threshold: {CRIT_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_sigma \u003e= WARN_THRESHOLD \u0026\u0026 kpi_sigma \u003c CRIT_THRESHOLD \u0026\u0026 ((kpi_stream \u003e= ACTIVATION_THRESHOLD \u0026\u0026 ACTIVATION_THRESHOLD \u003e= 0) || (ACTIVATION_THRESHOLD \u003c 0))\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"WARNING : {node-name}  Memory Utilization : {kpi_stream} % is unusual, threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std. dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_sigma \u003c WARN_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\": \"INFO\",\n          \"format_string\": \"INFO : {node-name} Memory Utilization : {kpi_stream} % has returned to Usual range, Threshold: {WARN_THRESHOLD} SD. It is {kpi_sigma} std.dev away from Average.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_sigma\",\n        \"eval_expression\": \"Sigma(kpi_stream)\"\n     },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"((system-ram-memory - free-application-memory) * 100.0) / system-ram-memory\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"free-application-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary\"\n       },\n       {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"system-ram-memory\",\n         \"eval_expression\" : \"Cisco-IOS-XR-nto-misc-shmem-oper:memory-summary/nodes/node/summary\"\n       }\n     ]\n  }\n}",
              "template": "Statistical (Std Dev) Thresholding ",
              "parameters": {
                "parameter": [
                  {
                    "name": "CRIT_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Critical Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "WARN_THRESHOLD",
                    "type": "float",
                    "value": "2.0",
                    "description": "Generates an alert when the data sample does not fall within the number of standard deviations from the mean defined by this threshold",
                    "display_name": "Warning Alert Threshold",
                    "possible_values": null
                  },
                  {
                    "name": "ACTIVATION_THRESHOLD",
                    "type": "float",
                    "value": "-1.0",
                    "description": "Values must exceed the activation threshold to generate a standard deviation alert, if -1, ignored",
                    "display_name": "Activation Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-memory-utilization-cxr-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-memory-utilization-cxr-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-nto-misc-shmem-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743
      },
      {
        "kpi_id": "pulse_routing_isis_neighbor_summary",
        "kpi_name": "ISIS neighbor summary",
        "category": "Protocol-ISIS",
        "summary": "Monitors IS-IS neighbor summaries for changes in neighbor status",
        "details": "Monitors IS-IS neighbor summaries for changes in neighbor status; generates an alert when an anomaly is detected (such as neighbors down or flapping)",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 300,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level12-neigbors/neighbor-up-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level12-neigbors/neighbor-init-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level12-neigbors/neighbor-down-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level1-neighbors/neighbor-up-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level1-neighbors/neighbor-init-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level1-neighbors/neighbor-down-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level2-neighbors/neighbor-init-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level2-neighbors/neighbor-down-count"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-clns-isis-oper:isis/instances/instance/neighbor-summaries/neighbor-summary/level2-neighbors/neighbor-up-count"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "instance-name"
            },
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-routing-isis-neighbor-summary.json",
              "label": "Summary"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-routing-isis-neighbor-summary-raw.json",
              "label": "Raw"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-clns-isis-oper:2015-11-09",
        "created_by": "admin",
        "creation_date": 1728104075,
        "last_updated_by": "admin",
        "last_updation_date": 1733194743,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_qos_egress",
        "kpi_name": "Interface QoS (egress)",
        "category": "QoS",
        "summary": "Monitors interface QoS on the egress direction for queue statistics, queue depth",
        "details": "Monitors interface QoS on the egress direction for queue statistics, queue depth",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/transmit-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/transmit-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/match-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-transmit-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/pre-policy-matched-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/pre-policy-matched-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/parent-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/parent-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/profile-title"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-transmit-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-transmit-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/random-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/random-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/max-threshold-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/max-threshold-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-ecn-marked-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/output/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-ecn-marked-bytes"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "service-policy-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-qos-egres-raw.json",
              "label": "Raw"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-qos-egres-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-qos-ma-oper:2017-09-13",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "pulse_interface_qos_ingress",
        "kpi_name": "Interface QoS (ingress)",
        "category": "QoS",
        "summary": "Monitors interface QoS on the ingress direction for queue statistics, queue depth",
        "details": "Monitors interface QoS on the ingress direction for queue statistics, queue depth",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/transmit-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/transmit-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-drop-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/match-data-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/total-transmit-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/pre-policy-matched-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/general-stats/pre-policy-matched-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/parent-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/parent-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/conform-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/exceed-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/police-stats-array/violate-rate"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/profile-title"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-transmit-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-transmit-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/random-drop-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/random-drop-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/max-threshold-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/max-threshold-bytes"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-ecn-marked-packets"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-qos-ma-oper:qos/nodes/node/policy-map/interface-table/interface/input/service-policy-names/service-policy-instance/statistics/class-stats/wred-stats-array/red-ecn-marked-bytes"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "interface-name"
            },
            {
              "alert_tag": "service-policy-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {},
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-interface-qos-ingress-raw.json",
              "label": "Raw"
            },
            {
              "type": "jsonfile",
              "value": "Pulse-interface-qos-ingress-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "GNMI,YANG_MDT",
        "module_and_revision": "Cisco-IOS-XR-qos-ma-oper:2017-09-13",
        "created_by": "admin",
        "creation_date": 1728104074,
        "last_updated_by": "admin",
        "last_updation_date": 1733194741,
        "filter_keys": [
          "interface-name"
        ]
      },
      {
        "kpi_id": "ifspeed_934b8568_6f0e959fea06",
        "kpi_name": "ifspeed",
        "state": "complete",
        "category": "User Defined",
        "summary": "ifspeed",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 300,
                "min": 300,
                "max": 1800,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "IF-MIB:IF-MIB/ifTable/ifEntry/ifSpeed"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "ifIndex"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "ifspeed_934b8568_6f0e959fea06_template.json",
              "script": "",
              "template": "No Operation (NOOP)"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "ifspeed_934b8568_6f0e959fea06_dashboard.json",
              "label": "Default"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "IF-MIB:1993-11-08",
        "created_by": "admin",
        "creation_date": 1732080282,
        "last_updated_by": "admin",
        "last_updation_date": 1733194746,
        "filter_keys": [
          "ifDescr",
          "ifIndex"
        ]
      }
    ]
  }
} 
 </msg>
<msg time="2024-12-04T20:05:31.097942" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.098861" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:30.860132" elapsed="0.238729"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.104583" level="INFO">${json_response} = {'kpis': {'kpi': [{'kpi_id': 'pulse_device_uptime', 'kpi_name': 'Device uptime', 'category': 'BASICS', 'summary': 'Monitors device uptime', 'details': 'Monitors device uptime', 'sensor_groups': {'sens...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.098861" elapsed="0.005722"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.104583" elapsed="0.001609"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_device_uptime', 'kpi_name': 'Device uptime', 'category': 'BASICS', 'summary': 'Monitors device uptime', 'details': 'Monitors device uptime', 'sensor_groups': {'sensor_group': [{'cade...</var>
<status status="PASS" start="2024-12-04T20:05:31.104583" elapsed="0.001609"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.106192" elapsed="0.001065"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cpu_threshold', 'kpi_name': 'CPU threshold', 'category': 'CPU', 'summary': 'Monitors CPU usage across route processor and line cards on routers', 'details': 'Monitors CPU usage acros...</var>
<status status="PASS" start="2024-12-04T20:05:31.106192" elapsed="0.001065"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.107257" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cpu_utilization', 'kpi_name': 'CPU utilization', 'category': 'CPU', 'summary': 'Monitors CPU usage across route processor and line cards on routers', 'details': 'Monitors CPU usage a...</var>
<status status="PASS" start="2024-12-04T20:05:31.107257" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.108262" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cef_drops', 'kpi_name': 'CEF drops', 'category': 'Dataplane-Counters', 'summary': 'Monitors CEF drop counters', 'details': 'Monitors CEF drop counters and baseline; generates an aler...</var>
<status status="PASS" start="2024-12-04T20:05:31.108262" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.108262" elapsed="0.001004"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cli_filesystem_utilization', 'kpi_name': 'Filesystem utilization', 'category': 'Filesystem', 'summary': 'Monitors filesystem usage on active route processor', 'details': 'Monitors fi...</var>
<status status="PASS" start="2024-12-04T20:05:31.108262" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.109266" elapsed="0.001003"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ipsla_udp_echo_rtt', 'kpi_name': 'IP SLA UDP Echo RTT', 'category': 'IPSLA', 'summary': 'Monitors IP SLA UDP echo RTT; generates an alert when unusual RTT values occur', 'details': '...</var>
<status status="PASS" start="2024-12-04T20:05:31.109266" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.110269" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ipsla_udp_jitter', 'kpi_name': 'IP SLA UDP jitter monitoring', 'category': 'IPSLA', 'summary': 'Monitors IP SLA UDP jitter; generates an alert when an abnormal UDP jitter occurs', 'd...</var>
<status status="PASS" start="2024-12-04T20:05:31.110269" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.110269" elapsed="0.000997"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer2_lldp_summary', 'kpi_name': 'LLDP neighbors', 'category': 'LLDP', 'summary': 'Monitors LLDP neighbors; generates an alert when any sudden changes are detected', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-04T20:05:31.110269" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.111266" elapsed="0.000942"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_alarms', 'kpi_name': 'Layer 1 optical alarms', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical alarms', 'details': 'Monitors per-port optical alarms'...</var>
<status status="PASS" start="2024-12-04T20:05:31.111266" elapsed="0.000942"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.112208" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_errors', 'kpi_name': 'Layer 1 optical errors', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port Layer 1 errors', 'details': 'Monitors per-port Layer 1 errors;...</var>
<status status="PASS" start="2024-12-04T20:05:31.112208" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.113278" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_fecerrors', 'kpi_name': 'Layer 1 optical FEC errors', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical FEC errors', 'details': 'Monitors per-port opti...</var>
<status status="PASS" start="2024-12-04T20:05:31.112208" elapsed="0.001070"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.113278" elapsed="0.000945"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_power', 'kpi_name': 'Layer 1 optical power', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical power', 'details': 'Monitors per-port optical power; gen...</var>
<status status="PASS" start="2024-12-04T20:05:31.113278" elapsed="0.000945"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.114223" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_temperature', 'kpi_name': 'Layer 1 optical temperature', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical temperature', 'details': 'Monitors per-port ...</var>
<status status="PASS" start="2024-12-04T20:05:31.114223" elapsed="0.001039"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.115262" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_voltage', 'kpi_name': 'Layer 1 optical voltage', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical voltage', 'details': 'Monitors per-port optical volt...</var>
<status status="PASS" start="2024-12-04T20:05:31.115262" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.115262" elapsed="0.000956"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_error_counters', 'kpi_name': 'Ethernet port error counters', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive error counters', 'details': 'M...</var>
<status status="PASS" start="2024-12-04T20:05:31.115262" elapsed="0.000956"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.116218" elapsed="0.001006"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_packet_size_distribution', 'kpi_name': 'Ethernet port packet size distribution', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive packet siz...</var>
<status status="PASS" start="2024-12-04T20:05:31.116218" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.117224" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_stats', 'kpi_name': 'Ethernet port packet statistics', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive packet statistics', 'details': 'Moni...</var>
<status status="PASS" start="2024-12-04T20:05:31.117224" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.118216" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_flap_detector', 'kpi_name': 'Interface flap detection', 'category': 'Layer2-Interface', 'summary': 'Monitors interface flaps', 'details': 'Monitors interface flaps and aler...</var>
<status status="PASS" start="2024-12-04T20:05:31.117224" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.118216" elapsed="0.000996"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_state_info', 'kpi_name': 'Line state', 'category': 'Layer2-Interface', 'summary': 'Monitors interface line states; generates an alert when link states change', 'details': '...</var>
<status status="PASS" start="2024-12-04T20:05:31.118216" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.119212" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_bandwidth_utilization', 'kpi_name': 'Interface bandwidth monitor', 'category': 'Layer2-Traffic', 'summary': 'Monitors bandwidth utilization across all interfaces on a route...</var>
<status status="PASS" start="2024-12-04T20:05:31.119212" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.120225" elapsed="0.000520"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_error_counters', 'kpi_name': 'Interface packet error counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error counters', 'details'...</var>
<status status="PASS" start="2024-12-04T20:05:31.120225" elapsed="0.000520"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.120745" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_error_counters_oc', 'kpi_name': 'Interface packet error counters(Openconfig)', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error count...</var>
<status status="PASS" start="2024-12-04T20:05:31.120745" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.120745" elapsed="0.001160"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_packet_counters', 'kpi_name': 'Interface packet counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive counters', 'details': 'Monitors...</var>
<status status="PASS" start="2024-12-04T20:05:31.120745" elapsed="0.001160"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.121905" elapsed="0.001018"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_rate_counters', 'kpi_name': 'Interface rate counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters', 'details': 'Monitors inter...</var>
<status status="PASS" start="2024-12-04T20:05:31.121905" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.122923" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_rate_counters_oc', 'kpi_name': 'Interface rate counters(Openconfig)', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters using opencon...</var>
<status status="PASS" start="2024-12-04T20:05:31.122923" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.123920" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_error_counters', 'kpi_name': 'SNMP interface packet error counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error counters',...</var>
<status status="PASS" start="2024-12-04T20:05:31.123920" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.123920" elapsed="0.001000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_packet_counters', 'kpi_name': 'SNMP interface packet counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive counters', 'details':...</var>
<status status="PASS" start="2024-12-04T20:05:31.123920" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.124920" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_rate_counters', 'kpi_name': 'SNMP interface rate counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters', 'details': 'Moni...</var>
<status status="PASS" start="2024-12-04T20:05:31.124920" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.125921" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_bgp', 'kpi_name': 'IPv6 RIB BGP route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by BGP', 'details': 'Monito...</var>
<status status="PASS" start="2024-12-04T20:05:31.125921" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.125921" elapsed="0.000997"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_isis', 'kpi_name': 'IPv6 RIB IS-IS route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by IS-IS', 'details': 'M...</var>
<status status="PASS" start="2024-12-04T20:05:31.125921" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.126918" elapsed="0.001002"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_ospf', 'kpi_name': 'IPv6 RIB OSPF route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by OSPF', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-04T20:05:31.126918" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.127920" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_bgp', 'kpi_name': 'RIB BGP route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by BGP', 'details': 'Monitors RIB for rout...</var>
<status status="PASS" start="2024-12-04T20:05:31.127920" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.127920" elapsed="0.001125"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_connected', 'kpi_name': 'RIB CONNECTED route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by connected', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-04T20:05:31.127920" elapsed="0.001125"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.129045" elapsed="0.001017"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_isis', 'kpi_name': 'RIB IS-IS route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by IS-IS', 'details': 'Monitors RIB for...</var>
<status status="PASS" start="2024-12-04T20:05:31.129045" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.130062" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_local', 'kpi_name': 'RIB local route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by local', 'details': 'Monitors RIB fo...</var>
<status status="PASS" start="2024-12-04T20:05:31.130062" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.130062" elapsed="0.000928"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_ospf', 'kpi_name': 'RIB OSPF route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by OSPF', 'details': 'Monitors RIB for r...</var>
<status status="PASS" start="2024-12-04T20:05:31.130062" elapsed="0.000928"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.130990" elapsed="0.001073"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_static', 'kpi_name': 'RIB static route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by static', 'details': 'Monitors RIB...</var>
<status status="PASS" start="2024-12-04T20:05:31.130990" elapsed="0.001073"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.132063" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_connected', 'kpi_name': 'RIBv6 connected route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by connected', 'details'...</var>
<status status="PASS" start="2024-12-04T20:05:31.132063" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.132063" elapsed="0.000959"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_local', 'kpi_name': 'RIBv6 local route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by local', 'details': 'Monitors ...</var>
<status status="PASS" start="2024-12-04T20:05:31.132063" elapsed="0.000959"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.133022" elapsed="0.000897"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_static', 'kpi_name': 'RIBv6 static route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by static', 'details': 'Monito...</var>
<status status="PASS" start="2024-12-04T20:05:31.133022" elapsed="0.000897"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.133919" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_intf_stat_protocol', 'kpi_name': 'Interface counters by protocol', 'category': 'Layer3-Traffic', 'summary': 'Monitors interface statistics by protocol', 'details': 'Monitors interfac...</var>
<status status="PASS" start="2024-12-04T20:05:31.133919" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.133919" elapsed="0.001132"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_memory_utilization', 'kpi_name': 'Memory utilization', 'category': 'Memory', 'summary': 'Monitors memory usage across route processor and line cards on routers', 'details': 'Monitors...</var>
<status status="PASS" start="2024-12-04T20:05:31.133919" elapsed="0.001132"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.135051" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_memory_utilization_cxr', 'kpi_name': 'Memory utilization (cXR)', 'category': 'Memory', 'summary': 'Monitors memory usage across route processor and line cards on routers on classic X...</var>
<status status="PASS" start="2024-12-04T20:05:31.135051" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.135051" elapsed="0.001644"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_isis_neighbor_summary', 'kpi_name': 'ISIS neighbor summary', 'category': 'Protocol-ISIS', 'summary': 'Monitors IS-IS neighbor summaries for changes in neighbor status', 'deta...</var>
<status status="PASS" start="2024-12-04T20:05:31.135051" elapsed="0.001644"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.136695" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_qos_egress', 'kpi_name': 'Interface QoS (egress)', 'category': 'QoS', 'summary': 'Monitors interface QoS on the egress direction for queue statistics, queue depth', 'detail...</var>
<status status="PASS" start="2024-12-04T20:05:31.136695" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.136695" elapsed="0.001090"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_qos_ingress', 'kpi_name': 'Interface QoS (ingress)', 'category': 'QoS', 'summary': 'Monitors interface QoS on the ingress direction for queue statistics, queue depth', 'det...</var>
<status status="PASS" start="2024-12-04T20:05:31.136695" elapsed="0.001090"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.137785" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'ifspeed_934b8568_6f0e959fea06', 'kpi_name': 'ifspeed', 'state': 'complete', 'category': 'User Defined', 'summary': 'ifspeed', 'sensor_groups': {'sensor_group': [{'cadence': {'default': 300...</var>
<status status="PASS" start="2024-12-04T20:05:31.137785" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{json_response['kpis']['kpi']}</value>
<status status="PASS" start="2024-12-04T20:05:31.104583" elapsed="0.033202"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.138893" level="INFO">Length is 47.</msg>
<msg time="2024-12-04T20:05:31.138893" level="INFO">${NUM_KPI} = 47</msg>
<var>${NUM_KPI}</var>
<arg>${CNC_KPI}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.138893" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.138893" level="INFO">${MSG} = # KPIs: 47</msg>
<arg>${MSG}</arg>
<arg>${MSG}# KPIs: ${NUM_KPI}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.138893" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.138893" level="INFO">${CNC_KPI} = ['[BASICS] Device uptime:SNMP', '[CPU] CPU threshold:GNMI,YANG_MDT', '[CPU] CPU utilization:GNMI,YANG_MDT', '[Dataplane-Counters] CEF drops:GNMI,YANG_MDT', '[Filesystem] Filesystem utilization:YANG_CL...</msg>
<arg>${CNC_KPI}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.138893" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.138893" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieve and reports on CAHI defined alerts (KPIs)</doc>
<status status="PASS" start="2024-12-04T20:05:30.859132" elapsed="0.279761"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.138893" level="INFO">Set test message to:
# KPIs: 47
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.138893" elapsed="0.000000"/>
</kw>
<doc>Find all the configured KPIs by category</doc>
<tag>DATA-COLLECTION</tag>
<tag>KPIS</tag>
<status status="PASS" start="2024-12-04T20:05:30.858122" elapsed="0.281679"># KPIs: 47
</status>
</test>
<test id="s1-t15" name="Retrieve CNC Versions" line="136">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.140915" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.140915" elapsed="0.000000"/>
</kw>
<kw name="get-application-versions" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.141858" level="INFO">${myurl} = /crosswork/platform/v2/capp/applicationsummary/query</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/capp/applicationsummary/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.141858" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.141858" level="INFO">@{CNC_APP_VERSIONS} = [ ]</msg>
<var>@{CNC_APP_VERSIONS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.142910" level="INFO">${description} = Retrieve CNC Versions</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.001052"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.229035" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/platform/v2/capp/applicationsummary/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:31.230034" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/platform/v2/capp/applicationsummary/query 
 path_url=/crosswork/platform/v2/capp/applicationsummary/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:31.230034" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/platform/v2/capp/applicationsummary/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"application_summary_list":[{"application_id":"capp-ca","application_data":{"application_id":"capp-ca","version":"7.0.0-rc.62+build.65","summary":{"name":"Change Automation","description":"Automates the process of deploying changes to networks"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-15 03:00:20.385663","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-ca","version":"7.0.0-rc.4","description":"","summary":{"name":"Change Automation","description":"Cisco Crosswork Change Automation application automates the process of deploying changes to the network"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-ca-ui-plugins","version":"7.0.0-rc.3","description":"","summary":{"name":"ui-plugin","description":"nca"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-astackserver","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-metricmanager","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"rs-du-dlm-ui-plugins","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-nso-fp-dep-mngr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CAHISW","software_id_tag":"regid.2019-11.com.cisco.CAHISW,1.0_1bb005c9-b4e7-41c4-bf49-65ff6643a44e","display_name":"Health Insights and Change Automation","entitlements":[{"entitlement_tag":"regid.2023-01.com.cisco.CNC_CAHI_RTU,1.0_92a3f791-2a2f-4413-994d-70640accdb7b","version":"1.0","name":"CNC_CAHI_RTU","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","is_lab_supported":false,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-ca","version":"7.0.0-rc.62+build.65","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-hi","application_data":{"application_id":"capp-hi","version":"7.0.0-rc.60+build.62","summary":{"name":"Health Insights","description":"Setup and monitor KPIs for your network devices"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-15 03:00:22.232663","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-hi","version":"7.0.0-rc.5","description":"","summary":{"name":"health insights","description":"health insights"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-grafana","version":"7.0.0-rc.2","description":"","summary":{"name":"grafana","description":"grafana"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-hi-ui-plugins","version":"7.0.0-rc.4","description":"","summary":{"name":"ui-plugin","description":"pulse"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-astackserver","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-metricmanager","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"rs-du-dlm-ui-plugins","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CAHISW","software_id_tag":"regid.2019-11.com.cisco.CAHISW,1.0_1bb005c9-b4e7-41c4-bf49-65ff6643a44e","display_name":"Health Insights and Change Automation","entitlements":[{"entitlement_tag":"regid.2019-11.com.cisco.NTWAUTO_RTM,1.0_9659e789-15e7-4db3-8665-7f06e5f08857","version":"1.0","name":"NTWAUTO_RTM","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2023-01.com.cisco.CNC_CAHI_RTU,1.0_92a3f791-2a2f-4413-994d-70640accdb7b","version":"1.0","name":"CNC_CAHI_RTU","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","is_lab_supported":false,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-hi","version":"7.0.0-rc.60+build.62","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-cat","application_data":{"application_id":"capp-cat","version":"7.0.0-rc.65+build.68","summary":{"name":"Active Topology","description":"Turnkey solution to end-to-end provisioning and management of intent-based networks"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-15 03:00:27.685952","publisher":"Cisco"},"contents":[{"unit_id":"rs-du-cat-ui-plugins","version":"7.0.0-rc.12","description":"","summary":{"name":"cat ui plugin","description":"active-topology"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-cat-topology-visualization-plugins","version":"7.0.0-rc.10","description":"","summary":{"name":"topology visualization plugin","description":"rs-du-topology-visualization-plugins"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-provisioning-ui-plugins","version":"7.0.0-rc.10","description":"","summary":{"name":"provisioning ui plugin","description":"n-conf"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cat-fp-deployment-manager","version":"7.0.0-rc.10","description":"","summary":{"name":"cat fp deployment manager","description":"pod-du-cat-fp-deployment-manager"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-cat-fp-deployment-manager-function-packs","version":"7.0.0-rc.10","description":"","summary":{"name":"fp deployment manager function packs","description":"rs-du-cat-fp-deployment-manager-function-packs"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cat-service-overlay","version":"7.0.0-rc.10","description":"","summary":{"name":"cat service overlay","description":"cat service overlay"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cat-restconf","version":"7.0.0-rc.10","description":"","summary":{"name":"cat restconf","description":"cat restconf"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cat-inventory","version":"7.0.0-rc.10","description":"","summary":{"name":"cat inventory","description":"cat inventory"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cat-ui-service","version":"7.0.0-rc.10","description":"","summary":{"name":"cat ui service","description":"cat ui service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-nso-connector","version":"7.0.0-rc.10","description":"","summary":{"name":"nso connector","description":"nso connector"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-coe","identifier_type":"APPLICATION","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=7.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CNC","software_id_tag":"","display_name":"","entitlements":[],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"","is_lab_supported":false,"auto_onboard":false},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-cat","version":"7.0.0-rc.65+build.68","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-coe","application_data":{"application_id":"capp-coe","version":"7.0.0-rc.73+build.78","summary":{"name":"Optimization Engine","description":"Provides real-time network optimization capabilities to effectively maximize network utility and service velocity"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-16 04:06:07.763304","publisher":"Cisco"},"contents":[{"unit_id":"rs-du-coe-topology-visualization-plugins","version":"7.0.0-rc.1","description":"","summary":{"name":"topology visualization plugin","description":"rs-du-topology-visualization-plugins"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-coe-ui-plugins","version":"7.0.0-rc.5","description":"","summary":{"name":"ui-plugin","description":"robot-coe"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-analytics-ui-plugins","version":"7.0.0-rc.3","description":"","summary":{"name":"ui-plugin","description":"robot-analytics"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-pce-dispatcher","version":"7.0.0-rc.4","description":"","summary":{"name":"optima pce dispatcher","description":"pod-du-optima-pce-dispatcher"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-traffic","version":"7.0.0-rc.3","description":"","summary":{"name":"optima traffic","description":"optima traffic"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-restconf-v2","version":"7.0.0-rc.3","description":"","summary":{"name":"optima restconf v2","description":"optima restconf v2"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-engine","version":"7.0.0-rc.3","description":"","summary":{"name":"optima engine","description":"optima engine"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-engine-worker","version":"7.0.0-rc.3","description":"","summary":{"name":"optima engine worker","description":"optima engine worker"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-api-service","version":"7.0.0-rc.3","description":"","summary":{"name":"optima api service","description":"optima api service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-csm","version":"7.0.0-rc.3","description":"","summary":{"name":"optima csm","description":"optima csm"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-lcm","version":"7.0.0-rc.3","description":"","summary":{"name":"optima lcm","description":"optima lcm"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-bwod","version":"7.0.0-rc.3","description":"","summary":{"name":"optima bwod","description":"optima bwod"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-ui-service","version":"7.0.0-rc.6","description":"","summary":{"name":"optima ui backend","description":"optima-ui-service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-oam","version":"7.0.0-rc.5","description":"","summary":{"name":"oam","description":"oam"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-analytics-service","version":"7.0.0-rc.9","description":"","summary":{"name":"optima analytics service","description":"optima-analytics-service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-optima-analytics-api","version":"7.0.0-rc.5","description":"","summary":{"name":"optima analytics api","description":"optima-analytics-api"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"}],"license_data":{"product_id":"OPTIMA","software_id_tag":"regid.2019-11.com.cisco.OPTIMA,1.0_cad7bb2b-a63f-4488-b835-4c7155388d0a","display_name":"Crosswork Optimization Engine","entitlements":[{"entitlement_tag":"","version":"","name":"","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"ESSENTIALS","parent_software_id":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","is_lab_supported":false,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-coe","version":"7.0.0-rc.73+build.78","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-common-ems-services","application_data":{"application_id":"capp-common-ems-services","version":"7.0.0-rc.760+build.767","summary":{"name":"Element Management Functions","description":"Functions included detailed device inventory, software image management, device alarm, device key metrics, configuration related functions and ZTP"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-20 15:27:41.371887","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-emf-service-manager","version":"7.0.0-rc.1","description":"","summary":{"name":"emf-service-manager","description":"Element management function service manager"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-event-based-inventory","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-event-based-inventory","description":"event based inventory"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-inventory","version":"7.0.0-rc.1","description":"","summary":{"name":"inventory","description":"CS Inventory automates the process of inventory collection"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-inventory-collector","version":"7.0.0-rc.1","description":"","summary":{"name":"inventory-collector","description":"CS Inventory automates the process of inventory collection"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-nbi-alarm-notification","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-nbi-alarm-notification","description":"NBI Alarm Notification"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-nbi-inventory-notification","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-nbi-inventory-notification","description":"NBI Inventory Notification"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-swim","version":"7.0.0-rc.21","description":"","summary":{"name":"swim","description":"Software Image Management"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-performance-service","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-performance-service","description":"performance-service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-ems-ui-plugins","version":"7.0.0-rc.61","description":"","summary":{"name":"ui-plugin","description":"ems"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-cs-xmp-inventory","version":"7.0.0-rc.1","description":"","summary":{"name":"cs-xmp-inventory","description":"rs-du-cs-xmp-inventory"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-app-ems-cli-dp-xars","version":"7.0.0-rc.1","description":"","summary":{"name":"rs-du-app-ems-cli-dp-xars","description":"Element management functions cli xar file "},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-app-ems-snmp-dp-xars","version":"7.0.0-rc.1","description":"","summary":{"name":"rs-du-app-ems-snmp-dp-xars","description":"Element management functions snmp xar file "},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-cs-topology-visualization-plugins","version":"7.0.0-rc.1","description":"","summary":{"name":"topology visualization plugin","description":"rs-du-topology-visualization-plugins"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-ztp-service","version":"7.0.0-rc.21","description":"","summary":{"name":"cw-ztp-service","description":"ztp service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-image-service","version":"7.0.0-rc.23","description":"","summary":{"name":"cw-image-service","description":"ztp image service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-config-service","version":"7.0.0-rc.15","description":"","summary":{"name":"cw-config-service","description":"ztp config service"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-ztp-ui-plugins","version":"7.0.0-rc.23","description":"","summary":{"name":"ui-plugin","description":"ztp-ui"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-metricmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"rs-du-dlm-ui-plugins","identifier_type":"RESOURCE","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=6.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CNC","software_id_tag":"","display_name":"","entitlements":[],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"","is_lab_supported":false,"auto_onboard":false},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-common-ems-services","version":"7.0.0-rc.760+build.767","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-infra","application_data":{"application_id":"capp-infra","version":"7.0.0-rc.73+build.85","summary":{"name":"Platform Infrastructure","description":"Plan, design, implement, operate, and optimize your network with Cisco Crosswork Platform"},"identifier_type":"APPLICATION","category":"PLATFORM","build_information":{"date_time":"2024-08-23 06:48:28.587212","publisher":"Cisco"},"contents":[{"unit_id":"rs-du-dg-collector","version":"7.0.0-rc.74","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-collector-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-infra-images","version":"7.0.0-rc.74","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-infra-images-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-astack-images","version":"7.0.0-rc.5","description":"","summary":{"name":"astack resource","description":"rs-du-dg-astack-images-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-common-images","version":"7.0.0-rc.7","description":"","summary":{"name":"dg-common resource","description":"rs-du-dg-common-images-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-system-cli-dp","version":"7.0.0-rc.74","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-system-cli-dp-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-system-snmp-mp","version":"7.0.0-rc.74","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-system-snmp-mp-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dlm-ui-plugins","version":"7.0.0-rc.3","description":"","summary":{"name":"ui-plugin","description":"inventory"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-cdg-ui-plugins","version":"7.0.0-rc.3","description":"","summary":{"name":"ui-plugin","description":"cdg"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-system-mib-packages","version":"7.0.0-rc.1","description":"","summary":{"name":"system mib packages","description":"system-mib-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-abstract-topo-visualization","version":"7.0.0-rc.1","description":"","summary":{"name":"rs abstract topo topovisualization","description":"a place holder for topo topovisualization"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-system-common-def-packages","version":"7.0.0-rc.3","description":"","summary":{"name":"rs-du-dg-system-common-def-packages","description":"system-common definition packages"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-app-sys-cli-dp","version":"7.0.0-rc.1","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-app-sys-cli-dp-resources"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-app-sys-snmp-dp","version":"7.0.0-rc.1","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-app-sys-snmp-dp-resources"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-dg-sys-agg","version":"7.0.0-rc.1","description":"","summary":{"name":"cdg manager resource","description":"rs-du-dg-sys-agg-resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-event-processing","version":"7.0.0-rc.1","description":"","summary":{"name":"event-processing resource","description":"a place holder for event-processing resource"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-infra-swim-signature","version":"7.0.0-rc.1","description":"","summary":{"name":"infra-swim-signature resource","description":"rs-du-infra-swim-signature-resources"},"identifier_Type":"RESOURCE","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-fault-alarm-processing-service","version":"7.0.0-rc.4","description":"","summary":{"name":"alarm-processing-service","description":"alarm-processing-service"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-fault-event-processing-service","version":"7.0.0-rc.5","description":"","summary":{"name":"event-processing-service","description":"event-processing-service"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-fault-alarm-rest-service","version":"7.0.0-rc.7","description":"","summary":{"name":"alarm-rest-service","description":"alarm-rest-service"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-fault-alarm-forwarding-service","version":"7.0.0-rc.7","description":"","summary":{"name":"alarm-forwarding-service","description":"alarm-forwarding-service"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-data-retention-service","version":"7.0.0-rc.5","description":"","summary":{"name":"data-retention-service","description":"data-retention-service"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-proxy","version":"7.0.0-rc.3","description":"","summary":{"name":"cw-proxy","description":"cw-proxy"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-metricmanager","version":"7.0.0-rc.3","description":"","summary":{"name":"metricmanager","description":"metricmanager"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-astackserver","version":"7.0.0-rc.3","description":"","summary":{"name":"astackserver","description":"astack server interace for astack clients on CDG(s)"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cas","version":"7.0.0-rc.6","description":"","summary":{"name":"cas","description":"infra-cas"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-clms","version":"7.0.0-rc.5","description":"","summary":{"name":"clms","description":"infra clms"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-dgmanager","version":"7.0.0-rc.7","description":"","summary":{"name":"dg manager","description":"infra-dgmanager"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-dlminvmgr","version":"7.0.0-rc.5","description":"","summary":{"name":"dlminvmgr","description":"infra-dlminvmgr"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-etcd","version":"7.0.0-rc.3","description":"","summary":{"name":"etcd","description":"infra-etcd"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-helios","version":"7.0.0-rc.5","description":"","summary":{"name":"helios","description":"infra-helios"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-kafka","version":"7.0.0-rc.3","description":"","summary":{"name":"kafka","description":"infra-kafka"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-magellan","version":"7.0.0-rc.6","description":"","summary":{"name":"magellan","description":"infra-magellan"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-neo4j-toposvc","version":"7.0.0-rc.6","description":"","summary":{"name":"neo4j toposvc","description":"infra-neo4j"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-nats","version":"7.0.0-rc.5","description":"","summary":{"name":"nats","description":"infra-nats"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-node-orchestrator","version":"7.0.0-rc.5","description":"","summary":{"name":"node orchestrator","description":"node-orchestrator"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-postgres","version":"7.0.0-rc.5","description":"","summary":{"name":"postgres","description":"infra-postgres"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-local-postgres","version":"7.0.0-rc.5","description":"","summary":{"name":"local-postgres","description":"infra-postgres"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-toposvc","version":"7.0.0-rc.3","description":"","summary":{"name":"toposvc","description":"infra-toposvc"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-topovisualization","version":"7.0.0-rc.4","description":"","summary":{"name":"topovisualization","description":"infra-topovisualization"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-viewsservice","version":"7.0.0-rc.4","description":"","summary":{"name":"viewsservice","description":"infra-viewsservice"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-geoservice","version":"7.0.0-rc.4","description":"","summary":{"name":"geoservice","description":"geoservice"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-groupingservice","version":"7.0.0-rc.4","description":"","summary":{"name":"grouping service","description":"groupingservice"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-tyk","version":"7.0.0-rc.6","description":"","summary":{"name":"tyk","description":"infra-tyk"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-ui","version":"7.0.0-rc.11","description":"","summary":{"name":"ui","description":"Infra UI runnable image containing common-ui and infra-ui"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-ipsec","version":"7.0.0-rc.2","description":"","summary":{"name":"cw-ipsec","description":"infra-ipsec"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-docker-registry","version":"7.0.0-rc.4","description":"","summary":{"name":"docker registry","description":"infra-docker-registry"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-descheduler","version":"7.0.0-rc.2","description":"","summary":{"name":"descheduler","description":"infra-descheduler"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-ftp","version":"7.0.0-rc.3","description":"","summary":{"name":"cw-ftp","description":"FTP server for Apps"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-sftp","version":"7.0.0-rc.3","description":"","summary":{"name":"cw-sftp","description":"SFTP server for Apps"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-timeseries-db","version":"7.0.0-rc.5","description":"","summary":{"name":"cw-timeseries-db","description":"cw timeseries db"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-icon-server","version":"7.0.0-rc.6","description":"","summary":{"name":"cw-icon-server","description":"cw-icon-server"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-nso-fp-dep-mngr","version":"7.0.0-rc.6","description":"","summary":{"name":"nso-fp-dep-mngr","description":"nso-fp-dep-mngr"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":true,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-orch","version":"7.0.0-rc.2","description":"","summary":{"name":"robot-orch","description":"robot-orch"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-distributed-cache","version":"7.0.0-rc.4","description":"","summary":{"name":"distributed-cache","description":"distributed-cache"},"identifier_Type":"POD","category":"PLATFORM","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[],"license_data":{"product_id":"CNC","software_id_tag":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","display_name":"Crosswork Network Controller","entitlements":[{"entitlement_tag":"regid.2024-04.com.cisco.CNC_RTU_K9,1.0_16cddfff-abc5-4d62-b10e-1528f6d1d926","version":"1.0","name":"CNC_RTU","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2024-04.com.cisco.CNC_GEO_R_RTU,1.0_a2a9465f-4547-4657-9d47-d4db60a04308","version":"1.0","name":"CNC_GEO_RTU","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2020-04.com.cisco.CNC-ERTM-SMALL,1.0_c4cae628-2040-4903-ae4e-cff95623f684","version":"1.0","name":"CNC-ERTM-SMALL","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2024-04.com.cisco.CNC_ARTM_SMALL,1.0_d33d45a5-64a0-42e3-9f66-70bfe01c8d2a","version":"1.0","name":"CNC_ARTM_SMALL","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2021-01.com.cisco.CW_EXTERNAL_COLLECT,1.0_0ed19b69-6bd2-4c26-9d56-31481304cc11","version":"1.0","name":"CW_EXTERNAL_COLLECT","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2019-11.com.cisco.NTWAUTO_RTM,1.0_9659e789-15e7-4db3-8665-7f06e5f08857","version":"1.0","name":"NTWAUTO_RTM","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2023-01.com.cisco.CNC_CAHI_RTU,1.0_92a3f791-2a2f-4413-994d-70640accdb7b","version":"1.0","name":"CNC_CAHI_RTU","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"ESSENTIALS","parent_software_id":"","is_lab_supported":true,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-infra","version":"7.0.0-rc.73+build.85","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}}],"query_options":{"pagination":{"page_token":"3","page_size":200}},"result":{"request_result":"ACCEPTED","error":null}} 
 </msg>
<msg time="2024-12-04T20:05:31.231035" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.232035" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.142910" elapsed="0.089125"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.235033" level="INFO">${json_response} = {'application_summary_list': [{'application_id': 'capp-ca', 'application_data': {'application_id': 'capp-ca', 'version': '7.0.0-rc.62+build.65', 'summary': {'name': 'Change Automation', 'description':...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.233038" elapsed="0.001995"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.235033" level="INFO">${MSG} = --CNC Application Versions--</msg>
<arg>${MSG}</arg>
<arg>--CNC Application Versions--</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.235033" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.237554" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.237036" elapsed="0.000518"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.237554" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-ca', 'application_data': {'application_id': 'capp-ca', 'version': '7.0.0-rc.62+build.65', 'summary': {'name': 'Change Automation', 'description': 'Automates the process of dep...</var>
<status status="PASS" start="2024-12-04T20:05:31.236032" elapsed="0.001522"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.238947" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.237554" elapsed="0.001393"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.238947" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-hi', 'application_data': {'application_id': 'capp-hi', 'version': '7.0.0-rc.60+build.62', 'summary': {'name': 'Health Insights', 'description': 'Setup and monitor KPIs for you...</var>
<status status="PASS" start="2024-12-04T20:05:31.237554" elapsed="0.001393"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.239961" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.238947" elapsed="0.001014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.239961" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-cat', 'application_data': {'application_id': 'capp-cat', 'version': '7.0.0-rc.65+build.68', 'summary': {'name': 'Active Topology', 'description': 'Turnkey solution to end-to-e...</var>
<status status="PASS" start="2024-12-04T20:05:31.238947" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.240956" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.239961" elapsed="0.000995"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.240956" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-coe', 'application_data': {'application_id': 'capp-coe', 'version': '7.0.0-rc.73+build.78', 'summary': {'name': 'Optimization Engine', 'description': 'Provides real-time netwo...</var>
<status status="PASS" start="2024-12-04T20:05:31.239961" elapsed="0.000995"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.241961" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.241961" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.241961" elapsed="0.001003"/>
</kw>
<var name="${item}">{'application_id': 'capp-common-ems-services', 'application_data': {'application_id': 'capp-common-ems-services', 'version': '7.0.0-rc.760+build.767', 'summary': {'name': 'Element Management Functions...</var>
<status status="PASS" start="2024-12-04T20:05:31.241961" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.243960" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767
capp-...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.242964" elapsed="0.000996"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.244958" elapsed="0.001014"/>
</kw>
<var name="${item}">{'application_id': 'capp-infra', 'application_data': {'application_id': 'capp-infra', 'version': '7.0.0-rc.73+build.85', 'summary': {'name': 'Platform Infrastructure', 'description': 'Plan, design, im...</var>
<status status="PASS" start="2024-12-04T20:05:31.242964" elapsed="0.004006"/>
</iter>
<var>${item}</var>
<value>@{json_response['application_summary_list']}</value>
<status status="PASS" start="2024-12-04T20:05:31.236032" elapsed="0.010938"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.246970" level="INFO">${CNC_APP_VERSIONS} = ['capp-ca:7.0.0-rc.62+build.65', 'capp-hi:7.0.0-rc.60+build.62', 'capp-cat:7.0.0-rc.65+build.68', 'capp-coe:7.0.0-rc.73+build.78', 'capp-common-ems-services:7.0.0-rc.760+build.767', 'capp-infra:7.0.0-...</msg>
<arg>${CNC_APP_VERSIONS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.246970" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.247968" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves the CNC application versions and stores result in suit variabe ``CNC_APP_VERSIONS``</doc>
<status status="PASS" start="2024-12-04T20:05:31.141858" elapsed="0.106110"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.248990" level="INFO">Set test message to:
--CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767
capp-infra:7.0.0-rc.73+build.85
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.247968" elapsed="0.001022"/>
</kw>
<doc>Find all the Crosswork modules and versions</doc>
<tag>APPLICATIONS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-04T20:05:31.140915" elapsed="0.108075">--CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767
capp-infra:7.0.0-rc.73+build.85
</status>
</test>
<test id="s1-t16" name="Retrieve CNC Data Gateway" line="143">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.249954" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.249954" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-cdg" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.250958" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.250958" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.250958" level="INFO">${description} = Retrieve CNC Data Gateway</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.250958" level="INFO">@{CNC_DATAGW} = [ ]</msg>
<var>@{CNC_DATAGW}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.250958" level="INFO">@{CNC_DATAGW_OPER} = [ ]</msg>
<var>@{CNC_DATAGW_OPER}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.251958" level="INFO">@{FIELDS_DATA} = [ name ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>name</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.001000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.251958" level="INFO">@{FIELDS_CONFIGDATA} = [ version | adminState | profileType ]</msg>
<var>@{FIELDS_CONFIGDATA}</var>
<arg>version</arg>
<arg>adminState</arg>
<arg>profileType</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.251958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.251958" level="INFO">@{FIELDS_CONFIGDATA_INTERFACES} = [ name | inetAddr | mask ]</msg>
<var>@{FIELDS_CONFIGDATA_INTERFACES}</var>
<arg>name</arg>
<arg>inetAddr</arg>
<arg>mask</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.251958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.251958" level="INFO">@{FIELDS_CONFIGDATA_PROFILE} = [ cpu | memory | nics ]</msg>
<var>@{FIELDS_CONFIGDATA_PROFILE}</var>
<arg>cpu</arg>
<arg>memory</arg>
<arg>nics</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.251958" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.251958" level="INFO">@{FIELDS_OPERDATA} = [ operState ]</msg>
<var>@{FIELDS_OPERDATA}</var>
<arg>operState</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.251958" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.252467" level="INFO">${myurl} = /crosswork/dg-manager/v1/dg/query</msg>
<var>${myurl}</var>
<arg>/crosswork/dg-manager/v1/dg/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.252467" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.252467" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.252467" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.252467" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.252467" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.314885" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/dg-manager/v1/dg/query HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:31.314885" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/dg-manager/v1/dg/query 
 path_url=/crosswork/dg-manager/v1/dg/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-04T20:05:31.314885" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/dg-manager/v1/dg/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Timestamp': '2024-12-04T21:05:18+11:00', 'X-Cxw-Rpc-Status': '0', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"duuid":"c94b9547-c353-417f-baef-b8a9628c73d2","name":"nbntanda-cdg-cdg01","configData":{"description":"821","version":"7.0.0 (branch release700 - build number 19)","interfaces":[{"name":"eth0","mac":"00:50:56:b3:7a:3b","ipAddr":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"10.67.22.42","mask":"28"}],"roles":"ADMINISTRATION,DEFAULT_GATEWAY,EXTERNAL_LOGGING,MANAGEMENT"},{"name":"eth1","mac":"00:50:56:b3:9e:b2","ipAddr":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"172.16.202.42","mask":"24"}],"roles":"CONTROL,NB_EXTERNAL_DATA,NB_SYSTEM_DATA,SB_DATA"}],"certChain":{"certificate":"MIIJajCCBVKgAwIBAgIUO+bCZ9pZBfu9jxrAVkTH+8e1qh4wDQYJKoZIhvcNAQENBQAwKjELMAkGA1UECgwCREcxGzAZBgNVBAMMEm5ibnRhbmRhLWNkZy1jZGcwMTAeFw0yNDEyMDMwNTI2NThaFw00NDEyMDQwNTI2NThaMCoxCzAJBgNVBAoMAkRHMRswGQYDVQQDDBJuYm50YW5kYS1jZGctY2RnMDEwggQiMA0GCSqGSIb3DQEBAQUAA4IEDwAwggQKAoIEAQC622ikOZFvO6j+C7rQhJJW9JYFv5rQOuSdb4gOwiL5WLQoZ7Qa/toGXfpAFrK4f84pCcq7onbxjFM/0luS2OHAevMCy9L7026ckCbz8mDO429UqQULeulGWiJRYxak+hxl97L63QY9W/NjdJNpA6yANqoDYcF18lzYjpDcEJN0A8yJTylQiqRSDCBMCrlFUK0RIeN+AwQrgEho9bVZjjyLQ8Qoqug/O+pjPOtN8B+x6TcipMBFekMoREZmv1poLBqeQeyQT0uWHJI16v9BZV+N1DfsMwZvfEjEAzxKBlxm+ti051TN/QjlpeqLtqzacbF+4yRfQqgfr9QolinopJEz9j8/l81bhJR/9CnAxqwRaM5dVEk/bJn3xHoXtfAwTwcH1Il9l0rzywSgfcoQFLQ+xVfKhvfeXTI/lKQeloPpG3m9i/tHOX8sveMAy9J+BEEUKXBgYYOvp7bi1Hd1A1m/ruFsAy6YJHRTmNnTbkIw8DPJkqX65taNm+tZnJrsC++NcuLdkxUL6+fspCy1iSDBpbsmdhTX5VXfWFnJpApUno00SQG1FrbZytADdjEyF+HjUNJSFygxHNWxgyNjgpAMGC+leShENchE9MOTNUfcpMTgolv7Whc46bmBb8uD8W36JOkiG1ZIGcxWyod+NRq/YmgEFTs7lza44TndyBMVeiudZg91mpv0i5xiIFvAXr7tSpnrQKh0VP90ZMetaMWGEge/BVfabx7SETNInzwhF+6jSBnAKNymyiuBiDVkH8NgiwgUl7iny+QxWZ9noW5toM+yTjMQNMnod9vc3Ez1JA0AH+3XLVBUdS+/+116zZm9Lxeonwgm5/ANWHyzNWeCWWHk9IVbOFIdTlRO4rA6J2+q4Q9pLqICrlGDUX0+O+ijXUAiwHupkI0fuwZi4yu/TXJjcPFeMnRQDSYH8dIFa1yOEBoW9VF/LUOiARACzyhYovvIoc7j1OyvCxNavDFuAAak8z683A4UInkVgR3zcqJDFD4urUPdwaIqNauT+JwktSzTKacFPoYYuNqVOGQVCvVb6QtzCtvODmPv9Us9UjWfPLNQewaj22q4JTUMf45G47Z/KUlDKwJi4rxciCGMxfEae5O5axdJcp6RRrm+VakgXBFsFVcXrn9qRhUTCsqMI8sLSL96WuAnEIn9W/s6l58CJf/cvgqtWmDsWfBgRN75n64papUh8WWvmmQXhc5cdQO9xny3JYglfyC2V+OmzW6wau6yPwGAgUjH5BKvxjdS6EqNmlL5mODFG1fBWqLfIb1Imt8X22nDw9AmsLrQ4jdXvj4kBPKFVsfHu9sNzxuL2cUpExeVWMKRbPp3x7iAiuVoxIpoCm7WrnN23kJtAgMBAAGjgYcwgYQwHQYDVR0OBBYEFEmRJxzgNqoxRRcMBb+b8AEEDbCWMB8GA1UdIwQYMBaAFEmRJxzgNqoxRRcMBb+b8AEEDbCWMA8GA1UdEwEB/wQFMAMBAf8wMQYDVR0RBCowKIISbmJudGFuZGEtY2RnLWNkZzAxghJuYm50YW5kYS1jZGctY2RnMDEwDQYJKoZIhvcNAQENBQADggQBAGwu1wOdVO5OjIvcHkSqYzCIh8J0j7pqO0cz62Yr8YUjFJfWDRh58hr0Cp+LhTBYAtcGYIliqNi+TL3ta0NachzXHExWtPwLdQLM0q2NhU/fpV7F9hJ4XQKlpoH3plJAM8rG4tZz1SxGStBn5ilnJjc+b5Ws1CAomsxxV7HMF5AHx96coKoSBBeNvQH7ktR6RV1uwceGRrxIG+NH2RmWWqxiziAM2wzQ3IsFL6k2cVmVf3SoTSHtIEvBwFt/bs/1XFRFsYvlbwK/o/KaFXKO9KAlGspuR9ABcdIThmYDS7p8KBpARiXG3LrUyRHDqiV7NjVi+SWY3v3OaxmsPVMQmCmm/xWr8xw0zX7cNIsDwBWtcG24miQ+KjzW+B7WfyAcQg4HNjSBmXcN0y7H2AXR53YNUGa3MVO3FaYHJKceFZRig4HjeezfdLTEpo/QsXkBQuGn4PlxRXlj82oh9/RaV0STyRoa9eA6nvWue/upt2es3aJzgBIx7QPSWFuR6jBS1542+q5xEh3OZTTsAHgCUqTjL3zfyXiPrpEtZEVlvpreBEHUbXkmmluurejbWpxoajYdrLryAl9nnlux5DpU4pTQEzWdNx2w+ub5Q5yhJWuIi2FnGO7nAhGVFDKvXY2/FPctX3UHkrV5x4yaQVfiv+z4UPMgBygsIdeJY+/YaM/Rk7jq+IY/+6jLl3Vsf4XNMTXEkroiXIHS1TNZX3gV5ThFmX214XfFtwuKnCapwIcUoPpY9h50+YcBZ6GASbfB6r2NM//0Ot/JqOxeYBVfQNGVNA2W8FPePnAYSqML/DT5DA7qg9TNho1V2pwpfIbJO6JLuiP53ROBzS94stjwdpQKZzT5NdwaH81AW4TuXi98YnpMlLpGpF5YGKwDw6kyQxxRbrJQ+xeB55FFfsxdGqkhZJHq5ttS4zJCFJMSYRBTIKWQKOlplwCWLwBGJqB+3W539bBITq48o+O5+83XRSXetf6Omn2x1eYV24nDgd8nZhON2rfjYXalgIivEFaHU2w9/PnupGAgPxdwV4HBmwCRWpGmaZBl+dJHq3Hk5hieQWrPjlQbRdaL2GZivn0YlVLpreMHAjA7K0FoBZ+YfMLqIqm3XRJKLWEiVFyiNoQ80subKJEztj2qRP7C/ZkpjWTCsvm93D9VE6eZlaaoF0I4uX4ipRa5fVGgSbtUpcrHAuv0RFEjPQp+kXdYuU1zmAjfD9N7nGZbDPV0NS+mST2BhoVRgSHO/iQ2DqF9h5Qv9nCW9hIRGPWLEEq0yguCMRcyITMrJ+TEqeKF65UqsBAjR1FvzQKY3inMacu7/yOFzkc0M4+6DT4VXMo/pDIzQ4NKKb6692UIuQ79/cW/VVM="},"profile":{"cpu":20,"memory":110,"nics":2,"baseVm":"BASE_VM_TRUE"},"role":"ASSIGNED","adminState":"AS_UP","poolId":"288e2621-174b-4dbe-93a7-fa8426c679f0","vdgUuid":"eb4fda3b-3001-4701-bc00-5d9d93b58cef","profileType":"VM_PROFILE_EXTENDED"},"operationalData":{"operState":"OS_UP","operStateDetails":[{"componentName":"mdt-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"gnmi-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"cli-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"snmp-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"syslog-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"astack-service","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"aa-exp-tracker","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"robot-astack-influxdb","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"image-manager","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"controller-gateway","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"oam-manager","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"common-pipeline","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"icon","state":"CS_UP","imageTag":"7.0.0"}],"createdTime":"1733290402","lastUpdatedTime":"1733290867"},"globalParamSyncStatus":true}],"totalCount":1} 
 </msg>
<msg time="2024-12-04T20:05:31.314885" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.315882" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.252467" elapsed="0.063415"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.315882" level="INFO">${json_response} = {'data': [{'duuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'name': 'nbntanda-cdg-cdg01', 'configData': {'description': '821', 'version': '7.0.0 (branch release700 - build number 19)', 'interfaces': [...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.315882" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.316881" level="INFO">[{'duuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'name': 'nbntanda-cdg-cdg01', 'configData': {'description': '821', 'version': '7.0.0 (branch release700 - build number 19)', 'interfaces': [{'name': 'eth0', 'mac': '00:50:56:b3:7a:3b', 'ipAddr': [{'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '10.67.22.42', 'mask': '28'}], 'roles': 'ADMINISTRATION,DEFAULT_GATEWAY,EXTERNAL_LOGGING,MANAGEMENT'}, {'name': 'eth1', 'mac': '00:50:56:b3:9e:b2', 'ipAddr': [{'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '172.16.202.42', 'mask': '24'}], 'roles': 'CONTROL,NB_EXTERNAL_DATA,NB_SYSTEM_DATA,SB_DATA'}], 'certChain': {'certificate': 'MIIJajCCBVKgAwIBAgIUO+bCZ9pZBfu9jxrAVkTH+8e1qh4wDQYJKoZIhvcNAQENBQAwKjELMAkGA1UECgwCREcxGzAZBgNVBAMMEm5ibnRhbmRhLWNkZy1jZGcwMTAeFw0yNDEyMDMwNTI2NThaFw00NDEyMDQwNTI2NThaMCoxCzAJBgNVBAoMAkRHMRswGQYDVQQDDBJuYm50YW5kYS1jZGctY2RnMDEwggQiMA0GCSqGSIb3DQEBAQUAA4IEDwAwggQKAoIEAQC622ikOZFvO6j+C7rQhJJW9JYFv5rQOuSdb4gOwiL5WLQoZ7Qa/toGXfpAFrK4f84pCcq7onbxjFM/0luS2OHAevMCy9L7026ckCbz8mDO429UqQULeulGWiJRYxak+hxl97L63QY9W/NjdJNpA6yANqoDYcF18lzYjpDcEJN0A8yJTylQiqRSDCBMCrlFUK0RIeN+AwQrgEho9bVZjjyLQ8Qoqug/O+pjPOtN8B+x6TcipMBFekMoREZmv1poLBqeQeyQT0uWHJI16v9BZV+N1DfsMwZvfEjEAzxKBlxm+ti051TN/QjlpeqLtqzacbF+4yRfQqgfr9QolinopJEz9j8/l81bhJR/9CnAxqwRaM5dVEk/bJn3xHoXtfAwTwcH1Il9l0rzywSgfcoQFLQ+xVfKhvfeXTI/lKQeloPpG3m9i/tHOX8sveMAy9J+BEEUKXBgYYOvp7bi1Hd1A1m/ruFsAy6YJHRTmNnTbkIw8DPJkqX65taNm+tZnJrsC++NcuLdkxUL6+fspCy1iSDBpbsmdhTX5VXfWFnJpApUno00SQG1FrbZytADdjEyF+HjUNJSFygxHNWxgyNjgpAMGC+leShENchE9MOTNUfcpMTgolv7Whc46bmBb8uD8W36JOkiG1ZIGcxWyod+NRq/YmgEFTs7lza44TndyBMVeiudZg91mpv0i5xiIFvAXr7tSpnrQKh0VP90ZMetaMWGEge/BVfabx7SETNInzwhF+6jSBnAKNymyiuBiDVkH8NgiwgUl7iny+QxWZ9noW5toM+yTjMQNMnod9vc3Ez1JA0AH+3XLVBUdS+/+116zZm9Lxeonwgm5/ANWHyzNWeCWWHk9IVbOFIdTlRO4rA6J2+q4Q9pLqICrlGDUX0+O+ijXUAiwHupkI0fuwZi4yu/TXJjcPFeMnRQDSYH8dIFa1yOEBoW9VF/LUOiARACzyhYovvIoc7j1OyvCxNavDFuAAak8z683A4UInkVgR3zcqJDFD4urUPdwaIqNauT+JwktSzTKacFPoYYuNqVOGQVCvVb6QtzCtvODmPv9Us9UjWfPLNQewaj22q4JTUMf45G47Z/KUlDKwJi4rxciCGMxfEae5O5axdJcp6RRrm+VakgXBFsFVcXrn9qRhUTCsqMI8sLSL96WuAnEIn9W/s6l58CJf/cvgqtWmDsWfBgRN75n64papUh8WWvmmQXhc5cdQO9xny3JYglfyC2V+OmzW6wau6yPwGAgUjH5BKvxjdS6EqNmlL5mODFG1fBWqLfIb1Imt8X22nDw9AmsLrQ4jdXvj4kBPKFVsfHu9sNzxuL2cUpExeVWMKRbPp3x7iAiuVoxIpoCm7WrnN23kJtAgMBAAGjgYcwgYQwHQYDVR0OBBYEFEmRJxzgNqoxRRcMBb+b8AEEDbCWMB8GA1UdIwQYMBaAFEmRJxzgNqoxRRcMBb+b8AEEDbCWMA8GA1UdEwEB/wQFMAMBAf8wMQYDVR0RBCowKIISbmJudGFuZGEtY2RnLWNkZzAxghJuYm50YW5kYS1jZGctY2RnMDEwDQYJKoZIhvcNAQENBQADggQBAGwu1wOdVO5OjIvcHkSqYzCIh8J0j7pqO0cz62Yr8YUjFJfWDRh58hr0Cp+LhTBYAtcGYIliqNi+TL3ta0NachzXHExWtPwLdQLM0q2NhU/fpV7F9hJ4XQKlpoH3plJAM8rG4tZz1SxGStBn5ilnJjc+b5Ws1CAomsxxV7HMF5AHx96coKoSBBeNvQH7ktR6RV1uwceGRrxIG+NH2RmWWqxiziAM2wzQ3IsFL6k2cVmVf3SoTSHtIEvBwFt/bs/1XFRFsYvlbwK/o/KaFXKO9KAlGspuR9ABcdIThmYDS7p8KBpARiXG3LrUyRHDqiV7NjVi+SWY3v3OaxmsPVMQmCmm/xWr8xw0zX7cNIsDwBWtcG24miQ+KjzW+B7WfyAcQg4HNjSBmXcN0y7H2AXR53YNUGa3MVO3FaYHJKceFZRig4HjeezfdLTEpo/QsXkBQuGn4PlxRXlj82oh9/RaV0STyRoa9eA6nvWue/upt2es3aJzgBIx7QPSWFuR6jBS1542+q5xEh3OZTTsAHgCUqTjL3zfyXiPrpEtZEVlvpreBEHUbXkmmluurejbWpxoajYdrLryAl9nnlux5DpU4pTQEzWdNx2w+ub5Q5yhJWuIi2FnGO7nAhGVFDKvXY2/FPctX3UHkrV5x4yaQVfiv+z4UPMgBygsIdeJY+/YaM/Rk7jq+IY/+6jLl3Vsf4XNMTXEkroiXIHS1TNZX3gV5ThFmX214XfFtwuKnCapwIcUoPpY9h50+YcBZ6GASbfB6r2NM//0Ot/JqOxeYBVfQNGVNA2W8FPePnAYSqML/DT5DA7qg9TNho1V2pwpfIbJO6JLuiP53ROBzS94stjwdpQKZzT5NdwaH81AW4TuXi98YnpMlLpGpF5YGKwDw6kyQxxRbrJQ+xeB55FFfsxdGqkhZJHq5ttS4zJCFJMSYRBTIKWQKOlplwCWLwBGJqB+3W539bBITq48o+O5+83XRSXetf6Omn2x1eYV24nDgd8nZhON2rfjYXalgIivEFaHU2w9/PnupGAgPxdwV4HBmwCRWpGmaZBl+dJHq3Hk5hieQWrPjlQbRdaL2GZivn0YlVLpreMHAjA7K0FoBZ+YfMLqIqm3XRJKLWEiVFyiNoQ80subKJEztj2qRP7C/ZkpjWTCsvm93D9VE6eZlaaoF0I4uX4ipRa5fVGgSbtUpcrHAuv0RFEjPQp+kXdYuU1zmAjfD9N7nGZbDPV0NS+mST2BhoVRgSHO/iQ2DqF9h5Qv9nCW9hIRGPWLEEq0yguCMRcyITMrJ+TEqeKF65UqsBAjR1FvzQKY3inMacu7/yOFzkc0M4+6DT4VXMo/pDIzQ4NKKb6692UIuQ79/cW/VVM='}, 'profile': {'cpu': 20, 'memory': 110, 'nics': 2, 'baseVm': 'BASE_VM_TRUE'}, 'role': 'ASSIGNED', 'adminState': 'AS_UP', 'poolId': '288e2621-174b-4dbe-93a7-fa8426c679f0', 'vdgUuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'profileType': 'VM_PROFILE_EXTENDED'}, 'operationalData': {'operState': 'OS_UP', 'operStateDetails': [{'componentName': 'mdt-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'gnmi-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'cli-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'snmp-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'syslog-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'astack-service', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'aa-exp-tracker', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'robot-astack-influxdb', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'image-manager', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'controller-gateway', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'oam-manager', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'common-pipeline', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'icon', 'state': 'CS_UP', 'imageTag': '7.0.0'}], 'createdTime': '1733290402', 'lastUpdatedTime': '1733290867'}, 'globalParamSyncStatus': True}]</msg>
<arg>${json_response['data']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.315882" elapsed="0.000999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.317889" level="INFO">${MSG} = --Data Gateways--
</msg>
<arg>${MSG}</arg>
<arg>--Data Gateways--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.316881" elapsed="0.001008"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.329434" level="INFO">${cdg} = ['nbntanda-cdg-cdg01']</msg>
<var>${cdg}</var>
<arg>${data}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.317889" elapsed="0.012574"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.330463" level="INFO">${search} = $.version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.330463" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.337963" level="INFO">${values} = ['7.0.0 (branch release700 - build number 19)']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.330463" elapsed="0.007500"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.338980" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.338980" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.338980" elapsed="0.000000"/>
</kw>
<var name="${item}">version</var>
<status status="PASS" start="2024-12-04T20:05:31.330463" elapsed="0.008517"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.339977" level="INFO">${search} = $.adminState</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.339977" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.347994" level="INFO">${values} = ['AS_UP']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.339977" elapsed="0.008017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.347994" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.347994" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.348990" elapsed="0.000000"/>
</kw>
<var name="${item}">adminState</var>
<status status="PASS" start="2024-12-04T20:05:31.339977" elapsed="0.009013"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.348990" level="INFO">${search} = $.profileType</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.348990" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.357610" level="INFO">${values} = ['VM_PROFILE_EXTENDED']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.348990" elapsed="0.008620"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.357610" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.357610" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.357610" elapsed="0.000945"/>
</kw>
<var name="${item}">profileType</var>
<status status="PASS" start="2024-12-04T20:05:31.348990" elapsed="0.009565"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA}</value>
<status status="PASS" start="2024-12-04T20:05:31.330463" elapsed="0.028092"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.358555" level="INFO">${search} = $.cpu</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.358555" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.366794" level="INFO">${values} = [20]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.358555" elapsed="0.008239"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.367816" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.366794" elapsed="0.001022"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.367816" elapsed="0.000000"/>
</kw>
<var name="${item}">cpu</var>
<status status="PASS" start="2024-12-04T20:05:31.358555" elapsed="0.009261"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.367816" level="INFO">${search} = $.memory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.367816" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.376846" level="INFO">${values} = [110]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.367816" elapsed="0.009030"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.376846" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.376846" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.376846" elapsed="0.000000"/>
</kw>
<var name="${item}">memory</var>
<status status="PASS" start="2024-12-04T20:05:31.367816" elapsed="0.009030"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.376846" level="INFO">${search} = $.nics</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.376846" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.385809" level="INFO">${values} = [2]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.376846" elapsed="0.008963"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.386814" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.385809" elapsed="0.001005"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.386814" elapsed="0.000000"/>
</kw>
<var name="${item}">nics</var>
<status status="PASS" start="2024-12-04T20:05:31.376846" elapsed="0.009968"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA_PROFILE}</value>
<status status="PASS" start="2024-12-04T20:05:31.358555" elapsed="0.028259"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.386814" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.386814" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.395612" level="INFO">${values} = ['eth0', 'eth1']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.386814" elapsed="0.008798"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.396566" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.396566" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.396566" elapsed="0.000000"/>
</kw>
<var name="${item}">name</var>
<status status="PASS" start="2024-12-04T20:05:31.386814" elapsed="0.009752"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.396566" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.396566" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.405553" level="INFO">${values} = ['10.67.22.42', '172.16.202.42']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.396566" elapsed="0.008987"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.405553" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.405553" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.405553" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-04T20:05:31.396566" elapsed="0.008987"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.406560" level="INFO">${search} = $..mask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.406560" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.414525" level="INFO">${values} = ['28', '24']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.406560" elapsed="0.007965"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.414525" level="INFO">${MSG} = --Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.414525" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.414525" elapsed="0.000000"/>
</kw>
<var name="${item}">mask</var>
<status status="PASS" start="2024-12-04T20:05:31.405553" elapsed="0.008972"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA_INTERFACES}</value>
<status status="PASS" start="2024-12-04T20:05:31.386814" elapsed="0.027711"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.415529" level="INFO">${search} = $.operState</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.415529" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.424085" level="INFO">${values} = ['OS_UP']</msg>
<var>${values}</var>
<arg>${data['operationalData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.415529" elapsed="0.008556"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.424085" elapsed="0.000000"/>
</kw>
<var name="${item}">operState</var>
<status status="PASS" start="2024-12-04T20:05:31.415529" elapsed="0.008556"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_OPERDATA}</value>
<status status="PASS" start="2024-12-04T20:05:31.414525" elapsed="0.009560"/>
</for>
<var name="${data}">{'duuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'name': 'nbntanda-cdg-cdg01', 'configData': {'description': '821', 'version': '7.0.0 (branch release700 - build number 19)', 'interfaces': [{'name': '...</var>
<status status="PASS" start="2024-12-04T20:05:31.317889" elapsed="0.106196"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-04T20:05:31.317889" elapsed="0.106196"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.424085" level="INFO">${CNC_DATAGW} = ["['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)", "['nbntanda-cdg-cdg01']:adminState:AS_UP", "['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED", "['nbntanda-cdg-cdg0...</msg>
<arg>${CNC_DATAGW}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.424085" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.425078" level="INFO">${CNC_DATAGW_OPER} = ["['nbntanda-cdg-cdg01']:operState:OS_UP"]</msg>
<arg>${CNC_DATAGW_OPER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.425078" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.425078" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Data gateway key configuration from /crosswork/dg-manager/v1/dg/query</doc>
<status status="PASS" start="2024-12-04T20:05:31.250958" elapsed="0.174120"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.425078" level="INFO">Set test message to:
--Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-cdg-cdg01']:cpu:20
['nbntanda-cdg-cdg01']:memory:110
['nbntanda-cdg-cdg01']:nics:2
['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']
['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']
['nbntanda-cdg-cdg01']:mask:['28', '24']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.425078" elapsed="0.000000"/>
</kw>
<doc>Find the Data Gateway hosts and IP</doc>
<tag>DATA-COLLECTION</tag>
<tag>DATA_GATEWAY</tag>
<status status="PASS" start="2024-12-04T20:05:31.248990" elapsed="0.176088">--Data Gateways--
['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-cdg-cdg01']:cpu:20
['nbntanda-cdg-cdg01']:memory:110
['nbntanda-cdg-cdg01']:nics:2
['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']
['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']
['nbntanda-cdg-cdg01']:mask:['28', '24']

</status>
</test>
<test id="s1-t17" name="Retrieve CNC Data Gateway Pools" line="150">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.427099" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.426114" elapsed="0.000985"/>
</kw>
<kw name="get-cnc-cdg-pools" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.427099" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.427099" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.427099" elapsed="0.000975"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">${description} = Retrieve CNC Data Gateway Pools</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">@{CNC_DATAGW_POOL} = [ ]</msg>
<var>@{CNC_DATAGW_POOL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">@{FIELDS_DATA} = [ name ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>name</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">@{FIELDS_VIP} = [ inetAddr | inetAddr | mask | gateway ]</msg>
<var>@{FIELDS_VIP}</var>
<arg>inetAddr</arg>
<arg>inetAddr</arg>
<arg>mask</arg>
<arg>gateway</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">@{FIELDS_VIP_CDG} = [ cpu | memory | nics ]</msg>
<var>@{FIELDS_VIP_CDG}</var>
<arg>cpu</arg>
<arg>memory</arg>
<arg>nics</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">${myurl} = crosswork/dg-manager/v2/vdg/query</msg>
<var>${myurl}</var>
<arg>crosswork/dg-manager/v2/vdg/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.428074" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.428074" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.429080" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.429080" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.491856" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/dg-manager/v2/vdg/query HTTP/11" 200 403</msg>
<msg time="2024-12-04T20:05:31.491856" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/dg-manager/v2/vdg/query 
 path_url=/crosswork/dg-manager/v2/vdg/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-04T20:05:31.491856" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/dg-manager/v2/vdg/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'application/json', 'Content-Length': '403', 'Connection': 'keep-alive', 'Timestamp': '2024-12-04T21:05:18+11:00', 'X-Cxw-Rpc-Status': '0', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"return":{"desc":"IPV4"},"data":[{"name":"pool1-1","vdgUuid":"eb4fda3b-3001-4701-bc00-5d9d93b58cef","pdgUuid":"c94b9547-c353-417f-baef-b8a9628c73d2","virtualIPs":[{"ipaddr":{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"10.67.22.44","mask":"24"},"inetaddrs":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"10.67.22.44","mask":"24"}]}],"poolId":"288e2621-174b-4dbe-93a7-fa8426c679f0"}],"totalCount":1} 
 </msg>
<msg time="2024-12-04T20:05:31.491856" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.491856" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.429080" elapsed="0.062776"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.492873" level="INFO">${json_response} = {'return': {'desc': 'IPV4'}, 'data': [{'name': 'pool1-1', 'vdgUuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'pdgUuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'virtualIPs': [{'ipaddr': {'inetAf': 'RO...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.492873" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.493870" level="INFO">[{'name': 'pool1-1', 'vdgUuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'pdgUuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'virtualIPs': [{'ipaddr': {'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '10.67.22.44', 'mask': '24'}, 'inetaddrs': [{'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '10.67.22.44', 'mask': '24'}]}], 'poolId': '288e2621-174b-4dbe-93a7-fa8426c679f0'}]</msg>
<arg>${json_response['data']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.492873" elapsed="0.000997"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.493870" level="INFO">${MSG} = --Data Gateway Pool(s)--
</msg>
<arg>${MSG}</arg>
<arg>--Data Gateway Pool(s)--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.493870" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.501921" level="INFO">${cdg} = ['pool1-1']</msg>
<var>${cdg}</var>
<arg>${data}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.493870" elapsed="0.008051"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.503455" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.501921" elapsed="0.001534"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.511991" level="INFO">${values} = ['10.67.22.44', '10.67.22.44']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.503455" elapsed="0.008536"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.511991" level="INFO">${MSG} = --Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.511991" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.511991" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-04T20:05:31.501921" elapsed="0.010070"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.511991" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.511991" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.519986" level="INFO">${values} = ['10.67.22.44', '10.67.22.44']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.511991" elapsed="0.007995"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.519986" level="INFO">${MSG} = --Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.519986" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.519986" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-04T20:05:31.511991" elapsed="0.007995"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.519986" level="INFO">${search} = $..mask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.519986" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.528456" level="INFO">${values} = ['24', '24']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.519986" elapsed="0.008470"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.528456" level="INFO">${MSG} = --Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.528456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.529451" elapsed="0.000000"/>
</kw>
<var name="${item}">mask</var>
<status status="PASS" start="2024-12-04T20:05:31.519986" elapsed="0.009465"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.529451" level="INFO">${search} = $..gateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.529451" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.537455" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.529451" elapsed="0.008004"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.537455" level="INFO">${MSG} = --Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
['pool1-1']:gateway:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.537455" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.537969" elapsed="0.000000"/>
</kw>
<var name="${item}">gateway</var>
<status status="PASS" start="2024-12-04T20:05:31.529451" elapsed="0.008518"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_VIP}</value>
<status status="PASS" start="2024-12-04T20:05:31.501921" elapsed="0.036048"/>
</for>
<var name="${data}">{'name': 'pool1-1', 'vdgUuid': 'eb4fda3b-3001-4701-bc00-5d9d93b58cef', 'pdgUuid': 'c94b9547-c353-417f-baef-b8a9628c73d2', 'virtualIPs': [{'ipaddr': {'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '1...</var>
<status status="PASS" start="2024-12-04T20:05:31.493870" elapsed="0.044099"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-04T20:05:31.493870" elapsed="0.044099"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.537969" level="INFO">${CNC_DATAGW_POOL} = ["['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']", "['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']", "['pool1-1']:mask:['24', '24']", "['pool1-1']:gateway:[]"]</msg>
<arg>${CNC_DATAGW_POOL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.537969" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.537969" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Data gateway pool key configuration from /crosswork/dg-manager/v2/vdg/query</doc>
<status status="PASS" start="2024-12-04T20:05:31.427099" elapsed="0.110870"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.538723" level="INFO">Set test message to:
--Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
['pool1-1']:gateway:[]

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.538723" elapsed="0.000000"/>
</kw>
<doc>Find Data Gateway Pool information</doc>
<tag>DATA-COLLECTION</tag>
<tag>DATA_GATEWAY</tag>
<status status="PASS" start="2024-12-04T20:05:31.426114" elapsed="0.112609">--Data Gateway Pool(s)--
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
['pool1-1']:gateway:[]

</status>
</test>
<test id="s1-t18" name="Retrieve CNC Syslog Destinations" line="157">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.540791" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.539747" elapsed="0.001044"/>
</kw>
<kw name="get-syslog-dest" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.540791" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.540791" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.540791" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.540791" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.540791" elapsed="0.000997"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.541788" level="INFO">${description} = Retrieve CNC Syslog Destinations</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.541788" level="INFO">@{CNC_SYSLOG_DEST} = [ ]</msg>
<var>@{CNC_SYSLOG_DEST}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.541788" level="INFO">${myurl} = /crosswork/alarms/v1/syslog-dest/query</msg>
<var>${myurl}</var>
<arg>/crosswork/alarms/v1/syslog-dest/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.541788" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.541788" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.608462" level="DEBUG">https://10.67.22.45:30603 "POST /crosswork/alarms/v1/syslog-dest/query HTTP/11" 200 11</msg>
<msg time="2024-12-04T20:05:31.608462" level="INFO">POST Request : url=https://10.67.22.45:30603/crosswork/alarms/v1/syslog-dest/query 
 path_url=/crosswork/alarms/v1/syslog-dest/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-04T20:05:31.608462" level="INFO">POST Response : url=https://10.67.22.45:30603/crosswork/alarms/v1/syslog-dest/query 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '11', 'Connection': 'keep-alive', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"data":[]} 
 </msg>
<msg time="2024-12-04T20:05:31.609445" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.609445" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.541788" elapsed="0.067657"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.609445" level="INFO">${json_response} = {'data': []}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.609445" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\n${item['host']}:${item['port']}:${item['criteria']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.609445" elapsed="0.000988"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSLOG_DEST}</arg>
<arg>${item['host']}:${item['port']}:${item['criteria']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.610433" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:31.609445" elapsed="0.000988"/>
</iter>
<var>${item}</var>
<value>@{json_response['data']}</value>
<status status="NOT RUN" start="2024-12-04T20:05:31.609445" elapsed="0.000988"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.610433" level="INFO">${CNC_SYSLOG_DEST} = []</msg>
<arg>${CNC_SYSLOG_DEST}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.610433" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.610433" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active SYSLOG configuration information from /crosswork/alarms/v1/syslog-dest/query</doc>
<status status="PASS" start="2024-12-04T20:05:31.540791" elapsed="0.069642"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.610433" level="INFO">Set test message to:

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.610433" elapsed="0.000000"/>
</kw>
<doc>Find all the remote syslog destinations</doc>
<tag>DATA-COLLECTION</tag>
<tag>SYSLOG</tag>
<status status="PASS" start="2024-12-04T20:05:31.539747" elapsed="0.070686">
</status>
</test>
<test id="s1-t19" name="Retrieve CNC Entitlements" line="164">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.611455" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.611455" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-entitlement" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.612459" level="INFO">${myurl} = /crosswork/clms/v1/onboard-list</msg>
<var>${myurl}</var>
<arg>/crosswork/clms/v1/onboard-list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.611455" elapsed="0.001004"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.612459" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.612459" level="INFO">@{CNC_ENTITLEMENTS} = [ ]</msg>
<var>@{CNC_ENTITLEMENTS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.612459" level="INFO">@{FIELDS} = [ name | version ]</msg>
<var>@{FIELDS}</var>
<arg>name</arg>
<arg>version</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.612459" level="INFO">${description} = Retrieve CNC Entitlements</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.688157" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/clms/v1/onboard-list HTTP/11" 200 None</msg>
<msg time="2024-12-04T20:05:31.688157" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/clms/v1/onboard-list 
 path_url=/crosswork/clms/v1/onboard-list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:31.688157" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/clms/v1/onboard-list 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:18 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body=[{"product_id":"CAHISW","display_name":"Health Insights and Change Automation","entitlements":[{"name":"NTWAUTO_RTM","version":"1.0"},{"name":"CNC_CAHI_RTU","version":"1.0"}]},{"product_id":"OPTIMA","display_name":"Crosswork Optimization Engine","entitlements":[{"name":"OPTM-RTM-ESS","version":"1.0"},{"name":"OPTM-RTU-FP-BW","version":"1.0"},{"name":"OPTM-RTM-ADV","version":"1.0"},{"name":"OPTM-RTU-SVR","version":"1.0"}]},{"product_id":"CNC","display_name":"Crosswork Network Controller","entitlements":[{"name":"CNC_RTU","version":"1.0"},{"name":"CNC_GEO_RTU","version":"1.0"},{"name":"CNC-ERTM-SMALL","version":"1.0"},{"name":"CNC_ARTM_SMALL","version":"1.0"},{"name":"CW_EXTERNAL_COLLECT","version":"1.0"},{"name":"NTWAUTO_RTM","version":"1.0"},{"name":"CNC_CAHI_RTU","version":"1.0"}]},{"product_id":"CW_INFRA","display_name":"Crosswork Platform Services","entitlements":[{"name":"CW_EXTERNAL_COLLECT","version":"1.0"}]}] 
 </msg>
<msg time="2024-12-04T20:05:31.688157" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.688157" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.612459" elapsed="0.075698"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.689305" level="INFO">${json_response} = [{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}, {'product_i...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.689305" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.689305" level="INFO">${MSG} = --CNC Entitlements--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Entitlements--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.689305" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.690316" level="INFO">${entitlement} = Health Insights and Change Automation</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.689305" elapsed="0.001011"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.690316" level="INFO">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.690316" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.690316" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.690316" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.701179" level="INFO">${data} = ['NTWAUTO_RTM', 'CNC_CAHI_RTU']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.690316" elapsed="0.010863"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.701179" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-04T20:05:31.690316" elapsed="0.010863"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.701179" level="INFO">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.701179" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.709970" level="INFO">${data} = ['1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.008791"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.709970" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.709970" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.709970" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-04T20:05:31.701179" elapsed="0.008791"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:31.690316" elapsed="0.019654"/>
</for>
<var name="${item}">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</var>
<status status="PASS" start="2024-12-04T20:05:31.689305" elapsed="0.020665"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.711113" level="INFO">${entitlement} = Crosswork Optimization Engine</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.711113" level="INFO">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-ADV', 'version': '1.0'}, {'name': 'OPTM-RTU-SVR', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.711113" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.719105" level="INFO">${data} = ['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.007992"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.719105" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.719105" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.719105" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.007992"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.719105" level="INFO">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-ADV', 'version': '1.0'}, {'name': 'OPTM-RTU-SVR', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.719105" elapsed="0.001002"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.720107" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.720107" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.728412" level="INFO">${data} = ['1.0', '1.0', '1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.720107" elapsed="0.008305"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.728412" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.728412" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.728412" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-04T20:05:31.719105" elapsed="0.009307"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.017299"/>
</for>
<var name="${item}">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-...</var>
<status status="PASS" start="2024-12-04T20:05:31.711113" elapsed="0.017299"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.729405" level="INFO">${entitlement} = Crosswork Network Controller</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.728412" elapsed="0.000993"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.729405" level="INFO">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'version': '1.0'}, {'name': 'CNC_ARTM_SMALL', 'version': '1.0'}, {'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}, {'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.729405" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.729916" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.729916" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.737440" level="INFO">${data} = ['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.729916" elapsed="0.007524"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.737440" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.737440" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.737440" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-04T20:05:31.729405" elapsed="0.008035"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.737440" level="INFO">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'version': '1.0'}, {'name': 'CNC_ARTM_SMALL', 'version': '1.0'}, {'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}, {'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.737440" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.738501" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.737440" elapsed="0.001061"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.746559" level="INFO">${data} = ['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.738501" elapsed="0.008058"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.746559" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.746559" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.746559" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-04T20:05:31.737440" elapsed="0.009119"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:31.729405" elapsed="0.018117"/>
</for>
<var name="${item}">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'ver...</var>
<status status="PASS" start="2024-12-04T20:05:31.728412" elapsed="0.019110"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.747522" level="INFO">${entitlement} = Crosswork Platform Services</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.747522" level="INFO">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.747522" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.757045" level="INFO">${data} = ['CW_EXTERNAL_COLLECT']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.009523"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.757045" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.757045" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.757045" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.009523"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.757045" level="INFO">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:31.757045" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.758044" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.758044" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-04T20:05:31.766416" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-04T20:05:31.758044" elapsed="0.008372"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.766416" level="INFO">${MSG} = --CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.766416" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.766416" elapsed="0.001040"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-04T20:05:31.757045" elapsed="0.010411"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.019934"/>
</for>
<var name="${item}">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</var>
<status status="PASS" start="2024-12-04T20:05:31.747522" elapsed="0.019934"/>
</iter>
<var>${item}</var>
<value>@{json_response}</value>
<status status="PASS" start="2024-12-04T20:05:31.689305" elapsed="0.078151"/>
</for>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.767456" level="INFO">${CNC_ENTITLEMENTS} = ["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPT...</msg>
<arg>${CNC_ENTITLEMENTS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.767456" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.767456" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Entitlements</doc>
<status status="PASS" start="2024-12-04T20:05:31.611455" elapsed="0.156001"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.767456" level="INFO">Set test message to:
--CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.767456" elapsed="0.000000"/>
</kw>
<doc>Find CNC Entitlements and RTM</doc>
<tag>DATA-COLLECTION</tag>
<tag>LICENSING</tag>
<status status="PASS" start="2024-12-04T20:05:31.610433" elapsed="0.157023">--CNC Entitlements--
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']

</status>
</test>
<test id="s1-t20" name="Retrieve CNC Software Images" line="171">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.768440" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.768440" elapsed="0.000000"/>
</kw>
<kw name="get-swim-images-v2" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.769953" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.768440" elapsed="0.001513"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.770049" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.770049" level="INFO">${description} = Retrieve CNC Software Images</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.770049" level="INFO">@{CNC_SWIM_IMAGES} = [ ]</msg>
<var>@{CNC_SWIM_IMAGES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.770049" level="INFO">${myurl} = /crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/</msg>
<var>${myurl}</var>
<arg>/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.771247" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.770049" elapsed="0.001198"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.771247" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.771247" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:31.858568" level="DEBUG">https://10.67.22.45:30603 "GET /crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ HTTP/11" 206 None</msg>
<msg time="2024-12-04T20:05:31.859565" level="INFO">GET Request : url=https://10.67.22.45:30603/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 path_url=/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-04T20:05:31.859565" level="INFO">GET Response : url=https://10.67.22.45:30603/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 status=206, reason=Partial Content 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:19 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Range': 'items=0-0/0', 'Pragma': 'must-revalidate', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body={"softwareImageListDTO":{"id":"imageId","totalCount":0}} 
 </msg>
<msg time="2024-12-04T20:05:31.859565" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:31.859565" level="INFO">${response} = &lt;Response [206]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=206</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:31.771247" elapsed="0.088318"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.859565" level="INFO">${json_response} = {'softwareImageListDTO': {'id': 'imageId', 'totalCount': 0}}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-04T20:05:31.859565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.859565" level="INFO">@{CNC_SWIM_IMAGES} = [ ]</msg>
<var>@{CNC_SWIM_IMAGES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.859565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.859565" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.859565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.859565" level="INFO">@{FIELDS} = [ name | imageName | version | family | vendor | imagePlatform ]</msg>
<var>@{FIELDS}</var>
<arg>name</arg>
<arg>imageName</arg>
<arg>version</arg>
<arg>family</arg>
<arg>vendor</arg>
<arg>imagePlatform</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.859565" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.860566" level="INFO">${MSG} = --CNC Images--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Images--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.860566" level="INFO">${count} = 0</msg>
<var>${count}</var>
<arg>${json_response['softwareImageListDTO']['totalCount']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SWIM_IMAGES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</for>
<var name="${data}"/>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</iter>
<var>${data}</var>
<value>@{json_response['softwareImageListDTO']['items']}</value>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</for>
<status status="NOT RUN" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.861560" level="INFO">${MSG} = --CNC Images--
Image Count:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}Image Count:${count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.860566" elapsed="0.000994"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.861560" level="INFO">${CNC_SWIM_IMAGES} = []</msg>
<arg>${CNC_SWIM_IMAGES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.861560" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC SWIM/Image info from /crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository</doc>
<status status="PASS" start="2024-12-04T20:05:31.768440" elapsed="0.093120"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.861560" level="INFO">Set test message to:
--CNC Images--
Image Count:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.861560" elapsed="0.000000"/>
</kw>
<doc>Find Software Images (SWIM)</doc>
<tag>DATA-COLLECTION</tag>
<tag>SWIM</tag>
<status status="PASS" start="2024-12-04T20:05:31.768440" elapsed="0.093120">--CNC Images--
Image Count:0
</status>
</test>
<test id="s1-t21" name="Validate CNC Data Gateway" line="178">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.862562" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.862562" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-cdg" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.863559" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.863559" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.863559" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.863559" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.863559" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.863559" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.864778" level="INFO">${LoadData} = ['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-cdg-cdg01']:cpu:20
...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.001219"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.001219"/>
</kw>
<msg time="2024-12-04T20:05:31.864778" level="INFO">${RESP} = ('PASS', "['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)\n['nbntanda-cdg-cdg01']:adminState:AS_UP\n['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED\n['nbntanda-cdg-cd...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.001219"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.864778" level="INFO">${MSG} = --Validate CDG--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.864778" level="INFO">${appsVALID} = ['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
['nbntanda-cdg-cdg01']:adminState:AS_UP
['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
['nbntanda-cdg-cdg01']:cpu:20
...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.864778" level="INFO">9 lines returned</msg>
<msg time="2024-12-04T20:05:31.864778" level="INFO">@{appsVALID} = [ ['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19) | ['nbntanda-cdg-cdg01']:adminState:AS_UP | ['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED | ['nbntanda-cdg-cdg01']...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.865791" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.865791" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.866796" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.001005"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)</var>
<status status="PASS" start="2024-12-04T20:05:31.865791" elapsed="0.001005"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.866796" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.866796" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.867791" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000995"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:adminState:AS_UP</var>
<status status="PASS" start="2024-12-04T20:05:31.866796" elapsed="0.000995"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.867791" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.867791" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.868788" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000997"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED</var>
<status status="PASS" start="2024-12-04T20:05:31.867791" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.868788" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.868788" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.868788" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:cpu:20</var>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.868788" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.868788" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.868788" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:memory:110</var>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.870303" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.870303" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.870303" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:nics:2</var>
<status status="PASS" start="2024-12-04T20:05:31.868788" elapsed="0.001515"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.870303" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.871386" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.001083"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.871386" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']</var>
<status status="PASS" start="2024-12-04T20:05:31.870303" elapsed="0.001083"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.871386" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.871386" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.872401" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']</var>
<status status="PASS" start="2024-12-04T20:05:31.871386" elapsed="0.001015"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.872401" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.872401" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.872401" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:mask:['28', '24']</var>
<status status="PASS" start="2024-12-04T20:05:31.872401" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.007623"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.007623"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.864778" elapsed="0.007623"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.873401" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.873401" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.873401" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.873401" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.873401" level="INFO">List length is 9 and it contains following items:
0: PASS:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19):App found in validation list, but not in system
1: PASS:['nbntanda-cdg-cdg01']:adminState:AS_UP:App found in validation list, but not in system
2: PASS:['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED:App found in validation list, but not in system
3: PASS:['nbntanda-cdg-cdg01']:cpu:20:App found in validation list, but not in system
4: PASS:['nbntanda-cdg-cdg01']:memory:110:App found in validation list, but not in system
5: PASS:['nbntanda-cdg-cdg01']:nics:2:App found in validation list, but not in system
6: PASS:['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']:App found in validation list, but not in system
7: PASS:['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']:App found in validation list, but not in system
8: PASS:['nbntanda-cdg-cdg01']:mask:['28', '24']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.873401" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.873401" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.873401" level="INFO">${MSG} = --Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.873401" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.873401" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway configuration based on the suite variable of ``CNC_DATAGW``</doc>
<status status="PASS" start="2024-12-04T20:05:31.863559" elapsed="0.009842"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.874402" level="INFO">Set test message to:
--Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:cpu:20
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:memory:110
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:nics:2
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:mask:['28', '24']

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.874402" elapsed="0.000000"/>
</kw>
<doc>Validate the configured DGW is correct as per file spec [cnc-cdg.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.862562" elapsed="0.011840">--Validate CDG--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:version:7.0.0 (branch release700 - build number 19)
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:adminState:AS_UP
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:profileType:VM_PROFILE_EXTENDED
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:cpu:20
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:memory:110
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:nics:2
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:name:['eth0', 'eth1']
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:inetAddr:['10.67.22.42', '172.16.202.42']
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:mask:['28', '24']

All tests passed. Failures:0
</status>
</test>
<test id="s1-t22" name="Validate CNC Data Gateway Pools" line="185">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.875402" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.875402" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-cdg-pools" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.876408" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.876408" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.876408" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.876408" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.877495" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.001087"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.877495" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg-pools.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg-pools.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.877495" level="INFO">${LoadData} = ['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
['pool1-1']:gateway:[]
</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-pools.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.877495" level="INFO">${RESP} = ('PASS', "['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']\n['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']\n['pool1-1']:mask:['24', '24']\n['pool1-1']:gateway:[]\n")</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-pools.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.877495" level="INFO">${MSG} = --Validate CDG Pools--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG Pools--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.877495" level="INFO">${appsVALID} = ['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
['pool1-1']:mask:['24', '24']
['pool1-1']:gateway:[]
</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.877495" level="INFO">4 lines returned</msg>
<msg time="2024-12-04T20:05:31.877495" level="INFO">@{appsVALID} = [ ['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44'] | ['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44'] | ['pool1-1']:mask:['24', '24'] | ['pool1-1']:gateway:[] ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.878827" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.878827" level="INFO">${MSG} = --Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.878827" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<var name="${item}">['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']</var>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.878827" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.880106" level="INFO">${MSG} = --Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.880106" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<var name="${item}">['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']</var>
<status status="PASS" start="2024-12-04T20:05:31.878827" elapsed="0.001279"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.880106" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.880106" level="INFO">${MSG} = --Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:mask:['24', '24'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.881119" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<var name="${item}">['pool1-1']:mask:['24', '24']</var>
<status status="PASS" start="2024-12-04T20:05:31.880106" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.881119" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.881119" level="INFO">${MSG} = --Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:mask:['24', '24'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.882120" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.001001"/>
</kw>
<var name="${item}">['pool1-1']:gateway:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.881119" elapsed="0.001001"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.004625"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.004625"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.877495" elapsed="0.004625"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.882120" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.882120" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.882120" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.882120" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.882120" level="INFO">List length is 4 and it contains following items:
0: PASS:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']:App found in validation list, but not in system
1: PASS:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']:App found in validation list, but not in system
2: PASS:['pool1-1']:mask:['24', '24']:App found in validation list, but not in system
3: PASS:['pool1-1']:gateway:[]:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.882120" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.882120" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.882120" level="INFO">${MSG} = --Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:mask:['24', '24'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.882120" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.883122" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway pool configuration based on the suite variable of ``CNC_DATAGW_POOL``</doc>
<status status="PASS" start="2024-12-04T20:05:31.876408" elapsed="0.006714"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.883122" level="INFO">Set test message to:
--Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:mask:['24', '24']
PASS: [nbnlab]:['pool1-1']:gateway:[]

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.883122" elapsed="0.000000"/>
</kw>
<doc>Validate the configured CDG Pool is correct as per file spec [cnc-cdg-pools.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.875402" elapsed="0.007720">--Validate CDG Pools--
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:inetAddr:['10.67.22.44', '10.67.22.44']
PASS: [nbnlab]:['pool1-1']:mask:['24', '24']
PASS: [nbnlab]:['pool1-1']:gateway:[]

All tests passed. Failures:0
</status>
</test>
<test id="s1-t23" name="Validate CNC Entitlements" line="192">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.884116" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.883122" elapsed="0.000994"/>
</kw>
<kw name="validate-cnc-entitlement" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.884116" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.884116" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.884116" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.884116" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.885218" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.884116" elapsed="0.001102"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.885218" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885218" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.885218" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-entitlements.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-entitlements.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.885727" level="INFO">${LoadData} = Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CN...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885218" elapsed="0.000509"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-entitlements.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.885218" elapsed="0.000509"/>
</kw>
<msg time="2024-12-04T20:05:31.885727" level="INFO">${RESP} = ('PASS', "Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']\nHealth Insights and Change Automation|version:['1.0', '1.0']\nCrosswork Network Controller|name:['CNC_RTU', 'CNC_G...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-entitlements.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885218" elapsed="0.000509"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.885727" level="INFO">${MSG} = --Validate CNC Entitlements--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Entitlements--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.885727" level="INFO">${appsVALID} = Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CN...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.885727" level="INFO">8 lines returned</msg>
<msg time="2024-12-04T20:05:31.885727" level="INFO">@{appsVALID} = [ Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Health Insights and Change Automation|version:['1.0', '1.0'] | Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.886740" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.001013"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.886740" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.886740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.886740" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.887252" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.886740" elapsed="0.000512"/>
</kw>
<var name="${item}">Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.001525"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.887252" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.887252" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.887252" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</kw>
<var name="${item}">Health Insights and Change Automation|version:['1.0', '1.0']</var>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.888444" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.888444" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.888444" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-04T20:05:31.887252" elapsed="0.001192"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.889460" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.889460" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.889460" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-04T20:05:31.888444" elapsed="0.001016"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.889460" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.889460" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.001094"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.890554" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']</var>
<status status="PASS" start="2024-12-04T20:05:31.889460" elapsed="0.001094"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.890554" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.890554" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.891508" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000954"/>
</kw>
<var name="${item}">Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-04T20:05:31.890554" elapsed="0.000954"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.891508" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.891508" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.891508" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']</var>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.892492" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000984"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.892492" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.892492" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Platform Services|version:['1.0']</var>
<status status="PASS" start="2024-12-04T20:05:31.891508" elapsed="0.000984"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.006765"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.006765"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.885727" elapsed="0.006765"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-04T20:05:31.892492" level="FAIL">[ Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Health Insights and Change Automation|version:['1.0', '1.0'] | Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0'] | Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR'] | Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0'] | Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT'] | Crosswork Platform Services|version:['1.0'] ] does not contain value '["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"]'.</msg>
<msg time="2024-12-04T20:05:31.892492" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: [ Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Health Insights and Change Automation|version:['1.0', '1.0'] | Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0'] | Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR'] | Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0'] | Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT'] | Crosswork Platform Services|version:['1.0'] ] does not contain value '["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"]'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-04T20:05:31.892492" elapsed="0.000000">[ Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Health Insights and Change Automation|version:['1.0', '1.0'] | Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU'] | Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0'] | Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR'] | Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0'] | Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT'] | Crosswork Platform Services|version:['1.0'] ] does not contain value '["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"]'.</status>
</kw>
<msg time="2024-12-04T20:05:31.892492" level="INFO">${RESP} = ('FAIL', '[ Health Insights and Change Automation|name:[\'NTWAUTO_RTM\', \'CNC_CAHI_RTU\'] | Health Insights and Change Automation|version:[\'1.0\', \'1.0\'] | Crosswork Network Controller|name:[\'CNC...</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.893458" level="INFO">${MSG} = --Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Not in valid list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</if>
<var name="${item}">["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPT...</var>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000966"/>
</iter>
<var>${item}</var>
<value>${CNC_ENTITLEMENTS}</value>
<status status="PASS" start="2024-12-04T20:05:31.892492" elapsed="0.000966"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.893458" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.893458" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.893458" level="INFO">Length is 1.</msg>
<msg time="2024-12-04T20:05:31.893458" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.893458" level="INFO">List length is 8 and it contains following items:
0: PASS:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']:App found in validation list, but not in system
1: PASS:Health Insights and Change Automation|version:['1.0', '1.0']:App found in validation list, but not in system
2: PASS:Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']:App found in validation list, but not in system
3: PASS:Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']:App found in validation list, but not in system
4: PASS:Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']:App found in validation list, but not in system
5: PASS:Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']:App found in validation list, but not in system
6: PASS:Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']:App found in validation list, but not in system
7: PASS:Crosswork Platform Services|version:['1.0']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.893458" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.894488" level="INFO">List has one item:
FAIL:["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"]</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.893458" elapsed="0.001030"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.894488" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.894488" level="INFO">Execution passed with message:
There are applications running that are not in the valid list.</msg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:31.894488" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.894488" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.894488" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the CNC entitlements based on the suite variable of ``CNC_ENTITLEMENTS``</doc>
<status status="PASS" start="2024-12-04T20:05:31.884116" elapsed="0.010372">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.895465" level="INFO">Set test message to:
--Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS: [nbnlab]:Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
PASS: [nbnlab]:Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
PASS: [nbnlab]:Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
PASS: [nbnlab]:Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
PASS: [nbnlab]:Crosswork Platform Services|version:['1.0']
WARN: ["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"] Not in valid list.

There are applications running that are not in the valid list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.895465" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Entitlements and RTM as per file spec [cnc-entitlements.txt]</doc>
<tag>LICENSING</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.883122" elapsed="0.012343">--Validate CNC Entitlements--
PASS: [nbnlab]:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Health Insights and Change Automation|version:['1.0', '1.0']
PASS: [nbnlab]:Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
PASS: [nbnlab]:Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
PASS: [nbnlab]:Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
PASS: [nbnlab]:Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
PASS: [nbnlab]:Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
PASS: [nbnlab]:Crosswork Platform Services|version:['1.0']
WARN: ["Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Health Insights and Change Automation|version:['1.0', '1.0']", "Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']", "Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']", "Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']", "Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']", "Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']"] Not in valid list.

There are applications running that are not in the valid list.</status>
</test>
<test id="s1-t24" name="Validate CNC Data Gateway Health" line="199">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.897461" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.896462" elapsed="0.000999"/>
</kw>
<kw name="validate-cnc-cdg-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.897461" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.897461" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.898460" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.897461" elapsed="0.000999"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.898460" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.898460" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.898460" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.898460" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg-health.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-cdg-health.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.898460" level="INFO">${LoadData} = ['nbntanda-cdg-cdg01']:operState:OS_UP</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-health.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.898460" level="INFO">${RESP} = ('PASS', "['nbntanda-cdg-cdg01']:operState:OS_UP")</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-health.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.898460" level="INFO">${MSG} = --Validate CDG Health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.898460" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.899814" level="INFO">${appsVALID} = ['nbntanda-cdg-cdg01']:operState:OS_UP</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.899814" level="INFO">1 lines returned</msg>
<msg time="2024-12-04T20:05:31.899814" level="INFO">@{appsVALID} = [ ['nbntanda-cdg-cdg01']:operState:OS_UP ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.899814" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.899814" level="INFO">${MSG} = --Validate CDG Health--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:operState:OS_UP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.900833" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<var name="${item}">['nbntanda-cdg-cdg01']:operState:OS_UP</var>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.001019"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.001019"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.001019"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.899814" elapsed="0.001019"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.900833" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.900833" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.900833" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.900833" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.900833" level="INFO">List has one item:
PASS:['nbntanda-cdg-cdg01']:operState:OS_UP:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.900833" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.900833" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.901826" level="INFO">${MSG} = --Validate CDG Health--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:operState:OS_UP

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.900833" elapsed="0.000993"/>
</kw>
<msg time="2024-12-04T20:05:31.901826" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway health on the suite variable of ``CNC_DATAGW_OPER``</doc>
<status status="PASS" start="2024-12-04T20:05:31.897461" elapsed="0.004365"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.901826" level="INFO">Set test message to:
--Validate CDG Health--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:operState:OS_UP

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.901826" elapsed="0.000000"/>
</kw>
<doc>Validate the operational state of the CDG(s) as per file spec [cnc-cdg-health.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.896462" elapsed="0.005364">--Validate CDG Health--
PASS: [nbnlab]:['nbntanda-cdg-cdg01']:operState:OS_UP

All tests passed. Failures:0
</status>
</test>
<test id="s1-t25" name="Validate Platform Summary" line="206">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.903341" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.901826" elapsed="0.001515"/>
</kw>
<kw name="validate-cnc-platform" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.903341" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.903341" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.903341" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.903341" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.903341" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.903341" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.903341" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.903341" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.904754" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-platform.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-platform.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.904754" level="INFO">${LoadData} = SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:[]
DNS:[]
RamDiskSize:[...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-platform.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.904754" level="INFO">${RESP} = ('PASS', 'SchemaVersion:[]\nCNC_VM_Image:[]\nClusterIPStack:[]\nManagementVIP:[]\nManagementIPNetmask:[]\nManagementIPGateway:[]\nDataVIP:[]\nDataIPNetmask:[]\nDataIPGateway:[]\nDomainName:[]\nNTP:[]\...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-platform.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.904754" level="INFO">${MSG} = --Validate CNC Platform--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Platform--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.905768" level="INFO">${appsVALID} = SchemaVersion:[]
CNC_VM_Image:[]
ClusterIPStack:[]
ManagementVIP:[]
ManagementIPNetmask:[]
ManagementIPGateway:[]
DataVIP:[]
DataIPNetmask:[]
DataIPGateway:[]
DomainName:[]
NTP:[]
DNS:[]
RamDiskSize:[...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.001014"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.905768" level="INFO">15 lines returned</msg>
<msg time="2024-12-04T20:05:31.905768" level="INFO">@{appsVALID} = [ SchemaVersion:[] | CNC_VM_Image:[] | ClusterIPStack:[] | ManagementVIP:[] | ManagementIPNetmask:[] | ManagementIPGateway:[] | DataVIP:[] | DataIPNetmask:[] | DataIPGateway:[] | DomainName:[] | NTP:[...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.905768" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.905768" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.905768" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</kw>
<var name="${item}">SchemaVersion:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.906768" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.906768" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.906768" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<var name="${item}">CNC_VM_Image:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.906768" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.907770" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.907770" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<var name="${item}">ClusterIPStack:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.906768" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.907770" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.907770" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.908769" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementVIP:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.907770" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.908769" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.908769" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.908769" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPNetmask:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.923740" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.923740" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.014971"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.923740" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.923740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.924745" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPGateway:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.908769" elapsed="0.015976"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.924745" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.924745" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.925753" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.001008"/>
</kw>
<var name="${item}">DataVIP:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.924745" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.925753" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.925753" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.925753" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000992"/>
</kw>
<var name="${item}">DataIPNetmask:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.925753" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.926745" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.926745" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.926745" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPGateway:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.927745" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.927745" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.927745" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<var name="${item}">DomainName:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.926745" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.927745" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.928766" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.928766" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.000000"/>
</kw>
<var name="${item}">NTP:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.927745" elapsed="0.001021"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.928766" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.929769" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.001003"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.929769" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<var name="${item}">DNS:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.928766" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.929769" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.929769" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.929769" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000996"/>
</kw>
<var name="${item}">RamDiskSize:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.929769" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.930765" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.930765" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.930765" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<var name="${item}">ThinProvisioned:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.931767" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.001002"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.931767" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.931767" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.000000"/>
</kw>
<var name="${item}">Timezone:[]</var>
<status status="PASS" start="2024-12-04T20:05:31.930765" elapsed="0.001002"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.905768" elapsed="0.025999"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.027013"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.904754" elapsed="0.027013"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-04T20:05:31.931767" level="FAIL">[ SchemaVersion:[] | CNC_VM_Image:[] | ClusterIPStack:[] | ManagementVIP:[] | ManagementIPNetmask:[] | ManagementIPGateway:[] | DataVIP:[] | DataIPNetmask:[] | DataIPGateway:[] | DomainName:[] | NTP:[] | DNS:[] | RamDiskSize:[] | ThinProvisioned:[] | Timezone:[] ] does not contain value '['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]']'.</msg>
<msg time="2024-12-04T20:05:31.931767" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: [ SchemaVersion:[] | CNC_VM_Image:[] | ClusterIPStack:[] | ManagementVIP:[] | ManagementIPNetmask:[] | ManagementIPGateway:[] | DataVIP:[] | DataIPNetmask:[] | DataIPGateway:[] | DomainName:[] | NTP:[] | DNS:[] | RamDiskSize:[] | ThinProvisioned:[] | Timezone:[] ] does not contain value '['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]']'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-04T20:05:31.931767" elapsed="0.000000">[ SchemaVersion:[] | CNC_VM_Image:[] | ClusterIPStack:[] | ManagementVIP:[] | ManagementIPNetmask:[] | ManagementIPGateway:[] | DataVIP:[] | DataIPNetmask:[] | DataIPGateway:[] | DomainName:[] | NTP:[] | DNS:[] | RamDiskSize:[] | ThinProvisioned:[] | Timezone:[] ] does not contain value '['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]']'.</status>
</kw>
<msg time="2024-12-04T20:05:31.931767" level="INFO">${RESP} = ('FAIL', "[ SchemaVersion:[] | CNC_VM_Image:[] | ClusterIPStack:[] | ManagementVIP:[] | ManagementIPNetmask:[] | ManagementIPGateway:[] | DataVIP:[] | DataIPNetmask:[] | DataIPGateway:[] | DomainName:...</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.932834" level="INFO">${MSG} = --Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [n...</msg>
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Not in valid list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.001067"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.001067"/>
</if>
<var name="${item}">['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[...</var>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.001067"/>
</iter>
<var>${item}</var>
<value>${CNC_PLATFORM}</value>
<status status="PASS" start="2024-12-04T20:05:31.931767" elapsed="0.001067"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.932834" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.932834" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.932834" level="INFO">Length is 1.</msg>
<msg time="2024-12-04T20:05:31.932834" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.932834" level="INFO">List length is 15 and it contains following items:
0: PASS:SchemaVersion:[]:App found in validation list, but not in system
1: PASS:CNC_VM_Image:[]:App found in validation list, but not in system
2: PASS:ClusterIPStack:[]:App found in validation list, but not in system
3: PASS:ManagementVIP:[]:App found in validation list, but not in system
4: PASS:ManagementIPNetmask:[]:App found in validation list, but not in system
5: PASS:ManagementIPGateway:[]:App found in validation list, but not in system
6: PASS:DataVIP:[]:App found in validation list, but not in system
7: PASS:DataIPNetmask:[]:App found in validation list, but not in system
8: PASS:DataIPGateway:[]:App found in validation list, but not in system
9: PASS:DomainName:[]:App found in validation list, but not in system
10: PASS:NTP:[]:App found in validation list, but not in system
11: PASS:DNS:[]:App found in validation list, but not in system
12: PASS:RamDiskSize:[]:App found in validation list, but not in system
13: PASS:ThinProvisioned:[]:App found in validation list, but not in system
14: PASS:Timezone:[]:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.932834" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.932834" level="INFO">List has one item:
FAIL:['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]']</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.932834" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.933834" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.933834" level="INFO">Execution passed with message:
There are applications running that are not in the valid list.</msg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:31.933834" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.933834" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.933834" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the platform spec based on the suite variable of ``CNC_PLATFORM``</doc>
<status status="PASS" start="2024-12-04T20:05:31.903341" elapsed="0.030493">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.933834" level="INFO">Set test message to:
--Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [nbnlab]:ManagementIPGateway:[]
PASS: [nbnlab]:DataVIP:[]
PASS: [nbnlab]:DataIPNetmask:[]
PASS: [nbnlab]:DataIPGateway:[]
PASS: [nbnlab]:DomainName:[]
PASS: [nbnlab]:NTP:[]
PASS: [nbnlab]:DNS:[]
PASS: [nbnlab]:RamDiskSize:[]
PASS: [nbnlab]:ThinProvisioned:[]
PASS: [nbnlab]:Timezone:[]
WARN: ['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]'] Not in valid list.

There are applications running that are not in the valid list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.933834" elapsed="0.000000"/>
</kw>
<doc>Validate key information on CNC Platform and hosting as per file spec [cnc-platform.txt]</doc>
<tag>PASS</tag>
<tag>PLATFORM</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.901826" elapsed="0.033008">--Validate CNC Platform--
PASS: [nbnlab]:SchemaVersion:[]
PASS: [nbnlab]:CNC_VM_Image:[]
PASS: [nbnlab]:ClusterIPStack:[]
PASS: [nbnlab]:ManagementVIP:[]
PASS: [nbnlab]:ManagementIPNetmask:[]
PASS: [nbnlab]:ManagementIPGateway:[]
PASS: [nbnlab]:DataVIP:[]
PASS: [nbnlab]:DataIPNetmask:[]
PASS: [nbnlab]:DataIPGateway:[]
PASS: [nbnlab]:DomainName:[]
PASS: [nbnlab]:NTP:[]
PASS: [nbnlab]:DNS:[]
PASS: [nbnlab]:RamDiskSize:[]
PASS: [nbnlab]:ThinProvisioned:[]
PASS: [nbnlab]:Timezone:[]
WARN: ['SchemaVersion:[]', 'CNC_VM_Image:[]', 'ClusterIPStack:[]', 'ManagementVIP:[]', 'ManagementIPNetmask:[]', 'ManagementIPGateway:[]', 'DataVIP:[]', 'DataIPNetmask:[]', 'DataIPGateway:[]', 'DomainName:[]', 'NTP:[]', 'DNS:[]', 'RamDiskSize:[]', 'ThinProvisioned:[]', 'Timezone:[]'] Not in valid list.

There are applications running that are not in the valid list.</status>
</test>
<test id="s1-t26" name="Validate CNC Versions" line="213">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.936763" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.935826" elapsed="0.000937"/>
</kw>
<kw name="validate-cnc-app-versions" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.937325" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.937325" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.937325" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.937325" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.937325" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.938763" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-apps.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-apps.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.938763" level="INFO">${LoadData} = capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767
capp-infra:7.0.0-rc.73+build.85</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.001438"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.938763" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-apps.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.001438"/>
</kw>
<msg time="2024-12-04T20:05:31.938763" level="INFO">${RESP} = ('PASS', 'capp-ca:7.0.0-rc.62+build.65\ncapp-hi:7.0.0-rc.60+build.62\ncapp-cat:7.0.0-rc.65+build.68\ncapp-coe:7.0.0-rc.73+build.78\ncapp-common-ems-services:7.0.0-rc.760+build.767\ncapp-infra:7.0.0-rc...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-apps.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.937325" elapsed="0.001438"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.938763" level="INFO">${MSG} = --Validate CNC app versions--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC app versions--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.938763" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.938763" level="INFO">${appsVALID} = capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-common-ems-services:7.0.0-rc.760+build.767
capp-infra:7.0.0-rc.73+build.85</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.938763" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.939814" level="INFO">6 lines returned</msg>
<msg time="2024-12-04T20:05:31.939814" level="INFO">@{appsVALID} = [ capp-ca:7.0.0-rc.62+build.65 | capp-hi:7.0.0-rc.60+build.62 | capp-cat:7.0.0-rc.65+build.68 | capp-coe:7.0.0-rc.73+build.78 | capp-common-ems-services:7.0.0-rc.760+build.767 | capp-infra:7.0.0-rc.73...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.939814" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.939814" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.940805" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000991"/>
</kw>
<var name="${item}">capp-ca:7.0.0-rc.62+build.65</var>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.000991"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.940805" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.940805" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.940805" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-hi:7.0.0-rc.60+build.62</var>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000989"/>
</kw>
<msg time="2024-12-04T20:05:31.941794" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000989"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.941794" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.941794" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-cat:7.0.0-rc.65+build.68</var>
<status status="PASS" start="2024-12-04T20:05:31.940805" elapsed="0.000989"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.941794" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.942771" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+b...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.942771" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-coe:7.0.0-rc.73+build.78</var>
<status status="PASS" start="2024-12-04T20:05:31.941794" elapsed="0.000977"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.942771" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.942771" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+b...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.943771" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-common-ems-services:7.0.0-rc.760+build.767</var>
<status status="PASS" start="2024-12-04T20:05:31.942771" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.943771" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.943771" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+b...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.944771" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-infra:7.0.0-rc.73+build.85</var>
<status status="PASS" start="2024-12-04T20:05:31.943771" elapsed="0.001000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.939814" elapsed="0.004957"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.938763" elapsed="0.006008"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.938763" elapsed="0.006008"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.944771" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.944771" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.944771" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.944771" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.944771" level="INFO">List length is 6 and it contains following items:
0: PASS:capp-ca:7.0.0-rc.62+build.65:App found in validation list, but not in system
1: PASS:capp-hi:7.0.0-rc.60+build.62:App found in validation list, but not in system
2: PASS:capp-cat:7.0.0-rc.65+build.68:App found in validation list, but not in system
3: PASS:capp-coe:7.0.0-rc.73+build.78:App found in validation list, but not in system
4: PASS:capp-common-ems-services:7.0.0-rc.760+build.767:App found in validation list, but not in system
5: PASS:capp-infra:7.0.0-rc.73+build.85:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.944771" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.944771" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.944771" elapsed="0.001277"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.946048" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.946048" level="INFO">${MSG} = --Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+b...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.946048" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.946048" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC application versions based on the suite variable of ``CNC_APP_VERSIONS``</doc>
<status status="PASS" start="2024-12-04T20:05:31.936763" elapsed="0.009285"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.946048" level="INFO">Set test message to:
--Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+build.78
PASS: [nbnlab]:capp-common-ems-services:7.0.0-rc.760+build.767
PASS: [nbnlab]:capp-infra:7.0.0-rc.73+build.85

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.946048" elapsed="0.000000"/>
</kw>
<doc>Validate the configured CNC products are correct as per file spec [cnc-apps.txt]</doc>
<tag>APPLICATIONS</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.935826" elapsed="0.011244">--Validate CNC app versions--
PASS: [nbnlab]:capp-ca:7.0.0-rc.62+build.65
PASS: [nbnlab]:capp-hi:7.0.0-rc.60+build.62
PASS: [nbnlab]:capp-cat:7.0.0-rc.65+build.68
PASS: [nbnlab]:capp-coe:7.0.0-rc.73+build.78
PASS: [nbnlab]:capp-common-ems-services:7.0.0-rc.760+build.767
PASS: [nbnlab]:capp-infra:7.0.0-rc.73+build.85

All tests passed. Failures:0
</status>
</test>
<test id="s1-t27" name="Validate NSO Service Types" line="220">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.948069" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.947070" elapsed="0.000999"/>
</kw>
<kw name="validate-nso-service-types" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.949066" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.948069" elapsed="0.000997"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.949066" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.949066" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.949066" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.949066" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.949066" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-nso-service-types.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-nso-service-types.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.949066" level="INFO">${LoadData} = TRANSPORT:Tunnel
TRANSPORT:ODN-Template
TRANSPORT:Policy
TRANSPORT:Circuit-Style Policy
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.001006"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-nso-service-types.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.001006"/>
</kw>
<msg time="2024-12-04T20:05:31.950072" level="INFO">${RESP} = ('PASS', 'TRANSPORT:Tunnel\nTRANSPORT:ODN-Template\nTRANSPORT:Policy\nTRANSPORT:Circuit-Style Policy\nNETWORK_SLICE:NSS\nVPN:L3VPN-Service\nVPN:L2VPN-Service')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-nso-service-types.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.949066" elapsed="0.001006"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.950072" level="INFO">${MSG} = --Validate CNC NSO Service Types--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC NSO Service Types--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.950072" level="INFO">${appsVALID} = TRANSPORT:Tunnel
TRANSPORT:ODN-Template
TRANSPORT:Policy
TRANSPORT:Circuit-Style Policy
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.950072" level="INFO">7 lines returned</msg>
<msg time="2024-12-04T20:05:31.950072" level="INFO">@{appsVALID} = [ TRANSPORT:Tunnel | TRANSPORT:ODN-Template | TRANSPORT:Policy | TRANSPORT:Circuit-Style Policy | NETWORK_SLICE:NSS | VPN:L3VPN-Service | VPN:L2VPN-Service ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.950072" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.951060" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.951060" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:Tunnel</var>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.000988"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.951060" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.951060" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.952060" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:ODN-Template</var>
<status status="PASS" start="2024-12-04T20:05:31.951060" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.952060" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.952060" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.952060" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:Policy</var>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.952060" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.952060" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.001522"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.953582" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:Circuit-Style Policy</var>
<status status="PASS" start="2024-12-04T20:05:31.952060" elapsed="0.001522"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.953582" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.953582" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NE...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.953582" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</kw>
<var name="${item}">NETWORK_SLICE:NSS</var>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.954966" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.001384"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.954966" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NE...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.954966" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.000000"/>
</kw>
<var name="${item}">VPN:L3VPN-Service</var>
<status status="PASS" start="2024-12-04T20:05:31.953582" elapsed="0.001384"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.001011"/>
</kw>
<msg time="2024-12-04T20:05:31.955977" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.001011"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.955977" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NE...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.955977" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<var name="${item}">VPN:L2VPN-Service</var>
<status status="PASS" start="2024-12-04T20:05:31.954966" elapsed="0.001011"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.005905"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.005905"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.950072" elapsed="0.005905"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.955977" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.955977" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.955977" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.955977" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.955977" level="INFO">List length is 7 and it contains following items:
0: PASS:TRANSPORT:Tunnel:App found in validation list, but not in system
1: PASS:TRANSPORT:ODN-Template:App found in validation list, but not in system
2: PASS:TRANSPORT:Policy:App found in validation list, but not in system
3: PASS:TRANSPORT:Circuit-Style Policy:App found in validation list, but not in system
4: PASS:NETWORK_SLICE:NSS:App found in validation list, but not in system
5: PASS:VPN:L3VPN-Service:App found in validation list, but not in system
6: PASS:VPN:L2VPN-Service:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.955977" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.955977" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.957002" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.957002" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.957002" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.957002" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.957002" level="INFO">${MSG} = --Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NE...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.957002" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.957002" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO service types based on the suite variable of ``CNC_SERVICE_TYPES``</doc>
<status status="PASS" start="2024-12-04T20:05:31.948069" elapsed="0.008933"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.957988" level="INFO">Set test message to:
--Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NETWORK_SLICE:NSS
PASS: [nbnlab]:VPN:L3VPN-Service
PASS: [nbnlab]:VPN:L2VPN-Service

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.957988" elapsed="0.000000"/>
</kw>
<doc>Validate the available NSO service models are correct as per file spec [cnc-nso-service-types.txt]</doc>
<tag>NSO</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.947070" elapsed="0.011916">--Validate CNC NSO Service Types--
PASS: [nbnlab]:TRANSPORT:Tunnel
PASS: [nbnlab]:TRANSPORT:ODN-Template
PASS: [nbnlab]:TRANSPORT:Policy
PASS: [nbnlab]:TRANSPORT:Circuit-Style Policy
PASS: [nbnlab]:NETWORK_SLICE:NSS
PASS: [nbnlab]:VPN:L3VPN-Service
PASS: [nbnlab]:VPN:L2VPN-Service

All tests passed. Failures:0
</status>
</test>
<test id="s1-t28" name="Validate CNC/NSO Services" line="227">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.959984" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.958986" elapsed="0.000998"/>
</kw>
<kw name="validate-cnc-services" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.959984" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.959984" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.959984" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.959984" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.961007" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.961007" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.961007" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.961007" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-services.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-services.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.961007" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-services.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.961007" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-services.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.961007" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.962013" level="INFO">${MSG} = --Validate CNC Services--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Services--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.962013" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.962013" level="INFO">0 lines returned</msg>
<msg time="2024-12-04T20:05:31.962013" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.962013" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.962013" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.963018" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.963018" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.962013" elapsed="0.001005"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.963018" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.963018" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.963018" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.963018" level="INFO">${MSG} = --Validate CNC Services--

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.963018" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.963018" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO service types based on the suite variable of ``CNC_SERVICES``</doc>
<status status="PASS" start="2024-12-04T20:05:31.959984" elapsed="0.003034"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.964007" level="INFO">Set test message to:
--Validate CNC Services--

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964007" elapsed="0.000000"/>
</kw>
<doc>Validate implemented networks services are correct as per the file spec [cnc-services.txt]</doc>
<tag>SERVICES</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.958986" elapsed="0.005021">--Validate CNC Services--

All tests passed. Failures:0
</status>
</test>
<test id="s1-t29" name="Validate CNC/NSO Transport" line="234">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.964996" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964007" elapsed="0.000989"/>
</kw>
<kw name="validate-cnc-transport" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.964996" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964996" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.964996" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964996" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.964996" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964996" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.965979" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.964996" elapsed="0.000983"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.965979" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.965979" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-transport.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-transport.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.965979" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-transport.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.965979" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-transport.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.965979" level="INFO">${MSG} = --Validate CNC Transport--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Transport--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.966985" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.966985" level="INFO">0 lines returned</msg>
<msg time="2024-12-04T20:05:31.966985" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_TRANSPORT}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.965979" elapsed="0.001006"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.966985" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.966985" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.966985" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.966985" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.966985" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.966985" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.966985" elapsed="0.000996"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.967981" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.967981" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.967981" level="INFO">${MSG} = --Validate CNC Transport--

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.967981" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO transport services based on the suite variable of ``CNC_TRANSPORT``</doc>
<status status="PASS" start="2024-12-04T20:05:31.964996" elapsed="0.002985"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.967981" level="INFO">Set test message to:
--Validate CNC Transport--

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.967981" elapsed="0.000000"/>
</kw>
<doc>Validate implemented transport are correct as per the file spec [cnc-services.txt]</doc>
<tag>SERVICES</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.964007" elapsed="0.003974">--Validate CNC Transport--

All tests passed. Failures:0
</status>
</test>
<test id="s1-t30" name="Validate CNC Credentials" line="241">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.968982" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.968982" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-credentials" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.969978" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.969978" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.969978" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.969978" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.969978" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.969978" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-credentials.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-credentials.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.971167" level="INFO">${LoadData} = pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USERPASS_GNMI
vgre|admin...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.001189"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-credentials.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.001189"/>
</kw>
<msg time="2024-12-04T20:05:31.971167" level="INFO">${RESP} = ('PASS', 'pce|cnc_user:ROBOT_USERPASS_HTTP\nnso|simon:ROBOT_USERPASS_SSH\nnso|simon:ROBOT_USERPASS_HTTP\nnso|simon:ROBOT_USERPASS_NETCONF\ndevice|admin:ROBOT_USERPASS_SSH\ndevice|admin:ROBOT_USERPASS_...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-credentials.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.969978" elapsed="0.001189"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.971167" level="INFO">${MSG} = --Validate Credentials--
</msg>
<arg>${MSG}</arg>
<arg>--Validate Credentials--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.971167" level="INFO">${appsVALID} = pce|cnc_user:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_SSH
nso|simon:ROBOT_USERPASS_HTTP
nso|simon:ROBOT_USERPASS_NETCONF
device|admin:ROBOT_USERPASS_SSH
device|admin:ROBOT_USERPASS_GNMI
vgre|admin...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.971167" level="INFO">7 lines returned</msg>
<msg time="2024-12-04T20:05:31.971167" level="INFO">@{appsVALID} = [ pce|cnc_user:ROBOT_USERPASS_HTTP | nso|simon:ROBOT_USERPASS_SSH | nso|simon:ROBOT_USERPASS_HTTP | nso|simon:ROBOT_USERPASS_NETCONF | device|admin:ROBOT_USERPASS_SSH | device|admin:ROBOT_USERPASS_GNM...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.972165" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.972165" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.972165" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</kw>
<var name="${item}">pce|cnc_user:ROBOT_USERPASS_HTTP</var>
<status status="PASS" start="2024-12-04T20:05:31.972165" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.973167" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.973167" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.973167" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|simon:ROBOT_USERPASS_SSH</var>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.973167" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.973167" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.001338"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.974505" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|simon:ROBOT_USERPASS_HTTP</var>
<status status="PASS" start="2024-12-04T20:05:31.973167" elapsed="0.001338"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.974505" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.975524" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPAS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.001019"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.975524" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|simon:ROBOT_USERPASS_NETCONF</var>
<status status="PASS" start="2024-12-04T20:05:31.974505" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.975524" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.975524" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPAS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.001007"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.976531" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<var name="${item}">device|admin:ROBOT_USERPASS_SSH</var>
<status status="PASS" start="2024-12-04T20:05:31.975524" elapsed="0.001007"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.976531" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.976531" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPAS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.976531" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000992"/>
</kw>
<var name="${item}">device|admin:ROBOT_USERPASS_GNMI</var>
<status status="PASS" start="2024-12-04T20:05:31.976531" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.977523" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.977523" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPAS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.977523" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<var name="${item}">vgre|admin:ROBOT_USERPASS_SSH</var>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.006356"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.006356"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.971167" elapsed="0.006356"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.977523" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.977523" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.977523" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.978527" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.977523" elapsed="0.001004"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.978527" level="INFO">List length is 7 and it contains following items:
0: PASS:pce|cnc_user:ROBOT_USERPASS_HTTP:App found in validation list, but not in system
1: PASS:nso|simon:ROBOT_USERPASS_SSH:App found in validation list, but not in system
2: PASS:nso|simon:ROBOT_USERPASS_HTTP:App found in validation list, but not in system
3: PASS:nso|simon:ROBOT_USERPASS_NETCONF:App found in validation list, but not in system
4: PASS:device|admin:ROBOT_USERPASS_SSH:App found in validation list, but not in system
5: PASS:device|admin:ROBOT_USERPASS_GNMI:App found in validation list, but not in system
6: PASS:vgre|admin:ROBOT_USERPASS_SSH:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.978527" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.978527" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.978527" level="INFO">${MSG} = --Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPAS...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.978527" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.978527" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the application health based on the suite variable of ``CNC_CREDENTIALS``</doc>
<status status="PASS" start="2024-12-04T20:05:31.968982" elapsed="0.009545"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.979530" level="INFO">Set test message to:
--Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_NETCONF
PASS: [nbnlab]:device|admin:ROBOT_USERPASS_SSH
PASS: [nbnlab]:device|admin:ROBOT_USERPASS_GNMI
PASS: [nbnlab]:vgre|admin:ROBOT_USERPASS_SSH

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.979530" elapsed="0.000000"/>
</kw>
<doc>Validate CNC credentials are correct as per the file spec [cnc-credentials.txt]</doc>
<tag>CREDENTIALS</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.968982" elapsed="0.010548">--Validate Credentials--
PASS: [nbnlab]:pce|cnc_user:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_SSH
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_HTTP
PASS: [nbnlab]:nso|simon:ROBOT_USERPASS_NETCONF
PASS: [nbnlab]:device|admin:ROBOT_USERPASS_SSH
PASS: [nbnlab]:device|admin:ROBOT_USERPASS_GNMI
PASS: [nbnlab]:vgre|admin:ROBOT_USERPASS_SSH

All tests passed. Failures:0
</status>
</test>
<test id="s1-t31" name="Validate CNC Providers" line="248">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.980530" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.979530" elapsed="0.001000"/>
</kw>
<kw name="validate-cnc-providers" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.980530" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.980530" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.980530" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.980530" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.980530" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.980530" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.981533" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.981533" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-providers.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-providers.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.981533" level="INFO">${LoadData} = pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_I...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-providers.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.981533" level="INFO">${RESP} = ('PASS', "pce|profile:['pce']\npce|connectivity_info..port:[8080]\npce|connectivity_info..timeout:['30']\npce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']\npce|connectivity_info..ipaddrs:[[{'inet...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-providers.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.981533" level="INFO">${MSG} = --Validate CNC providers--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC providers--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.982529" level="INFO">${appsVALID} = pce|profile:['pce']
pce|connectivity_info..port:[8080]
pce|connectivity_info..timeout:['30']
pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_I...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.982529" level="INFO">10 lines returned</msg>
<msg time="2024-12-04T20:05:31.982529" level="INFO">@{appsVALID} = [ pce|profile:['pce'] | pce|connectivity_info..port:[8080] | pce|connectivity_info..timeout:['30'] | pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP'] | pce|connectivity_info..ipaddrs:[[{'inet_af'...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.982529" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.982529" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000993"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.983522" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.000000"/>
</kw>
<var name="${item}">pce|profile:['pce']</var>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.983522" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.983522" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.984522" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.001000"/>
</kw>
<var name="${item}">pce|connectivity_info..port:[8080]</var>
<status status="PASS" start="2024-12-04T20:05:31.983522" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.984522" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.984522" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.984522" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<var name="${item}">pce|connectivity_info..timeout:['30']</var>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.984522" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.984522" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.986038" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.001516"/>
</kw>
<var name="${item}">pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']</var>
<status status="PASS" start="2024-12-04T20:05:31.984522" elapsed="0.001516"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986038" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.986038" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986038" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.986585" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986038" elapsed="0.000547"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.986585" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<var name="${item}">pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]</var>
<status status="PASS" start="2024-12-04T20:05:31.986038" elapsed="0.000547"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.986585" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.986585" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.987599" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|profile:['nso']</var>
<status status="PASS" start="2024-12-04T20:05:31.986585" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.987599" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.987599" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.988771" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.001172"/>
</kw>
<var name="${item}">nso|connectivity_info..port:[8080, 22, 2022]</var>
<status status="PASS" start="2024-12-04T20:05:31.987599" elapsed="0.001172"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.988771" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.988771" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.988771" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.001013"/>
</kw>
<var name="${item}">nso|connectivity_info..timeout:['30', '30', '30']</var>
<status status="PASS" start="2024-12-04T20:05:31.988771" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.989784" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.989784" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.989784" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.989784" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.989784" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.989784" elapsed="0.001002"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.990786" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.990786" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']</var>
<status status="PASS" start="2024-12-04T20:05:31.989784" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.990786" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.990786" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.990786" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.990786" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.990786" elapsed="0.001001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.991787" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.991787" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.991787" elapsed="0.000000"/>
</kw>
<var name="${item}">nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], ...</var>
<status status="PASS" start="2024-12-04T20:05:31.990786" elapsed="0.001001"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.009258"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.982529" elapsed="0.009258"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.981533" elapsed="0.010254"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-04T20:05:31.991787" level="FAIL">[ pce|profile:['pce'] | pce|connectivity_info..port:[8080] | pce|connectivity_info..timeout:['30'] | pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP'] | pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]] | nso|profile:['nso'] | nso|connectivity_info..port:[8080, 22, 2022] | nso|connectivity_info..timeout:['30', '30', '30'] | nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF'] | nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]] ] does not contain value '["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"]'.</msg>
<msg time="2024-12-04T20:05:31.991787" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: [ pce|profile:['pce'] | pce|connectivity_info..port:[8080] | pce|connectivity_info..timeout:['30'] | pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP'] | pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]] | nso|profile:['nso'] | nso|connectivity_info..port:[8080, 22, 2022] | nso|connectivity_info..timeout:['30', '30', '30'] | nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF'] | nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]] ] does not contain value '["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"]'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-04T20:05:31.991787" elapsed="0.001002">[ pce|profile:['pce'] | pce|connectivity_info..port:[8080] | pce|connectivity_info..timeout:['30'] | pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP'] | pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]] | nso|profile:['nso'] | nso|connectivity_info..port:[8080, 22, 2022] | nso|connectivity_info..timeout:['30', '30', '30'] | nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF'] | nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]] ] does not contain value '["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"]'.</status>
</kw>
<msg time="2024-12-04T20:05:31.992789" level="INFO">${RESP} = ('FAIL', '[ pce|profile:[\'pce\'] | pce|connectivity_info..port:[8080] | pce|connectivity_info..timeout:[\'30\'] | pce|connectivity_info..type:[\'ROBOT_MSVC_TRANS_HTTP\'] | pce|connectivity_info..ipad...</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.991787" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.992789" level="INFO">${MSG} = --Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Not in valid list.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.992789" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.992789" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:31.992789" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.992789" elapsed="0.000000"/>
</if>
<var name="${item}">["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet...</var>
<status status="PASS" start="2024-12-04T20:05:31.991787" elapsed="0.001002"/>
</iter>
<var>${item}</var>
<value>${CNC_PROVIDERS}</value>
<status status="PASS" start="2024-12-04T20:05:31.991787" elapsed="0.001002"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.992789" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:31.993852" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.992789" elapsed="0.001063"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.993852" level="INFO">Length is 1.</msg>
<msg time="2024-12-04T20:05:31.993852" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.993852" level="INFO">List length is 10 and it contains following items:
0: PASS:pce|profile:['pce']:App found in validation list, but not in system
1: PASS:pce|connectivity_info..port:[8080]:App found in validation list, but not in system
2: PASS:pce|connectivity_info..timeout:['30']:App found in validation list, but not in system
3: PASS:pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']:App found in validation list, but not in system
4: PASS:pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]:App found in validation list, but not in system
5: PASS:nso|profile:['nso']:App found in validation list, but not in system
6: PASS:nso|connectivity_info..port:[8080, 22, 2022]:App found in validation list, but not in system
7: PASS:nso|connectivity_info..timeout:['30', '30', '30']:App found in validation list, but not in system
8: PASS:nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']:App found in validation list, but not in system
9: PASS:nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.993852" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:31.993852" level="INFO">List has one item:
FAIL:["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"]</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.993852" level="INFO">Execution passed with message:
There are applications running that are not in the valid list.</msg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:31.993852" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:31.994781" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the CNC Providers (NSO,CDG etc) based on the suite variable of ``CNC_PROVIDERS``</doc>
<status status="PASS" start="2024-12-04T20:05:31.980530" elapsed="0.014251">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:31.994781" level="INFO">Set test message to:
--Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
PASS: [nbnlab]:pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]
PASS: [nbnlab]:nso|profile:['nso']
PASS: [nbnlab]:nso|connectivity_info..port:[8080, 22, 2022]
PASS: [nbnlab]:nso|connectivity_info..timeout:['30', '30', '30']
PASS: [nbnlab]:nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']
PASS: [nbnlab]:nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]

WARN: ["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"] Not in valid list.
There are applications running that are not in the valid list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:31.994781" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Providers are correct as per the file spec [cnc-providers.txt]</doc>
<tag>PASS</tag>
<tag>PROVIDERS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.979530" elapsed="0.015251">--Validate CNC providers--
PASS: [nbnlab]:pce|profile:['pce']
PASS: [nbnlab]:pce|connectivity_info..port:[8080]
PASS: [nbnlab]:pce|connectivity_info..timeout:['30']
PASS: [nbnlab]:pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
PASS: [nbnlab]:pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]
PASS: [nbnlab]:nso|profile:['nso']
PASS: [nbnlab]:nso|connectivity_info..port:[8080, 22, 2022]
PASS: [nbnlab]:nso|connectivity_info..timeout:['30', '30', '30']
PASS: [nbnlab]:nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']
PASS: [nbnlab]:nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]

WARN: ["pce|profile:['pce']", 'pce|connectivity_info..port:[8080]', "pce|connectivity_info..timeout:['30']", "pce|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']", "pce|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.50', 'mask': '32'}]]", "nso|profile:['nso']", 'nso|connectivity_info..port:[8080, 22, 2022]', "nso|connectivity_info..timeout:['30', '30', '30']", "nso|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_NETCONF']", "nso|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '32'}]]"] Not in valid list.
There are applications running that are not in the valid list.</status>
</test>
<test id="s1-t32" name="Validate CNC Devices" line="255">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:31.996803" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.995789" elapsed="0.001014"/>
</kw>
<kw name="validate-cnc-devices" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.996803" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.996803" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.997803" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.997803" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.997803" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:31.998804" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-devices.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-devices.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:31.998804" level="INFO">${LoadData} = ['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.software_type:...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.001001"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-devices.txt</arg>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.001001"/>
</kw>
<msg time="2024-12-04T20:05:31.998804" level="INFO">${RESP} = ('PASS', "['GRE-2.nbnco.net.au']:profile:['device']\n['GRE-2.nbnco.net.au']:dg_name:['pool1-1']\n['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']\n['GRE-2.nbnco.net.au']:product_info.s...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-devices.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.997803" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.998804" level="INFO">${MSG} = --Validate CNC Devices--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Devices--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.998804" level="INFO">${appsVALID} = ['GRE-2.nbnco.net.au']:profile:['device']
['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
['GRE-2.nbnco.net.au']:product_info.software_type:...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:31.999802" level="INFO">30 lines returned</msg>
<msg time="2024-12-04T20:05:31.999802" level="INFO">@{appsVALID} = [ ['GRE-2.nbnco.net.au']:profile:['device'] | ['GRE-2.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-2.nbnco.net.au']:product_info.softwa...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.000998"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:31.999802" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.999802" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:31.999802" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:profile:['device']</var>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.000803" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.000803" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.000803" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:dg_name:['pool1-1']</var>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.000803" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.000803" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.001803" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-04T20:05:32.000803" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.001803" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.001803" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.001803" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.001803" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.001803" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.001563"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.003366" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.003366" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']</var>
<status status="PASS" start="2024-12-04T20:05:32.001803" elapsed="0.001563"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.003366" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.003366" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.003366" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.004380" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.003366" elapsed="0.001014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.004380" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-04T20:05:32.003366" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.004380" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.004380" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.005437" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-04T20:05:32.004380" elapsed="0.001057"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.005437" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.005437" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000956"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.006393" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]</var>
<status status="PASS" start="2024-12-04T20:05:32.005437" elapsed="0.000956"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.006393" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.006393" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000998"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.007391" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.007391" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.1...</var>
<status status="PASS" start="2024-12-04T20:05:32.006393" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.007391" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.007391" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.007391" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.008393" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.007391" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.008393" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.008393" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.008393" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1...</var>
<status status="PASS" start="2024-12-04T20:05:32.007391" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.008393" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.008393" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.008393" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.009395" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.009395" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:profile:['device']</var>
<status status="PASS" start="2024-12-04T20:05:32.008393" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.009395" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.010393" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.010393" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:dg_name:['pool1-1']</var>
<status status="PASS" start="2024-12-04T20:05:32.009395" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.010393" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.010393" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.010393" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-04T20:05:32.010393" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.011683" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.011683" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.011683" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.012700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.001017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.012700" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.012700" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']</var>
<status status="PASS" start="2024-12-04T20:05:32.011683" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.012700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.012700" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.013720" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-04T20:05:32.012700" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.013720" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.013720" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.013720" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.014693" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000973"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.014693" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.014693" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]</var>
<status status="PASS" start="2024-12-04T20:05:32.013720" elapsed="0.000973"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.014693" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.014693" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.001015"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.015708" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.1...</var>
<status status="PASS" start="2024-12-04T20:05:32.014693" elapsed="0.001015"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.015708" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.015708" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.015708" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</kw>
<var name="${item}">['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1...</var>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000992"/>
</kw>
<msg time="2024-12-04T20:05:32.016700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000992"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.016700" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.016700" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:profile:['vgre']</var>
<status status="PASS" start="2024-12-04T20:05:32.015708" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.016700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.016700" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.001030"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.017730" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:dg_name:[]</var>
<status status="PASS" start="2024-12-04T20:05:32.016700" elapsed="0.001030"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.017730" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.017730" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.017730" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000994"/>
</kw>
<msg time="2024-12-04T20:05:32.018724" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000994"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.018724" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.018724" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.018724" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.018724" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.018724" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']</var>
<status status="PASS" start="2024-12-04T20:05:32.017730" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.019929" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.019929" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.019929" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']</var>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.021183" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.001254"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.021183" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.021183" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]</var>
<status status="PASS" start="2024-12-04T20:05:32.019929" elapsed="0.001254"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.021183" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.021183" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.021183" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']</var>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.022676" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.022676" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.022676" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]</var>
<status status="PASS" start="2024-12-04T20:05:32.021183" elapsed="0.001493"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.022676" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.023687" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.023687" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.4...</var>
<status status="PASS" start="2024-12-04T20:05:32.022676" elapsed="0.001011"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.023687" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.023687" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.024960" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.001273"/>
</kw>
<var name="${item}">['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663...</var>
<status status="PASS" start="2024-12-04T20:05:32.023687" elapsed="0.001273"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-04T20:05:31.999802" elapsed="0.025158"/>
</for>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.026156"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:31.998804" elapsed="0.026156"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-04T20:05:32.024960" level="FAIL">[ ['GRE-2.nbnco.net.au']:profile:['device'] | ['GRE-2.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339] | ['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]] | ['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] | ['GRE-1.nbnco.net.au']:profile:['device'] | ['GRE-1.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339] | ['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]] | ['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] | ['vGRE-0.nbnco.com.au']:profile:['vgre'] | ['vGRE-0.nbnco.com.au']:dg_name:[] | ['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR'] | ['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1'] | ['vGRE-0.nbnco.com.au']:product_info.manufacturer:[] | ['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH'] | ['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022] | ['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]] | ['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] ] does not contain value '["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]", "['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['GRE-1.nbnco.net.au']:profile:['device']", "['GRE-1.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"]'.</msg>
<msg time="2024-12-04T20:05:32.024960" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: [ ['GRE-2.nbnco.net.au']:profile:['device'] | ['GRE-2.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339] | ['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]] | ['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] | ['GRE-1.nbnco.net.au']:profile:['device'] | ['GRE-1.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339] | ['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]] | ['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] | ['vGRE-0.nbnco.com.au']:profile:['vgre'] | ['vGRE-0.nbnco.com.au']:dg_name:[] | ['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR'] | ['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1'] | ['vGRE-0.nbnco.com.au']:product_info.manufacturer:[] | ['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH'] | ['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022] | ['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]] | ['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] ] does not contain value '["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]", "['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['GRE-1.nbnco.net.au']:profile:['device']", "['GRE-1.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"]'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.024960" elapsed="0.000000">[ ['GRE-2.nbnco.net.au']:profile:['device'] | ['GRE-2.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339] | ['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]] | ['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}] | ['GRE-1.nbnco.net.au']:profile:['device'] | ['GRE-1.nbnco.net.au']:dg_name:['pool1-1'] | ['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE'] | ['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR'] | ['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1'] | ['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems'] | ['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI'] | ['GRE-1.nb...
    [ Message content over the limit has been removed. ]
...TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"]'.</status>
</kw>
<msg time="2024-12-04T20:05:32.024960" level="INFO">${RESP} = ('FAIL', '[ [\'GRE-2.nbnco.net.au\']:profile:[\'device\'] | [\'GRE-2.nbnco.net.au\']:dg_name:[\'pool1-1\'] | [\'GRE-2.nbnco.net.au\']:reachability_check:[\'REACH_CHECK_ENABLE\'] | [\'GRE-2.nbnco.net.a...</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.024960" level="INFO">${MSG} = --Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['R...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Not in valid list.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</if>
<var name="${item}">["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.sof...</var>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>${CNC_DEVICES}</value>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.024960" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:32.024960" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.024960" level="INFO">Length is 1.</msg>
<msg time="2024-12-04T20:05:32.026454" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.024960" elapsed="0.001494"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.026454" level="INFO">List length is 30 and it contains following items:
0: PASS:['GRE-2.nbnco.net.au']:profile:['device']:App found in validation list, but not in system
1: PASS:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']:App found in validation list, but not in system
2: PASS:['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
3: PASS:['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
4: PASS:['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']:App found in validation list, but not in system
5: PASS:['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
6: PASS:['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
7: PASS:['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]:App found in validation list, but not in system
8: PASS:['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]:App found in validation list, but not in system
9: PASS:['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]:App found in validation list, but not in system
10: PASS:['GRE-1.nbnco.net.au']:profile:['device']:App found in validation list, but not in system
11: PASS:['GRE-1.nbnco.net.au']:dg_name:['pool1-1']:App found in validation list, but not in system
12: PASS:['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
13: PASS:['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
14: PASS:['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']:App found in validation list, but not in system
15: PASS:['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
16: PASS:['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
17: PASS:['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]:App found in validation list, but not in system
18: PASS:['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]:App found in validation list, but not in system
19: PASS:['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]:App found in validation list, but not in system
20: PASS:['vGRE-0.nbnco.com.au']:profile:['vgre']:App found in validation list, but not in system
21: PASS:['vGRE-0.nbnco.com.au']:dg_name:[]:App found in validation list, but not in system
22: PASS:['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
23: PASS:['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']:App found in validation list, but not in system
24: PASS:['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']:App found in validation list, but not in system
25: PASS:['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]:App found in validation list, but not in system
26: PASS:['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']:App found in validation list, but not in system
27: PASS:['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]:App found in validation list, but not in system
28: PASS:['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]:App found in validation list, but not in system
29: PASS:['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.026454" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.026454" level="INFO">List has one item:
FAIL:["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]", "['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['GRE-1.nbnco.net.au']:profile:['device']", "['GRE-1.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"]</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.026454" level="INFO">Execution passed with message:
There are applications running that are not in the valid list.</msg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.026454" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.026454" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the CNC services/applications based on the suite variable of ``CNC_DEVICES``</doc>
<status status="PASS" start="2024-12-04T20:05:31.996803" elapsed="0.030658">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:32.027461" level="INFO">Set test message to:
--Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:profile:['vgre']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:dg_name:[]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]

WARN: ["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]", "['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['GRE-1.nbnco.net.au']:profile:['device']", "['GRE-1.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"] Not in valid list.
There are applications running that are not in the valid list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:32.027461" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Device info is correct, reachable and in operational OK state as per the file spec [cnc-devices.txt]</doc>
<tag>DEVICE</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:31.995789" elapsed="0.031672">--Validate CNC Devices--
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]
PASS: [nbnlab]:['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:profile:['device']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:dg_name:['pool1-1']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]
PASS: [nbnlab]:['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:profile:['vgre']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:dg_name:[]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]
PASS: [nbnlab]:['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]

WARN: ["['GRE-2.nbnco.net.au']:profile:['device']", "['GRE-2.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-2.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-2.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-2.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-2.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-2.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-2.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-2.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.106', 'mask': '24'}]]", "['GRE-2.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-2.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['GRE-1.nbnco.net.au']:profile:['device']", "['GRE-1.nbnco.net.au']:dg_name:['pool1-1']", "['GRE-1.nbnco.net.au']:reachability_check:['REACH_CHECK_ENABLE']", "['GRE-1.nbnco.net.au']:product_info.software_type:['IOS XR']", "['GRE-1.nbnco.net.au']:product_info.software_version:['7.11.1']", "['GRE-1.nbnco.net.au']:product_info.manufacturer:['Cisco Systems']", "['GRE-1.nbnco.net.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_GNMI']", "['GRE-1.nbnco.net.au']:connectivity_info..port:[161, 22, 9339]", "['GRE-1.nbnco.net.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.115', 'mask': '24'}]]", "['GRE-1.nbnco.net.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'GRE-1.nbnco.net.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]", "['vGRE-0.nbnco.com.au']:profile:['vgre']", "['vGRE-0.nbnco.com.au']:dg_name:[]", "['vGRE-0.nbnco.com.au']:reachability_check:['REACH_CHECK_ENABLE']", "['vGRE-0.nbnco.com.au']:product_info.software_type:['IOS-XR']", "['vGRE-0.nbnco.com.au']:product_info.software_version:['7.11.1']", "['vGRE-0.nbnco.com.au']:product_info.manufacturer:[]", "['vGRE-0.nbnco.com.au']:connectivity_info..type:['ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_SSH']", "['vGRE-0.nbnco.com.au']:connectivity_info..port:[11022, 10022]", "['vGRE-0.nbnco.com.au']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '10.67.22.46', 'mask': '24'}]]", "['vGRE-0.nbnco.com.au']:providers_family:[{'ROBOT_PROVIDER_NSO': {'providers': {'nso': {'provider_name': 'nso', 'provider_node_id': 'vGRE-0.nbnco.com.au', 'provider_uuid': 'c0abd589-7850-4653-9df9-663f1c2d86c8'}}}}]"] Not in valid list.
There are applications running that are not in the valid list.</status>
</test>
<test id="s1-t33" name="Validate CNC Devices State/Health" line="262">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:32.029781" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.028757" elapsed="0.001024"/>
</kw>
<kw name="validate-cnc-device-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.029781" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.029781" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.029781" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.029781" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.029781" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.029781" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.030805" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.029781" elapsed="0.001024"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.030805" level="INFO">@{VALIDATE_LIST} = [ DOWN | UNREACHABLE | ERROR | DEGRADED | errors ]</msg>
<var>@{VALIDATE_LIST}</var>
<arg>DOWN</arg>
<arg>UNREACHABLE</arg>
<arg>ERROR</arg>
<arg>DEGRADED</arg>
<arg>errors</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.030805" level="INFO">${MSG} = --Validate CNC Device Health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Device Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.030805" level="INFO">['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.030805" level="FAIL">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.030805" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.030805" elapsed="0.000000">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.030805" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.030805" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000997"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.031802" level="FAIL">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.031802" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.031802" elapsed="0.000000">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.031802" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.001001"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.001001"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.031802" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.031802" elapsed="0.001001"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.031802" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.032803" level="FAIL">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.032803" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.032803" elapsed="0.000000">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.032803" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.032803" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.033804" level="FAIL">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.033804" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.033804" elapsed="0.000000">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.033804" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.033804" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.033804" level="FAIL">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.033804" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.033804" elapsed="0.000000">'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.034798" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.033804" elapsed="0.000994"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.034798" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.034798" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.035084" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.035084" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.035084" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.034798" elapsed="0.000286"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.034798" elapsed="0.000286"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.034798" elapsed="0.000286"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.034798" elapsed="0.000286"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.033804" elapsed="0.001280"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.004279"/>
</for>
<var name="${iter}">['GRE-2.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.004279"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.035084" level="INFO">['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.035084" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.035595" level="FAIL">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.035595" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.035595" elapsed="0.000000">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.035595" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.035595" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.035595" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.035595" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036149" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036149" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036149" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.035595" elapsed="0.000554"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.035595" elapsed="0.000554"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.035595" elapsed="0.000554"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.035595" elapsed="0.000554"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.035595" elapsed="0.000554"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.036149" level="FAIL">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.036149" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.036149" elapsed="0.000000">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.036684" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.036149" elapsed="0.000535"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.036684" elapsed="0.000545"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.036684" elapsed="0.000545"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.036149" elapsed="0.001080"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.037229" elapsed="0.000524"/>
</kw>
<msg time="2024-12-04T20:05:32.037810" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.037229" elapsed="0.000581"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.038426" level="INFO">Checking if errors:[] is equal to ['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.038321" elapsed="0.000105"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.038933" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.038933" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.038933" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.039456" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.039456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.039456" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.039456" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.039456" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.038933" elapsed="0.000523"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.038933" elapsed="0.000523"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.037810" elapsed="0.002183"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.037810" elapsed="0.002183"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.037229" elapsed="0.002764"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.039993" level="FAIL">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.039993" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.039993" elapsed="0.000000">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.039993" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.039993" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.040514" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.039993" elapsed="0.000521"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.039993" elapsed="0.000521"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.039993" elapsed="0.000521"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.041034" level="FAIL">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.041034" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.041034" elapsed="0.000000">'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.041034" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.041034" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.042103" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.042103" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000539"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000539"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.041564" elapsed="0.000539"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.041564" elapsed="0.000539"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.041034" elapsed="0.001069"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.035084" elapsed="0.007019"/>
</for>
<var name="${iter}">['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</var>
<status status="PASS" start="2024-12-04T20:05:32.035084" elapsed="0.007019"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.042103" level="INFO">['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.042103" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.042655" level="FAIL">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.042655" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.042655" elapsed="0.000000">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.042655" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.042655" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.043185" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.042655" elapsed="0.000530"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.042655" elapsed="0.000530"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.042655" elapsed="0.000530"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.043750" elapsed="0.000050"/>
</kw>
<msg time="2024-12-04T20:05:32.043800" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.043185" elapsed="0.000615"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.043800" level="INFO">Checking if errors:[] is equal to ['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.043800" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.043800" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.043800" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.043800" elapsed="0.000507"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.044307" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.044307" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.044307" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.044307" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.044307" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.044307" elapsed="0.000519"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.044307" elapsed="0.000519"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.043800" elapsed="0.001026"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.043800" elapsed="0.001026"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.043185" elapsed="0.001641"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.044826" level="FAIL">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.044826" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.044826" elapsed="0.000000">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.044826" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.044826" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.045403" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.044826" elapsed="0.000577"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.044826" elapsed="0.000577"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.044826" elapsed="0.000577"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.045957" level="FAIL">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.045957" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.045403" elapsed="0.000554">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.045957" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.045403" elapsed="0.000554"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.045957" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.045403" elapsed="0.000554"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.046528" level="FAIL">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.046528" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.046528" elapsed="0.000000">'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.046528" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.046528" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047079" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047079" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000551"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000551"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.046528" elapsed="0.000551"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.046528" elapsed="0.000551"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.045957" elapsed="0.001122"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.042103" elapsed="0.004976"/>
</for>
<var name="${iter}">['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</var>
<status status="PASS" start="2024-12-04T20:05:32.042103" elapsed="0.004976"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.047079" level="INFO">['GRE-2.nbnco.net.au']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.047079" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.047693" level="FAIL">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.047693" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.047693" elapsed="0.000000">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.047693" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.047638" elapsed="0.000055"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048222" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000529"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000529"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.047693" elapsed="0.000529"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.047693" elapsed="0.000529"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.047079" elapsed="0.001143"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.048222" level="FAIL">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.048222" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.048222" elapsed="0.000000">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.048222" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.048222" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048222" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.048775" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.048222" elapsed="0.000553"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.048222" elapsed="0.000553"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.048222" elapsed="0.000553"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.049399" level="FAIL">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.049399" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.048775" elapsed="0.000624">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.049399" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.048775" elapsed="0.000624"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.049399" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.049399" elapsed="0.000510"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.048775" elapsed="0.001134"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.050075" level="FAIL">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.050075" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.050075" elapsed="0.000000">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.050075" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.049909" elapsed="0.000166"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.050367" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.050075" elapsed="0.000292"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.050075" elapsed="0.000292"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.049909" elapsed="0.000458"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.050872" level="FAIL">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.050872" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.050872" elapsed="0.000000">'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.050872" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.050367" elapsed="0.000505"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.050367" elapsed="0.000505"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.047079" elapsed="0.003793"/>
</for>
<var name="${iter}">['GRE-2.nbnco.net.au']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-04T20:05:32.047079" elapsed="0.003793"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.050872" level="INFO">['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.050872" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.051891" level="FAIL">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.051891" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.051891" elapsed="0.000000">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.051891" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.051891" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.053414" level="FAIL">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.053414" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.053414" elapsed="0.000000">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.053414" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.051891" elapsed="0.001523"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.053414" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.053414" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.054699" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.054699" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.054699" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.053414" elapsed="0.001285"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.053414" elapsed="0.001285"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.053414" elapsed="0.001285"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.053414" elapsed="0.001285"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.051891" elapsed="0.002808"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.055206" level="FAIL">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.055206" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.055206" elapsed="0.000000">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.055206" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.055206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.001011"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.056217" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.056217" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.001011"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.001011"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.055206" elapsed="0.001011"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.055206" elapsed="0.001011"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.054699" elapsed="0.001518"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.056217" level="FAIL">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.056217" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.056217" elapsed="0.000000">'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.056217" level="INFO">${RESP} = ('FAIL', "'['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.056217" elapsed="0.001263"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.057480" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.056217" elapsed="0.001263"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.057480" elapsed="0.001408"/>
</kw>
<msg time="2024-12-04T20:05:32.058888" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.057480" elapsed="0.001408"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.059499" level="INFO">Checking if errors:[] is equal to ['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.058888" elapsed="0.000611"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.059499" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.059499" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.059499" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.059499" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.059499" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.060511" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.060511" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.060511" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.059499" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.059499" elapsed="0.001012"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.058888" elapsed="0.001623"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.058888" elapsed="0.001623"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.057480" elapsed="0.003031"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.050872" elapsed="0.009639"/>
</for>
<var name="${iter}">['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]</var>
<status status="PASS" start="2024-12-04T20:05:32.050872" elapsed="0.009639"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.060511" level="INFO">['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.060511" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.061509" level="FAIL">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.061509" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.061509" elapsed="0.000000">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.061509" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.061509" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.061509" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.062513" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.061509" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.061509" elapsed="0.001004"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.061509" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.063510" level="FAIL">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.063510" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.062513" elapsed="0.000997">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.063510" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.062513" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.001002"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.001002"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.001002"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.063510" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.063510" elapsed="0.001002"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.062513" elapsed="0.001999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.064512" level="FAIL">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.064512" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.064512" elapsed="0.000000">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.064512" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.064512" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.064512" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.065516" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.065789" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.065789" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.065789" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.065516" elapsed="0.000273"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.065516" elapsed="0.000273"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.064512" elapsed="0.001277"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.064512" elapsed="0.001277"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.064512" elapsed="0.001277"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.066296" level="FAIL">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.066296" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.066296" elapsed="0.000000">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.066296" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.066296" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.065789" elapsed="0.000507"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.067733" level="FAIL">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.067733" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.067733" elapsed="0.000000">'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.067733" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.067733" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.067733" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.067733" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.069204" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.069204" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.069204" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.069204" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.069204" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.067733" elapsed="0.001471"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.067733" elapsed="0.001471"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.066296" elapsed="0.002908"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.060511" elapsed="0.008693"/>
</for>
<var name="${iter}">['GRE-1.nbnco.net.au']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-04T20:05:32.060511" elapsed="0.008693"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.069713" level="INFO">['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.069713" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.070223" level="FAIL">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.070223" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.070223" elapsed="0.000000">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.070906" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.070223" elapsed="0.000683"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.070906" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.070906" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.071921" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.071921" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.071921" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.070906" elapsed="0.001015"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.070906" elapsed="0.001015"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.070906" elapsed="0.001015"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.070906" elapsed="0.001015"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.070223" elapsed="0.001698"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.072921" level="FAIL">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.072921" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.071921" elapsed="0.001000">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.072921" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.071921" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.072921" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.072921" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.073919" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.073919" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.073919" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.072921" elapsed="0.000998"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.072921" elapsed="0.000998"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.072921" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.072921" elapsed="0.000998"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.071921" elapsed="0.001998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.074428" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.074428" level="INFO">Checking if errors:[] is equal to ['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.075450" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.001022"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.075450" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.076518" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.001068"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.001068"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.075450" elapsed="0.001068"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.002090"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.002090"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.074428" elapsed="0.002090"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.076518" level="FAIL">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.076518" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.076518" elapsed="0.000000">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.076518" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.076518" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.076518" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.077518" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.076518" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.076518" elapsed="0.001000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.076518" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.077518" level="FAIL">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.078889" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.077518" elapsed="0.001371">'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.078889" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.077518" elapsed="0.001371"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.077518" elapsed="0.001371"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.069713" elapsed="0.009176"/>
</for>
<var name="${iter}">['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']</var>
<status status="PASS" start="2024-12-04T20:05:32.069713" elapsed="0.009176"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.078889" level="INFO">['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.078889" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.080329" level="FAIL">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.080329" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.080329" elapsed="0.000000">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.080329" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.080329" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.080329" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.080329" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.081342" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.081342" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.081342" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.081342" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.081342" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.080329" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.080329" elapsed="0.001013"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.080329" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.082341" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.083340" level="INFO">Checking if errors:[] is equal to ['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.083340" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.083340" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.083340" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.083340" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.083340" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.084357" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.084357" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.084357" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.083340" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.083340" elapsed="0.001017"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.002016"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.002016"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.082341" elapsed="0.002016"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.084357" level="FAIL">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.085346" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.084357" elapsed="0.000989">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.085346" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.084357" elapsed="0.000989"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.085346" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.084357" elapsed="0.000989"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.086410" level="FAIL">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.086410" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.086410" elapsed="0.000000">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.086410" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.086410" elapsed="0.000519"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.086929" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.085346" elapsed="0.001583"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.088100" level="FAIL">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.088100" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.088100" elapsed="0.000000">'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.088100" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.088100" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.088100" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.088100" elapsed="0.001123"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.088100" elapsed="0.001123"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.088100" elapsed="0.001123"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.078889" elapsed="0.010334"/>
</for>
<var name="${iter}">['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']</var>
<status status="PASS" start="2024-12-04T20:05:32.078889" elapsed="0.010334"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.089223" level="INFO">['GRE-1.nbnco.net.au']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.089223" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.090111" level="FAIL">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.090111" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.090111" elapsed="0.000000">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.090111" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.090111" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.090111" elapsed="0.001043"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.090111" elapsed="0.001043"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.090111" elapsed="0.001043"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.091154" level="FAIL">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.091154" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.091154" elapsed="0.000000">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.091154" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.091154" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.092585" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.091154" elapsed="0.001431"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.091154" elapsed="0.001431"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.091154" elapsed="0.001431"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.092585" level="FAIL">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.092585" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.092585" elapsed="0.000000">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.093608" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.092585" elapsed="0.001023"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.093608" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.092585" elapsed="0.001023"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.094608" level="FAIL">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.094608" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.094608" elapsed="0.000000">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.094608" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.094608" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.095614" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.095614" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.001006"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.001006"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.094608" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.094608" elapsed="0.001006"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.093608" elapsed="0.002006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.096610" level="FAIL">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.096610" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.095614" elapsed="0.000996">'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.096610" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.095614" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.097650" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.096610" elapsed="0.001040"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.096610" elapsed="0.001040"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.095614" elapsed="0.002036"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.089223" elapsed="0.008427"/>
</for>
<var name="${iter}">['GRE-1.nbnco.net.au']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-04T20:05:32.089223" elapsed="0.008427"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.098663" level="INFO">['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.097650" elapsed="0.001013"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.098663" level="FAIL">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.098663" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.098663" elapsed="0.000000">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.098663" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.098663" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.099669" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.098663" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.098663" elapsed="0.001006"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.098663" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.100610" level="FAIL">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.100610" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.100610" elapsed="0.000000">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.100610" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.099669" elapsed="0.000941"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.101609" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.100610" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.100610" elapsed="0.000999"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.099669" elapsed="0.001940"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.101609" level="FAIL">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.101609" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.101609" elapsed="0.000000">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.101609" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.101609" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.101609" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.102618" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.101609" elapsed="0.001009"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.101609" elapsed="0.001009"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.101609" elapsed="0.001009"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.102618" level="FAIL">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.102618" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.102618" elapsed="0.000000">'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.102618" level="INFO">${RESP} = ('FAIL', "'['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.102618" elapsed="0.000991"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.103609" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.103609" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.104769" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.104769" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.104769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.103609" elapsed="0.001160"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.103609" elapsed="0.001160"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.103609" elapsed="0.001160"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.103609" elapsed="0.001160"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.102618" elapsed="0.002151"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.105779" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.105779" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.105779" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.106778" level="INFO">Checking if errors:[] is equal to ['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.106778" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.106778" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.107779" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.106778" elapsed="0.001001"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.105779" elapsed="0.002000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.105779" elapsed="0.002000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.104769" elapsed="0.003010"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.098663" elapsed="0.009116"/>
</for>
<var name="${iter}">['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]</var>
<status status="PASS" start="2024-12-04T20:05:32.097650" elapsed="0.010129"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.107779" level="INFO">['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.108842" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.108842" level="INFO">Checking if errors:[] is equal to ['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.109846" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.001004"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.109846" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.109846" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.109846" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.109846" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.109846" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.109846" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.109846" elapsed="0.000933"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.001937"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.108842" elapsed="0.001937"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.003000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.110779" level="FAIL">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.110779" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.110779" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.110779" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.110779" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.110779" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.111798" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.110779" elapsed="0.001019"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.110779" elapsed="0.001019"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.110779" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.112788" level="FAIL">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.112788" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.111798" elapsed="0.000990">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.112788" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.111798" elapsed="0.000990"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.112788" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.111798" elapsed="0.002000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.113798" level="FAIL">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.113798" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.113798" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.113798" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.113798" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.114806" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.113798" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.113798" elapsed="0.001008"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.113798" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.115810" level="FAIL">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.115810" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.114806" elapsed="0.001004">'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.115810" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.114806" elapsed="0.001004"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.115810" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.114806" elapsed="0.001004"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.008031"/>
</for>
<var name="${iter}">['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']</var>
<status status="PASS" start="2024-12-04T20:05:32.107779" elapsed="0.008031"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.116799" level="INFO">['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.115810" elapsed="0.000989"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.116799" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.116799" level="INFO">Checking if errors:[] is equal to ['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.117801" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.117801" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.118800" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.117801" elapsed="0.000999"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.002001"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.002001"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.002001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.118800" level="FAIL">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.118800" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.118800" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.118800" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.118800" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.120343" level="FAIL">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.120343" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.120343" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.120343" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.120343" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.121360" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.120343" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.122429" level="FAIL">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.122429" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.122429" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.122429" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.122429" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.123430" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.122429" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.122429" elapsed="0.001001"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.122429" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.124422" level="FAIL">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.124422" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.123430" elapsed="0.000992">'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.124422" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.123430" elapsed="0.000992"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.124422" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.123430" elapsed="0.000992"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.116799" elapsed="0.007623"/>
</for>
<var name="${iter}">['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']</var>
<status status="PASS" start="2024-12-04T20:05:32.115810" elapsed="0.008612"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.125418" level="INFO">['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.124422" elapsed="0.000996"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.125418" level="FAIL">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.125418" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.125418" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.125418" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.125418" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.126431" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.001013"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.001013"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.125418" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.125418" elapsed="0.001013"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.125418" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.126431" level="FAIL">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.126431" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.126431" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.126431" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.126431" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.126431" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.127415" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.127415" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.127415" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.127659" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.127415" elapsed="0.000244"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.127415" elapsed="0.000244"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.126431" elapsed="0.001228"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.126431" elapsed="0.001228"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.126431" elapsed="0.001228"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.128165" level="FAIL">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.128165" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.127659" elapsed="0.000506">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.128165" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.127659" elapsed="0.000506"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.127659" elapsed="0.000506"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.128165" level="FAIL">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.128165" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.128165" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.128165" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.128165" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.128165" elapsed="0.001009"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.128165" elapsed="0.001009"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.128165" elapsed="0.001009"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.129174" level="FAIL">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.129174" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.129174" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.129174" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.130173" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.130173" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.130173" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.129174" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.129174" elapsed="0.000999"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.129174" elapsed="0.000999"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.125418" elapsed="0.004755"/>
</for>
<var name="${iter}">['vGRE-0.nbnco.com.au']:reachability_state:['CONN_STATE_UNKNOWN']</var>
<status status="PASS" start="2024-12-04T20:05:32.124422" elapsed="0.005751"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.130173" level="INFO">['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.130173" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.130173" level="FAIL">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.130173" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.130173" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.130173" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.130173" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.130173" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.131172" level="FAIL">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.131172" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.131172" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.131172" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.131172" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.131172" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.131172" elapsed="0.000998"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.131172" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.132170" level="FAIL">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.132170" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.132170" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.132170" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.132170" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.133364" level="FAIL">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.133364" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.133364" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.133364" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.133364" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.134392" level="FAIL">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<msg time="2024-12-04T20:05:32.134392" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.133364" elapsed="0.001028">'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-04T20:05:32.134392" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.133364" elapsed="0.001028"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.133364" elapsed="0.001028"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.130173" elapsed="0.004219"/>
</for>
<var name="${iter}">['vGRE-0.nbnco.com.au']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-04T20:05:32.130173" elapsed="0.004219"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.134392" level="INFO">['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.135376" level="FAIL">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DOWN'</msg>
<msg time="2024-12-04T20:05:32.135376" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.135376" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-04T20:05:32.135376" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.000984"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.135376" level="FAIL">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'UNREACHABLE'</msg>
<msg time="2024-12-04T20:05:32.135376" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.135376" elapsed="0.000000">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-04T20:05:32.135376" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.136891" level="FAIL">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'ERROR'</msg>
<msg time="2024-12-04T20:05:32.136891" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.135376" elapsed="0.001515">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-04T20:05:32.136891" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.001515"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.136891" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-04T20:05:32.135376" elapsed="0.001515"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.137902" level="FAIL">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DEGRADED'</msg>
<msg time="2024-12-04T20:05:32.137902" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: '['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.136891" elapsed="0.001011">'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-04T20:05:32.137902" level="INFO">${RESP} = ('FAIL', "'['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.136891" elapsed="0.001011"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-04T20:05:32.136891" elapsed="0.001011"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.137902" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.138908" level="INFO">Checking if errors:[] is equal to ['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<msg time="2024-12-04T20:05:32.138908" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.138908" level="INFO">${MSG} = --Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE'...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.138908" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.138908" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.001006"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-04T20:05:32.137902" elapsed="0.001006"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.004516"/>
</for>
<var name="${iter}">['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]</var>
<status status="PASS" start="2024-12-04T20:05:32.134392" elapsed="0.004516"/>
</iter>
<var>${iter}</var>
<value>@{CNC_DEVICES_HEALTH}</value>
<status status="PASS" start="2024-12-04T20:05:32.030805" elapsed="0.109100"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.139905" level="INFO">Length is 9.</msg>
<msg time="2024-12-04T20:05:32.139905" level="INFO">${FAIL_COUNT} = 9</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.139905" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.139905" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:32.139905" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.139905" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.139905" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.139905" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.139905" level="INFO">List length is 9 and it contains following items:
0: ---
1: ---
2: ---
3: ---
4: ---
5: ---
6: ---
7: ---
8: ---</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.139905" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.139905" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.139905" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Fail" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.139905" level="FAIL">Failures were seen on one or more devices.</msg>
<msg time="2024-12-04T20:05:32.139905" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: Failures were seen on one or more devices.</msg>
<arg>Failures were seen on one or more devices.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.139905" elapsed="0.000000">Failures were seen on one or more devices.</status>
</kw>
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Failures were seen on one or more devices.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.139905" elapsed="0.000000">Failures were seen on one or more devices.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nNo device errors detect. Errors:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.140903" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the CNC services/applications based on the suite variable of ``CNC_DEVICES_HEALTH``</doc>
<status status="FAIL" start="2024-12-04T20:05:32.029781" elapsed="0.111122">Failures were seen on one or more devices.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:32.140903" level="INFO">Set test message to:
--Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]

Failures were seen on one or more devices.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:32.140903" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Device health and state info is correct as per the file spec [cnc-devices.txt]</doc>
<tag>DEVICE</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="FAIL" start="2024-12-04T20:05:32.028757" elapsed="0.112146">--Validate CNC Device Health--
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
**FAIL: [nbnlab]:['GRE-2.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.106:22] : Host is unreachable: /10.67.22.106:22']]
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:operational_state:['ROBOT_OPER_STATE_ERROR']
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:reachability_state:['CONN_STATE_UNREACHABLE']
**FAIL: [nbnlab]:['GRE-1.nbnco.net.au']:errors:[['Major - Error connecting to device [Host: 10.67.22.115:22] : Host is unreachable: /10.67.22.115:22']]
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:admin_state:['ROBOT_ADMIN_STATE_DOWN']
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:operational_state:['ROBOT_OPER_STATE_ADMIN_DOWN']
**FAIL: [nbnlab]:['vGRE-0.nbnco.com.au']:errors:[['Info - Node Operational State move to down.']]

Failures were seen on one or more devices.</status>
</test>
<test id="s1-t34" name="Validate CNC SWIM Images" line="269">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:32.141903" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.141903" elapsed="0.000000"/>
</kw>
<kw name="validate-swim-images" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.142905" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.142905" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.142905" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.142905" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-04T20:05:32.142905" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-images.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\nbnlab\cnc-images.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-04T20:05:32.143907" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.001002"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-images.txt</arg>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.001002"/>
</kw>
<msg time="2024-12-04T20:05:32.143907" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-images.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.001002"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.143907" level="INFO">${MSG} = --Validate CNC images--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC images--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.143907" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-04T20:05:32.144940" level="INFO">0 lines returned</msg>
<msg time="2024-12-04T20:05:32.144940" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.001033"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SWIM_IMAGES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.001033"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.143907" elapsed="0.001033"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-04T20:05:32.144940" level="FAIL">[ ] does not contain value '[]'.</msg>
<msg time="2024-12-04T20:05:32.144940" level="DEBUG">Traceback (most recent call last):
  None
AssertionError: [ ] does not contain value '[]'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-04T20:05:32.144940" elapsed="0.000000">[ ] does not contain value '[]'.</status>
</kw>
<msg time="2024-12-04T20:05:32.144940" level="INFO">${RESP} = ('FAIL', "[ ] does not contain value '[]'.")</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.144940" level="INFO">${MSG} = --Validate CNC images--

WARN: [] Not in valid list.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Not in valid list.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</if>
<var name="${item}">[]</var>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>${CNC_SWIM_IMAGES}</value>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.144940" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:32.144940" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.144940" level="INFO">Length is 1.</msg>
<msg time="2024-12-04T20:05:32.144940" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.144940" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.146457" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.146457" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-04T20:05:32.146457" level="INFO">List has one item:
FAIL:[]</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>Differences between detected and actual applications were encountered.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.146457" level="INFO">Execution passed with message:
There are applications running that are not in the valid list.</msg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>There are applications running that are not in the valid list.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.146457" elapsed="0.000000">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.146457" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the SWIM images based on the suite variable of ``CNC_SWIM_IMAGES``</doc>
<status status="PASS" start="2024-12-04T20:05:32.142905" elapsed="0.003552">There are applications running that are not in the valid list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:32.147470" level="INFO">Set test message to:
--Validate CNC images--

WARN: [] Not in valid list.
There are applications running that are not in the valid list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:32.147470" elapsed="0.000000"/>
</kw>
<doc>Validate Software Image repository as per the file spec [cnc-images.txt]</doc>
<tag>SWIM</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:32.140903" elapsed="0.006567">--Validate CNC images--

WARN: [] Not in valid list.
There are applications running that are not in the valid list.</status>
</test>
<test id="s1-t35" name="Validate CNC Application Health" line="276">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-04T20:05:32.148494" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.147470" elapsed="0.001024"/>
</kw>
<kw name="validate-cnc-application-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.148494" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.148494" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.148494" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.148494" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.148494" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.148494" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.149478" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.149478" level="INFO">Length is 0.</msg>
<msg time="2024-12-04T20:05:32.149478" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${CNC_APP_DEGRADED}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.149478" level="INFO">${MSG} = --Validate CNC app health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC app health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}FAIL: [${ENV}]:${item} is Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>FAIL</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_APP_DEGRADED}</value>
<status status="NOT RUN" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</for>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} applications degraded.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.149478" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.149478" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-infra</var>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.001032"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.150510" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.150510" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-ca</var>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.150510" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.150510" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-coe</var>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
PASS: [nbnlab]:capp-common-ems-services is Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000958"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-common-ems-services</var>
<status status="PASS" start="2024-12-04T20:05:32.150510" elapsed="0.000958"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
PASS: [nbnlab]:capp-common-ems-services is Healthy
PASS: [nbnlab]:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-cat</var>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">${MSG} = --Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
PASS: [nbnlab]:capp-common-ems-services is Healthy
PASS: [nbnlab]:...</msg>
<arg>${MSG}</arg>
<arg>${MSG}PASS: [${ENV}]:${item} is Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.151468" level="INFO">Set tag 'PASS'.</msg>
<arg>PASS</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-hi</var>
<status status="PASS" start="2024-12-04T20:05:32.151468" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_APP_HEALTHY}</value>
<status status="PASS" start="2024-12-04T20:05:32.149478" elapsed="0.001990"/>
</for>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.152507" level="INFO">Execution passed with message:
0 applications were listed as degraded.</msg>
<arg>${FAIL_COUNT} applications were listed as degraded.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-04T20:05:32.152507" elapsed="0.000000">0 applications were listed as degraded.</status>
</kw>
<arg>${FAIL_COUNT} == 0</arg>
<arg>pass execution</arg>
<arg>${FAIL_COUNT} applications were listed as degraded.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-04T20:05:32.152507" elapsed="0.000000">0 applications were listed as degraded.</status>
</kw>
<var>${RESP}</var>
<doc>Validates the application health based on the suite variable of ``CNC_APP_DEGRADED``</doc>
<status status="PASS" start="2024-12-04T20:05:32.148494" elapsed="0.004013">0 applications were listed as degraded.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-04T20:05:32.152507" level="INFO">Set test message to:
--Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
PASS: [nbnlab]:capp-common-ems-services is Healthy
PASS: [nbnlab]:capp-cat is Healthy
PASS: [nbnlab]:capp-hi is Healthy

0 applications were listed as degraded.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-04T20:05:32.152507" elapsed="0.000000"/>
</kw>
<doc>Ensure all CNC applications are healthy</doc>
<tag>APPLICATIONS</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-04T20:05:32.147470" elapsed="0.005037">--Validate CNC app health--
PASS: [nbnlab]:capp-infra is Healthy
PASS: [nbnlab]:capp-ca is Healthy
PASS: [nbnlab]:capp-coe is Healthy
PASS: [nbnlab]:capp-common-ems-services is Healthy
PASS: [nbnlab]:capp-cat is Healthy
PASS: [nbnlab]:capp-hi is Healthy

0 applications were listed as degraded.</status>
</test>
<kw name="Suite Teardown" owner="CW_Keywords" type="TEARDOWN">
<kw name="Delete CNC Token" owner="CW_Keywords">
<kw name="Log Variables" owner="BuiltIn">
<arg>level=TRACE</arg>
<doc>Logs all variables in the current scope with given log level.</doc>
<status status="PASS" start="2024-12-04T20:05:32.154571" elapsed="0.001001"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.156573" level="INFO">${myurl} = /crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0</msg>
<var>${myurl}</var>
<arg>/crosswork/sso/v1/tickets/${myTGT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-04T20:05:32.156573" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-04T20:05:32.156573" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.156573" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.156573" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-04T20:05:32.156573" elapsed="0.000997"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:32.243253" level="DEBUG">https://10.67.22.45:30603 "DELETE /crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 HTTP/11" 200 0</msg>
<msg time="2024-12-04T20:05:32.244247" level="INFO">DELETE Request : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 path_url=/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6IjJlOTNiNzE3LTM1N2MtNDRlZS1iMGM4LTZlZGZhZGViYWZjMCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxMC4yNDQuNjUuMCIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMDRUMTA6MDU6MTIuMTc1NjExMTkzWiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly8xMC42Ny4yMi40NTozMDYwMy9jcm9zc3dvcmsvc3NvIiwidXNlckFnZW50IjoicHl0aG9uLXJlcXVlc3RzLzIuMzIuMyIsImNyZWRlbnRpYWxUeXBlIjoiVXNlcm5hbWVQYXNzd29yZENyZWRlbnRpYWwiLCJhdWQiOiJodHRwczovLzEuMi4zLjQvYXBwLWRhc2hib2FyZC9hcHAtZGFzaGJvYXJkIiwiYXV0aGVudGljYXRpb25NZXRob2QiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiZ2VvTG9jYXRpb24iOiJ1bmtub3duIiwiZGV2aWNlQWNjZXNzR3JvdXBzIjoiQUxMLUFDQ0VTUyIsInNlcnZlcklwQWRkcmVzcyI6IjEwLjI0NC4xMDYuMTYwIiwibG9uZ1Rlcm1BdXRoZW50aWNhdGlvblJlcXVlc3RUb2tlblVzZWQiOmZhbHNlLCJjaGFuZ2VfcHdkIjoiZmFsc2UiLCJleHAiOjE3MzMzMzU1MTIsImlhdCI6MTczMzMwNjcxMiwianRpIjoiU1QtOTEtblFMNmJQaVZOZFROUGkySklnSkU5MDlrYmRyc1NUNWpKcjd5RU9rTEFGS3NzLWs2NEtmZHc3T1V0NmhCTVpZN1pMS1JkeUxITGdTd0o5SU5JNTRkQnlxWjI0dWJGWVVSYXB3d1lsbVU0U0ZaMkctNkpPekpySUdBTm8tSGV3S28tTXIyMy1xV2pjT1ktNXpFNnJlcFl3eFRQTFR4bTRFci1jYXMtMCIsInVzZXJuYW1lIjoiYWRtaW4ifQ.KPrfVK542LhTqOCESrdyR6dJPZsS7yCtcUuCd4TD4KMN8hwyFSBFNyj-RZkiAacN-kQ__vJ3C0IkOfLkZsUS4A', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:32.244247" level="INFO">DELETE Response : url=https://10.67.22.45:30603/crosswork/sso/v1/tickets/TGT-90-G8V2MY-wmOYf-5TRLGv4dQYPC0a8L8dgqm1ZzPWJAf-Telbesas2iace9C3wp1e2Gw0-cas-0 
 status=200, reason=OK 
 headers={'Date': 'Wed, 04 Dec 2024 10:05:19 GMT', 'Content-Length': '0', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'Requestid': 'f83c8c13-aa29-4ee2-b264-c311e12e7942', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=None 
 </msg>
<msg time="2024-12-04T20:05:32.244247" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.22.45'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-04T20:05:32.245249" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-04T20:05:32.157570" elapsed="0.087679"/>
</kw>
<doc>Dispose of CNC token</doc>
<status status="PASS" start="2024-12-04T20:05:32.154571" elapsed="0.090678"/>
</kw>
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-04T20:05:32.245249" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-04T20:05:32.245249" elapsed="0.001052"/>
</kw>
<tag>teardown</tag>
<doc>Dispose of Sessions</doc>
<status status="PASS" start="2024-12-04T20:05:32.153510" elapsed="0.092791"/>
</kw>
<doc>System, environment and configuration baseline and verification.</doc>
<status status="FAIL" start="2024-12-04T20:05:23.961110" elapsed="8.285191"/>
</suite>
<statistics>
<total>
<stat pass="34" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="2" fail="0" skip="0">ALARMS</stat>
<stat pass="4" fail="0" skip="0">APPLICATIONS</stat>
<stat pass="1" fail="0" skip="0">AUTH</stat>
<stat pass="2" fail="0" skip="0">CREDENTIALS</stat>
<stat pass="18" fail="0" skip="0">DATA-COLLECTION</stat>
<stat pass="5" fail="0" skip="0">DATA_GATEWAY</stat>
<stat pass="3" fail="1" skip="0">DEVICE</stat>
<stat pass="1" fail="0" skip="0">KPIS</stat>
<stat pass="2" fail="0" skip="0">LICENSING</stat>
<stat pass="2" fail="0" skip="0">NSO</stat>
<stat pass="11" fail="1" skip="0">PASS</stat>
<stat pass="3" fail="0" skip="0">PLATFORM</stat>
<stat pass="2" fail="0" skip="0">PROVIDERS</stat>
<stat pass="4" fail="0" skip="0">SERVICES</stat>
<stat pass="2" fail="0" skip="0">SETUP-TASKS</stat>
<stat pass="2" fail="0" skip="0">SWIM</stat>
<stat pass="1" fail="0" skip="0">SYSLOG</stat>
<stat pass="14" fail="1" skip="0">VALIDATE</stat>
</tag>
<suite>
<stat pass="34" fail="1" skip="0" id="s1" name="Cnc">Cnc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
