<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.12.8 on win32)" generated="2024-12-12T15:58:28.479226" rpa="false" schemaversion="5">
<suite id="s1" name="Cnc" source="C:\temp\RoboWorks\Suites\crosswork\cnc.robot">
<kw name="Suite Setup" owner="CW_Keywords" type="SETUP">
<kw name="Create Hosts" owner="CW_Environments">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.985332" level="INFO">${CW_ENDPOINTS} = {}</msg>
<var>${CW_ENDPOINTS}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.985332" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.985332" level="INFO">${admin_default} = {"username":"admin","password":"mypassword"}</msg>
<var>${admin_default}</var>
<arg>{"username":"admin","password":"mypassword"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.985332" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.985332" level="INFO">${admin_default_2} = {"username":"admin","password":"mypassword"}</msg>
<var>${admin_default_2}</var>
<arg>{"username":"admin","password":"mypassword"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.985332" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>mycnclablocal</arg>
<arg>{"host":"192.168.254.233","protocol":"https","port":"30605","auth":${admin_default}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.985332" elapsed="0.000999"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>dclouddemo</arg>
<arg>{"host":"198.18.134.219","protocol":"https","port":"30603","auth":${admin_default_2}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.986331" level="INFO">${nbnlab} = {"username":"admin","password":"EyeManage20!"}</msg>
<var>${nbnlab}</var>
<arg>{"username":"admin","password":"EyeManage20!"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.986331" level="INFO">${declouddefault} = {"username":"admin","password":"cRo55work!"}</msg>
<var>${declouddefault}</var>
<arg>{"username":"admin","password":"cRo55work!"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>nbnlab</arg>
<arg>{"host":"10.67.22.45","protocol":"https","port":"30603","auth":${nbnlab}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${CW_ENDPOINTS}</arg>
<arg>dclouddemo</arg>
<arg>{"host":"198.18.134.219","protocol":"https","port":"30603","auth":${declouddefault}}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.986331" level="INFO">${CW_ENDPOINTS} = {'mycnclablocal': '{"host":"192.168.254.233","protocol":"https","port":"30605","auth":{"username":"admin","password":"mypassword"}}', 'dclouddemo': '{"host":"198.18.134.219","protocol":"https","port":...</msg>
<arg>${CW_ENDPOINTS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.000000"/>
</kw>
<doc>Creates the CNC host and credential definitions</doc>
<status status="PASS" start="2024-12-12T15:58:28.985332" elapsed="0.000999"/>
</kw>
<kw name="Get Current DTTM" owner="CW_Keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.987332" level="INFO">LOGLEVEL:INFO</msg>
<arg>LOGLEVEL:${LOG LEVEL}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.001001"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-12-12T15:58:28.987332" level="INFO">${now} = 20241212-155828</msg>
<var>${now}</var>
<arg>result_format=%Y%m%d-%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-12-12T15:58:28.987332" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.987332" level="INFO">${now} = 20241212-155828</msg>
<arg>${now}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:28.987332" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nCurrent Time: ${now}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-12-12T15:58:28.987332" elapsed="0.000000"/>
</kw>
<doc>Gets the current time as a reference</doc>
<status status="PASS" start="2024-12-12T15:58:28.986331" elapsed="0.001001"/>
</kw>
<tag>setup</tag>
<doc>Load environments and get current time stamp</doc>
<status status="PASS" start="2024-12-12T15:58:28.984349" elapsed="0.002983"/>
</kw>
<test id="s1-t1" name="Logon CNC" line="29">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:28.988333" level="INFO">${MSG} = ENVIRONMENT:dclouddemo
</msg>
<arg>${MSG}</arg>
<arg>ENVIRONMENT:${ENV}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:28.987332" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Set Variable" owner="BuiltIn">
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.988333" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:28.988333" level="INFO">${RESP} = ('PASS', '{"host":"198.18.134.219","protocol":"https","port":"30603","auth":{"username":"admin","password":"cRo55work!"}}')</msg>
<var>${RESP}</var>
<arg>set variable</arg>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:28.988333" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.989332" level="INFO">{'mycnclablocal': '{"host":"192.168.254.233","protocol":"https","port":"30605","auth":{"username":"admin","password":"mypassword"}}', 'dclouddemo': '{"host":"198.18.134.219","protocol":"https","port":"30603","auth":{"username":"admin","password":"cRo55work!"}}', 'nbnlab': '{"host":"10.67.22.45","protocol":"https","port":"30603","auth":{"username":"admin","password":"EyeManage20!"}}'}</msg>
<arg>${CW_ENDPOINTS}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Run Keyword And Return Status" owner="BuiltIn">
<kw name="Logon to CNC" owner="CW_Keywords">
<kw name="Log Variables" owner="BuiltIn">
<arg>level=TRACE</arg>
<doc>Logs all variables in the current scope with given log level.</doc>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.001002"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.990334" level="INFO">${data} = {'host': '198.18.134.219', 'protocol': 'https', 'port': '30603', 'auth': {'username': 'admin', 'password': 'cRo55work!'}}</msg>
<var>${data}</var>
<arg>json.loads($data)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:28.990334" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${serverURL} = https://198.18.134.219:30603</msg>
<var>${serverURL}</var>
<arg>${data["protocol"]}://${data["host"]}:${data["port"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.990334" elapsed="0.000999"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${auth} = {"username":"admin","password":"cRo55work!"}</msg>
<var>${auth}</var>
<arg>{"username":"${data["auth"]["username"]}","password":"${data["auth"]["password"]}"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${headers} = {'Content-type': 'application/x-www-form-urlencoded'}</msg>
<var>${headers}</var>
<arg>Content-type=application/x-www-form-urlencoded</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:28.991333" level="INFO">Creating Session using : alias=cw, url=https://198.18.134.219:30603, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>alias=cw</arg>
<arg>url=${serverURL}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${auth} = /crosswork/sso/v1/tickets?username=admin&amp;password=cRo55work!</msg>
<var>${auth}</var>
<arg>/crosswork/sso/v1/tickets?username=${data["auth"]["username"]}&amp;password=${data["auth"]["password"]}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${tgt} = /crosswork/sso/v1/tickets</msg>
<var>${tgt}</var>
<arg>/crosswork/sso/v1/tickets</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:28.991333" level="INFO">${payload} = service=https://1.2.3.4/app-dashboard/app-dashboard</msg>
<var>${payload}</var>
<arg>service=https://1.2.3.4/app-dashboard/app-dashboard</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:29.710537" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets?username=admin&amp;password=cRo55work! 
 path_url=/crosswork/sso/v1/tickets?username=admin&amp;password=cRo55work! 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/x-www-form-urlencoded', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:29.710537" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets?username=admin&amp;password=cRo55work! 
 status=201, reason=Created 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:29 GMT', 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'Content-Length': '95', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Location': 'https://198.18.134.219:5489/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc', 'Pragma': 'no-cache', 'Requestid': 'a4a05832-6cfc-4aff-aa72-1ce3ee9baa91', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 </msg>
<msg time="2024-12-12T15:58:29.710537" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:29.710537" level="INFO">${resp} = &lt;Response [201]&gt;</msg>
<var>${resp}</var>
<arg>cw</arg>
<arg>${serverURL}${auth}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=201</arg>
<arg>verify=${False}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:28.991333" elapsed="0.719204"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.711547" level="INFO">${myTGT} = TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc</msg>
<var>${myTGT}</var>
<arg>${resp.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:29.710537" elapsed="0.001010"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:29.878411" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 path_url=/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/x-www-form-urlencoded', 'Content-Length': '51'} 
 body=service=https://1.2.3.4/app-dashboard/app-dashboard 
 </msg>
<msg time="2024-12-12T15:58:29.878411" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:29 GMT', 'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8', 'Content-Length': '1440', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'Requestid': '010c02c5-e868-43be-87c2-2063f7bcde1c', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw 
 </msg>
<msg time="2024-12-12T15:58:29.878411" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:29.878411" level="INFO">${resp2} = &lt;Response [200]&gt;</msg>
<var>${resp2}</var>
<arg>cw</arg>
<arg>${serverURL}${tgt}/${resp.text}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>verify=${False}</arg>
<arg>data=${payload}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:29.711547" elapsed="0.166864"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.878411" level="INFO">${token} = eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGF...</msg>
<var>${token}</var>
<arg>${resp2.text}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:29.878411" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.879413" level="INFO">${token} = eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGF...</msg>
<arg>${token}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:29.878411" elapsed="0.001002"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.879413" level="INFO">${myTGT} = TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc</msg>
<arg>${myTGT}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:29.879413" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.879413" level="INFO">TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc</msg>
<arg>${myTGT}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:29.879413" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.879413" level="INFO">${MSG} = ENVIRONMENT:dclouddemo
HOST: https://198.18.134.219:30603</msg>
<arg>${MSG}</arg>
<arg>${MSG}HOST: ${serverURL}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:29.879413" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.879413" level="INFO">${MSG} = ENVIRONMENT:dclouddemo
HOST: https://198.18.134.219:30603
USER: admin</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nUSER: ${data["auth"]["username"]}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:29.879413" elapsed="0.000000"/>
</kw>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Retrieves the CNC Authentication token</doc>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.890081"/>
</kw>
<msg time="2024-12-12T15:58:29.879413" level="INFO">${logon} = True</msg>
<var>${logon}</var>
<arg>Logon to CNC</arg>
<arg>${CW_ENDPOINTS["${ENV}"]}</arg>
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.890081"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>not ${logon}</arg>
<arg>Fatal Error</arg>
<arg>Failed to authenticate to ${data} or is not reacheable. Terminating test suite.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:29.879413" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.891079"/>
</branch>
<branch type="ELSE">
<kw name="Fatal Error" owner="BuiltIn">
<arg>Unable to resolve ENVIRONMENT:${ENV}. Terminating test suite.</arg>
<doc>Stops the whole test execution.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:29.880411" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:29.880411" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:28.989332" elapsed="0.891079"/>
</if>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:29.880411" level="INFO">Set test message to:
ENVIRONMENT:dclouddemo
HOST: https://198.18.134.219:30603
USER: admin
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:29.880411" elapsed="0.000000"/>
</kw>
<doc>Initial Authentication for CNC session</doc>
<tag>AUTH</tag>
<tag>SETUP-TASKS</tag>
<status status="PASS" start="2024-12-12T15:58:28.987332" elapsed="0.893079">ENVIRONMENT:dclouddemo
HOST: https://198.18.134.219:30603
USER: admin
</status>
</test>
<test id="s1-t2" name="Get Current Time" line="46">
<kw name="Get Current DTTM" owner="CW_Keywords">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.881411" level="INFO">LOGLEVEL:INFO</msg>
<arg>LOGLEVEL:${LOG LEVEL}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:29.881411" elapsed="0.000000"/>
</kw>
<kw name="Get Current Date" owner="DateTime">
<msg time="2024-12-12T15:58:29.881411" level="INFO">${now} = 20241212-155829</msg>
<var>${now}</var>
<arg>result_format=%Y%m%d-%H%M%S</arg>
<doc>Returns current local or UTC time with an optional increment.</doc>
<status status="PASS" start="2024-12-12T15:58:29.881411" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.881411" level="INFO">${now} = 20241212-155829</msg>
<arg>${now}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:29.881411" elapsed="0.000000"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>\nCurrent Time: ${now}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-12-12T15:58:29.881411" elapsed="0.000999"/>
</kw>
<doc>Gets the current time as a reference</doc>
<status status="PASS" start="2024-12-12T15:58:29.881411" elapsed="0.000999"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:29.882410" level="INFO">Set test message to:
20241212-155829</msg>
<arg>${now}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:29.882410" elapsed="0.000000"/>
</kw>
<doc>Get a suite wide date and time to use as a unique identifier</doc>
<tag>SETUP-TASKS</tag>
<status status="PASS" start="2024-12-12T15:58:29.880411" elapsed="0.001999">20241212-155829</status>
</test>
<test id="s1-t3" name="Retrieve Platform Summary" line="52">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:29.883429" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:29.882410" elapsed="0.001019"/>
</kw>
<kw name="get-cnc-platform" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.883429" level="INFO">${myurl} = /crosswork/platform/v1/node-manager/clusters</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v1/node-manager/clusters</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:29.883429" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.883429" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:29.883429" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:29.883429" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:29.883429" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.884451" level="INFO">@{CNC_PLATFORM} = [ ]</msg>
<var>@{CNC_PLATFORM}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:29.884451" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.884451" level="INFO">@{FIELDS} = [ SchemaVersion | CNC_VM_Image | ClusterIPStack | ManagementVIP | ManagementIPNetmask | ManagementIPGateway | DataVIP | DataIPNetmask | DataIPGateway | DomainName | NTP | DNS | RamDiskSize | ThinProvi...</msg>
<var>@{FIELDS}</var>
<arg>SchemaVersion</arg>
<arg>CNC_VM_Image</arg>
<arg>ClusterIPStack</arg>
<arg>ManagementVIP</arg>
<arg>ManagementIPNetmask</arg>
<arg>ManagementIPGateway</arg>
<arg>DataVIP</arg>
<arg>DataIPNetmask</arg>
<arg>DataIPGateway</arg>
<arg>DomainName</arg>
<arg>NTP</arg>
<arg>DNS</arg>
<arg>RamDiskSize</arg>
<arg>ThinProvisioned</arg>
<arg>Timezone</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:29.884451" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:29.884451" level="INFO">${description} = Retrieve Platform Summary</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:29.884451" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:30.053668" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/platform/v1/node-manager/clusters 
 path_url=/crosswork/platform/v1/node-manager/clusters 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:30.054663" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/platform/v1/node-manager/clusters 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:30 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '1380', 'Connection': 'keep-alive', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"CwClusterAndActions":{"1node-cluster":{"CwCluster":{"Cw_VM_Image":"signed-cw-na-platform-7.0.0-85-release700-240823","ClusterIPStack":"IPv4","ManagementVIP":"198.18.134.219","ManagementIPNetmask":"255.255.192.0","ManagementIPGateway":"198.18.128.1","DataVIP":"198.18.2.219","DataIPNetmask":"255.255.255.0","DataIPGateway":"198.18.2.1","DNS":"198.18.133.1","DomainName":"demo.dcloud.cisco.com","CWPassword":"*****","VMSize":"DCloud","NTP":"ntp.demo.dcloud.cisco.com","ClusterHostName":"","ClusterName":"1node-cluster","ClusterVMs":["0"],"SchemaVersion":"7.0.0","ManagementVIPName":"crosswork","DataVIPName":"","EnableHardReservations":false,"ManagerDataFsSize":485,"RamDiskSize":4,"BackupMinPercent":35,"LogFsSize":20,"WorkerDataFsSize":485,"ThinProvisioned":true,"cluster_recommendation":{"recommendation":"","action":{"action_name":"None","action_id":"NoAction"}},"K8sServiceNetwork":"10.96.0.0","K8sPodNetwork":"10.244.0.0","Timezone":"","ManagementVIPv4":"","ManagementIPv4Netmask":"","ManagementIPv4Gateway":"","DataVIPv4":"","DataIPv4Netmask":"","DataIPv4Gateway":"","DNSv4":"","ManagementVIPv6":"","ManagementIPv6Netmask":"","ManagementIPv6Gateway":"","DataVIPv6":"","DataIPv6Netmask":"","DataIPv6Gateway":"","DNSv6":""},"ClusterActions":{"Actions":{"deployVM":true,"editDC":true,"exportInventory":true,"getSampleInventory":true,"importInventory":true,"viewJobs":true}}}}} 
 </msg>
<msg time="2024-12-12T15:58:30.054663" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:30.054663" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:29.884451" elapsed="0.170212"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.054663" level="INFO">${json_response} = {'CwClusterAndActions': {'1node-cluster': {'CwCluster': {'Cw_VM_Image': 'signed-cw-na-platform-7.0.0-85-release700-240823', 'ClusterIPStack': 'IPv4', 'ManagementVIP': '198.18.134.219', 'ManagementIPNe...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.054663" elapsed="0.001000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.055663" level="INFO">${MSG} = --CNC Platform Specs--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Platform Specs--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.055663" level="INFO">Length is 1.</msg>
<arg>${json_response['CwClusterAndActions']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:30.055663" level="INFO">${RESP} = ('PASS', 1)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['CwClusterAndActions']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Platform Specs\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:30.055663" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.056686" level="INFO">${search} = $..SchemaVersion</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.001023"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.067907" level="INFO">${data} = ['7.0.0']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.056686" elapsed="0.011221"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.067907" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.067907" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.068908" elapsed="0.000000"/>
</kw>
<var name="${item}">SchemaVersion</var>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.013245"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.068908" level="INFO">${search} = $..CNC_VM_Image</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.068908" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.077497" level="INFO">${data} = []</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.068908" elapsed="0.008589"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.077497" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.077497" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.077497" elapsed="0.000000"/>
</kw>
<var name="${item}">CNC_VM_Image</var>
<status status="PASS" start="2024-12-12T15:58:30.068908" elapsed="0.008589"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.077497" level="INFO">${search} = $..ClusterIPStack</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.077497" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.086506" level="INFO">${data} = ['IPv4']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.077497" elapsed="0.009009"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.086506" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.086506" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.086506" elapsed="0.001037"/>
</kw>
<var name="${item}">ClusterIPStack</var>
<status status="PASS" start="2024-12-12T15:58:30.077497" elapsed="0.010046"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.087543" level="INFO">${search} = $..ManagementVIP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.087543" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.096117" level="INFO">${data} = ['198.18.134.219']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.087543" elapsed="0.008574"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.096117" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.096117" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.096117" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementVIP</var>
<status status="PASS" start="2024-12-12T15:58:30.087543" elapsed="0.008574"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.096117" level="INFO">${search} = $..ManagementIPNetmask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.096117" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.105100" level="INFO">${data} = ['255.255.192.0']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.096117" elapsed="0.008983"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.106124" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.106124" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.106124" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPNetmask</var>
<status status="PASS" start="2024-12-12T15:58:30.096117" elapsed="0.010007"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.106124" level="INFO">${search} = $..ManagementIPGateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.106124" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.114863" level="INFO">${data} = ['198.18.128.1']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.106124" elapsed="0.008739"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.115369" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.114863" elapsed="0.000506"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.115369" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPGateway</var>
<status status="PASS" start="2024-12-12T15:58:30.106124" elapsed="0.009245"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.115369" level="INFO">${search} = $..DataVIP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.115369" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.123647" level="INFO">${data} = ['198.18.2.219']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.115369" elapsed="0.008278"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.124645" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.123647" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.124645" elapsed="0.000000"/>
</kw>
<var name="${item}">DataVIP</var>
<status status="PASS" start="2024-12-12T15:58:30.115369" elapsed="0.009276"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.124645" level="INFO">${search} = $..DataIPNetmask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.124645" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.133196" level="INFO">${data} = ['255.255.255.0']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.124645" elapsed="0.008551"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.133196" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.133196" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.133196" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPNetmask</var>
<status status="PASS" start="2024-12-12T15:58:30.124645" elapsed="0.009569"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.134214" level="INFO">${search} = $..DataIPGateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.134214" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.142724" level="INFO">${data} = ['198.18.2.1']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.134214" elapsed="0.008510"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.142724" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.142724" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.142724" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPGateway</var>
<status status="PASS" start="2024-12-12T15:58:30.134214" elapsed="0.008510"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.143732" level="INFO">${search} = $..DomainName</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.142724" elapsed="0.001008"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.151756" level="INFO">${data} = ['demo.dcloud.cisco.com']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.143732" elapsed="0.008024"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.152756" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.152756" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.152756" elapsed="0.000000"/>
</kw>
<var name="${item}">DomainName</var>
<status status="PASS" start="2024-12-12T15:58:30.142724" elapsed="0.010032"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.152756" level="INFO">${search} = $..NTP</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.152756" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.161297" level="INFO">${data} = ['ntp.demo.dcloud.cisco.com']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.152756" elapsed="0.008541"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.162274" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.161297" elapsed="0.000977"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.162274" elapsed="0.000000"/>
</kw>
<var name="${item}">NTP</var>
<status status="PASS" start="2024-12-12T15:58:30.152756" elapsed="0.009518"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.162274" level="INFO">${search} = $..DNS</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.162274" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.170826" level="INFO">${data} = ['198.18.133.1']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.162274" elapsed="0.008552"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.171843" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.171843" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.171843" elapsed="0.000000"/>
</kw>
<var name="${item}">DNS</var>
<status status="PASS" start="2024-12-12T15:58:30.162274" elapsed="0.009569"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.171843" level="INFO">${search} = $..RamDiskSize</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.171843" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.180398" level="INFO">${data} = [4]</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.171843" elapsed="0.008555"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.181396" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.181396" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.181396" elapsed="0.000000"/>
</kw>
<var name="${item}">RamDiskSize</var>
<status status="PASS" start="2024-12-12T15:58:30.171843" elapsed="0.009553"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.181396" level="INFO">${search} = $..ThinProvisioned</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.181396" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.190416" level="INFO">${data} = [True]</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.181396" elapsed="0.009020"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.190416" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.190416" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.190416" elapsed="0.000000"/>
</kw>
<var name="${item}">ThinProvisioned</var>
<status status="PASS" start="2024-12-12T15:58:30.181396" elapsed="0.009020"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.190416" level="INFO">${search} = $..Timezone</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.190416" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.199989" level="INFO">${data} = ['']</msg>
<var>${data}</var>
<arg>${json_response['CwClusterAndActions']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.191415" elapsed="0.008574"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.199989" level="INFO">${MSG} = --CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataV...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.199989" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.199989" elapsed="0.000000"/>
</kw>
<var name="${item}">Timezone</var>
<status status="PASS" start="2024-12-12T15:58:30.190416" elapsed="0.009573"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.144326"/>
</for>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.144326"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:30.055663" elapsed="0.144326"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.199989" level="INFO">${CNC_PLATFORM} = ["SchemaVersion:['7.0.0']", 'CNC_VM_Image:[]', "ClusterIPStack:['IPv4']", "ManagementVIP:['198.18.134.219']", "ManagementIPNetmask:['255.255.192.0']", "ManagementIPGateway:['198.18.128.1']", "DataVIP:...</msg>
<arg>${CNC_PLATFORM}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:30.199989" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:30.200989" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running information on the CNC Platform</doc>
<status status="PASS" start="2024-12-12T15:58:29.883429" elapsed="0.317560"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:30.200989" level="INFO">Set test message to:
--CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataVIP:['198.18.2.219']
DataIPNetmask:['255.255.255.0']
DataIPGateway:['198.18.2.1']
DomainName:['demo.dcloud.cisco.com']
NTP:['ntp.demo.dcloud.cisco.com']
DNS:['198.18.133.1']
RamDiskSize:[4]
ThinProvisioned:[True]
Timezone:['']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:30.200989" elapsed="0.000000"/>
</kw>
<doc>Get key information on CNC Platform and hosting as per file spec [cnc-platform.txt]</doc>
<tag>DATA-COLLECTION</tag>
<tag>PLATFORM</tag>
<status status="PASS" start="2024-12-12T15:58:29.882410" elapsed="0.318579">--CNC Platform Specs--
SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataVIP:['198.18.2.219']
DataIPNetmask:['255.255.255.0']
DataIPGateway:['198.18.2.1']
DomainName:['demo.dcloud.cisco.com']
NTP:['ntp.demo.dcloud.cisco.com']
DNS:['198.18.133.1']
RamDiskSize:[4]
ThinProvisioned:[True]
Timezone:['']

</status>
</test>
<test id="s1-t4" name="Retrieve Node Info" line="59">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:30.202973" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.201971" elapsed="0.001002"/>
</kw>
<kw name="get-cnc-nodes" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.202973" level="INFO">${myurl} = /crosswork/platform/v2/cluster/dc/node/summary/list</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/cluster/dc/node/summary/list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.202973" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.202973" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.202973" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.202973" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.202973" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.203994" level="INFO">@{CNC_NODES} = [ ]</msg>
<var>@{CNC_NODES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.203994" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.203994" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.203994" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.203994" level="INFO">@{FIELDS} = [ vm_name | node_id | node_type | node_resource.cpu_summary.total | node_resource.memory_summary.total | node_resource.disk_summary.total ]</msg>
<var>@{FIELDS}</var>
<arg>vm_name</arg>
<arg>node_id</arg>
<arg>node_type</arg>
<arg>node_resource.cpu_summary.total</arg>
<arg>node_resource.memory_summary.total</arg>
<arg>node_resource.disk_summary.total</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.203994" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.203994" level="INFO">${description} = Retrieve Node Info</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.203994" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:30.346723" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/platform/v2/cluster/dc/node/summary/list 
 path_url=/crosswork/platform/v2/cluster/dc/node/summary/list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:30.346723" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/platform/v2/cluster/dc/node/summary/list 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:30 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '1158', 'Connection': 'keep-alive', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"node_summary":[{"node_name":"198-18-134-221-hybrid.demo.dcloud.cisco.com","node_id":"198.18.134.221","node_health":"Healthy","node_type":"HYBRID","vm_name":"vm1","node_resource":{"cpu_summary":{"current_usage":"30 %","used":"5.94 cores","total":"20.00 cores","thresholds":{"medium_range_start":60,"high_range_start":90}},"memory_summary":{"current_usage":"45 %","used":"50.42 GB","total":"111.30 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"disk_summary":{"current_usage":"7 %","used":"68.90 GB","total":"1025.58 GB","thresholds":{"medium_range_start":60,"high_range_start":90}},"node_cpu_summary":{"current_usage":"21 %","used":"4.15 cores","total":"19.90 cores","thresholds":{"medium_range_start":98,"high_range_start":99}},"node_mem_summary":{"current_usage":"7 %","used":"8362393600.00 B","total":"115806187520.00 B","thresholds":{"medium_range_start":98,"high_range_start":99}},"last_updated_time":"Thursday, 12-Dec-24 05:53:10 UTC"},"actions":{"cancelJob":false,"deployVM":false,"eraseVM":false,"retry":false,"viewDetails":true},"vm_state":"Running","vm_id":"0","availability":"Not protected","recommendation_available":false}]} 
 </msg>
<msg time="2024-12-12T15:58:30.346723" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:30.346723" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:30.203994" elapsed="0.142729"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.347722" level="INFO">${json_response} = {'node_summary': [{'node_name': '198-18-134-221-hybrid.demo.dcloud.cisco.com', 'node_id': '198.18.134.221', 'node_health': 'Healthy', 'node_type': 'HYBRID', 'vm_name': 'vm1', 'node_resource': {'cpu_su...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.347722" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.347722" level="INFO">${MSG} = --CNC Node Info--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Node Info--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.347722" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.347722" level="INFO">Length is 1.</msg>
<arg>${json_response['node_summary']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:30.347722" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:30.347722" level="INFO">${RESP} = ('PASS', 1)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['node_summary']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:30.347722" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Node Info\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${key}</var>
<arg>${data['node_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_NODES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</for>
<var name="${data}"/>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</iter>
<var>${data}</var>
<value>@{json_response['node_summary']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</for>
<status status="NOT RUN" start="2024-12-12T15:58:30.347722" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:30.347722" elapsed="0.001001"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.348723" level="INFO">${CNC_NODES} = []</msg>
<arg>${CNC_NODES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.348723" level="INFO">${CNC_NODES_HEALTH} = []</msg>
<arg>${CNC_NODES_HEALTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:30.348723" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:30.348723" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running information on the CNC nodes</doc>
<status status="PASS" start="2024-12-12T15:58:30.202973" elapsed="0.145750"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:30.349751" level="INFO">Set test message to:
--CNC Node Info--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:30.349751" elapsed="0.000000"/>
</kw>
<doc>Get key information on CNC nodes</doc>
<tag>DATA-COLLECTION</tag>
<tag>PLATFORM</tag>
<status status="PASS" start="2024-12-12T15:58:30.201971" elapsed="0.147780">--CNC Node Info--

</status>
</test>
<test id="s1-t5" name="Retrieve Devices" line="66">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:30.350722" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.350722" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-devices" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.351753" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.351753" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">${description} = Retrieve Devices</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="0.000970"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{CNC_DEVICES} = [ ]</msg>
<var>@{CNC_DEVICES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{CNC_DEVICES_HEALTH} = [ ]</msg>
<var>@{CNC_DEVICES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{EXCLUDE_LIST} = [ provider_uuid ]</msg>
<var>@{EXCLUDE_LIST}</var>
<arg>provider_uuid</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{FIELDS_DATA} = [ profile | dg_name | reachability_check | product_info.software_type | product_info.software_version | product_info.manufacturer | connectivity_info..type | connectivity_info..port | connectivity_inf...</msg>
<var>@{FIELDS_DATA}</var>
<arg>profile</arg>
<arg>dg_name</arg>
<arg>reachability_check</arg>
<arg>product_info.software_type</arg>
<arg>product_info.software_version</arg>
<arg>product_info.manufacturer</arg>
<arg>connectivity_info..type</arg>
<arg>connectivity_info..port</arg>
<arg>connectivity_info..ipaddrs</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{FIELDS_PROVIDER} = [ provider_node_id | provider_name ]</msg>
<var>@{FIELDS_PROVIDER}</var>
<arg>provider_node_id</arg>
<arg>provider_name</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{FIELDS_DATA_HEALTH} = [ admin_state | operational_state | reachability_state | nso_state | errors ]</msg>
<var>@{FIELDS_DATA_HEALTH}</var>
<arg>admin_state</arg>
<arg>operational_state</arg>
<arg>reachability_state</arg>
<arg>nso_state</arg>
<arg>errors</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">@{FIELDS_EVENTS} = [ alarm_id ]</msg>
<var>@{FIELDS_EVENTS}</var>
<arg>alarm_id</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.352723" level="INFO">${myurl} = /crosswork/inventory/v1/nodes/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/nodes/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.352723" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.353754" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.353754" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.353754" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.353754" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:30.497709" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/inventory/v1/nodes/query 
 path_url=/crosswork/inventory/v1/nodes/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-12T15:58:30.497709" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/inventory/v1/nodes/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:30 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.4","mask":"32"},"uuid":"d074a7dd-6239-452b-9211-847ec59b65b1","host_name":"node-4","profile":"demo","reachability_state":"CONN_STATE_REACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.4","mask":"32"}],"port":22,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.4","mask":"32"}],"port":161,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.4","mask":"32"}],"port":830,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.4","mask":"32"}],"port":57400,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"24.2.1","product_type":"Cisco IOS XRv 9000 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.2264","hw_change_timestamp":"noSuchObject","capability":["SNMP","YANG_CLI","GNMI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_5424"},"geo_info":{"coordinates":{"longitude":{"value":-122.3300624},"latitude":{"value":47.6038321},"altitude":{}},"range_incr":{}},"routing_info":{"te_router_id":"198.19.1.4"},"uptime":"0w0d5h54m27s","last_upd_time":"1733967896","reachability_check":"REACH_CHECK_ENABLE","reachability_state_upd_time":"1733967959","operational_state":"ROBOT_OPER_STATE_OK","state_map":{"1":{"value":"UP","last_updated_time":"1733982314","next_check_time":"1733982314"},"2":{"value":"UP","last_updated_time":"1733967959","next_check_time":"1733967959"}},"Inventory":{"sys_desc":"Cisco IOS XR Software (IOS-XRv 9000), Version 24.2.1\r\nCopyright (c) 2013-2024 by Cisco Systems, Inc."},"dg_uuid":"c2871f3c-7750-4a44-98d0-de569431ce59","providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso201":{"provider_name":"nso201","provider_node_id":"node-4","provider_uuid":"fd78a71b-de75-44d2-a08b-e3be08fc026c"}}}},"dg_name":"CDG_Pool_1-1","nso_state":"SYNCED","nso_timestamp":"1733968006","tag_names":["cli","gnmi","snmp","reach-check","ios-xr","clock-drift-check","te-tunnel-id"],"device_fqdn":{"host_name":"node-4"}},{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.1","mask":"32"},"uuid":"5516be9a-dcee-426c-991d-6d212fdcc2ea","host_name":"node-1","profile":"demo","reachability_state":"CONN_STATE_REACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.1","mask":"32"}],"port":22,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.1","mask":"32"}],"port":161,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.1","mask":"32"}],"port":830,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967959"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.1","mask":"32"}],"port":57400,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"24.2.1","product_type":"Cisco IOS XRv 9000 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.2264","hw_change_timestamp":"noSuchObject","capability":["SNMP","YANG_CLI","GNMI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_5424"},"geo_info":{"coordinates":{"longitude":{"value":-73.9871558},"latitude":{"value":40.7308619},"altitude":{}},"range_incr":{}},"routing_info":{"te_router_id":"198.19.1.1"},"uptime":"0w0d5h55m9s","last_upd_time":"1733967896","reachability_check":"REACH_CHECK_ENABLE","reachability_state_upd_time":"1733967959","operational_state":"ROBOT_OPER_STATE_OK","state_map":{"1":{"value":"UP","last_updated_time":"1733982352","next_check_time":"1733982352"},"2":{"value":"UP","last_updated_time":"1733967959","next_check_time":"1733967959"}},"Inventory":{"sys_desc":"Cisco IOS XR Software (IOS-XRv 9000), Version 24.2.1\r\nCopyright (c) 2013-2024 by Cisco Systems, Inc."},"dg_uuid":"c2871f3c-7750-4a44-98d0-de569431ce59","providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso201":{"provider_name":"nso201","provider_node_id":"node-1","provider_uuid":"fd78a71b-de75-44d2-a08b-e3be08fc026c"}}}},"dg_name":"CDG_Pool_1-1","nso_state":"SYNCED","nso_timestamp":"1733968086","tag_names":["cli","gnmi","snmp","reach-check","ios-xr","clock-drift-check","te-tunnel-id"],"device_fqdn":{"host_name":"node-1"}},{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.2","mask":"32"},"uuid":"26d0b740-67aa-467a-8fb3-8ef29ebb8acf","host_name":"node-2","profile":"demo","reachability_state":"CONN_STATE_REACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.2","mask":"32"}],"port":22,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967925"},{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.2","mask":"32"}],"port":161,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967925"},{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.2","mask":"32"}],"port":830,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967925"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.2","mask":"32"}],"port":57400,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"24.2.1","product_type":"Cisco IOS XRv 9000 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.2264","hw_change_timestamp":"noSuchObject","capability":["SNMP","YANG_CLI","GNMI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_5424"},"geo_info":{"coordinates":{"longitude":{"value":-80.1936589},"latitude":{"value":25.7742658},"altitude":{}},"range_incr":{}},"routing_info":{"te_router_id":"198.19.1.2"},"uptime":"0w0d5h54m52s","last_upd_time":"1733967896","reachability_check":"REACH_CHECK_ENABLE","reachability_state_upd_time":"1733967925","operational_state":"ROBOT_OPER_STATE_OK","state_map":{"1":{"value":"UP","last_updated_time":"1733982337","next_check_time":"1733982337"},"2":{"value":"UP","last_updated_time":"1733967925","next_check_time":"1733967925"}},"Inventory":{"sys_desc":"Cisco IOS XR Software (IOS-XRv 9000), Version 24.2.1\r\nCopyright (c) 2013-2024 by Cisco Systems, Inc."},"dg_uuid":"c2871f3c-7750-4a44-98d0-de569431ce59","providers_family":{"ROBOT_PROVIDER_NSO":{"providers":{"nso201":{"provider_name":"nso201","provider_node_id":"node-2","provider_uuid":"fd78a71b-de75-44d2-a08b-e3be08fc026c"}}}},"dg_name":"CDG_Pool_1-1","nso_state":"SYNCED","nso_timestamp":"1733968025","tag_names":["cli","gnmi","reach-check","snmp","ios-xr","clock-drift-check","te-tunnel-id"],"device_fqdn":{"host_name":"node-2"}},{"node_ip":{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.7","mask":"32"},"uuid":"f0d5a435-6c77-4f2b-be7c-d123e934777c","host_name":"node-7","profile":"demo","reachability_state":"CONN_STATE_REACHABLE","admin_state":"ROBOT_ADMIN_STATE_UP","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.7","mask":"32"}],"port":22,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967946"},{"type":"ROBOT_MSVC_TRANS_SNMP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.7","mask":"32"}],"port":161,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967946"},{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.7","mask":"32"}],"port":830,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","reachability_state_upd_time":"1733967946"},{"type":"ROBOT_MSVC_TRANS_GNMI","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.7","mask":"32"}],"port":57400,"timeout":"120","reachability_state":"CONN_STATE_REACHABLE","encoding_type":"PROTO"}],"product_info":{"software_type":"IOS XR","software_version":"24.2.1","product_type":"Cisco IOS XRv 9000 Router","product_family":"Routers","product_series":"Cisco ASR 9000 Series Aggregation Services Routers","manufacturer":"Cisco Systems","sys_object_id":"1.3.6.1.4.1.9.1.2264","hw_change_timestamp":"noSuchObject","capability":["SNMP","YANG_CLI","GNMI"],"device_type":"NODE_TYPE_ROUTER","syslog_format":"RFC_5424"},"geo_info":{"coordinates":{"longitude":{"value":-95.3676974},"latitude":{"value":29.7589382},"altitude":{}},"range_incr":{}},"routing_info":{"te_router_id":"198.19.1.7"},"uptime":"0w0d5h55m2s","last_upd_time":"1733967896","reachability_check":"REACH_CHECK_ENABLE","reachability_... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2024-12-12T15:58:30.498727" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:30.498727" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:30.353754" elapsed="0.144973"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.499728" level="INFO">${json_response} = {'data': [{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}, 'uuid': 'd074a7dd-6239-452b-9211-847ec59b65b1', 'host_name': 'node-4', 'profile': 'demo', 'reacha...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.498727" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.499728" level="INFO">${MSG} = --Devices--
</msg>
<arg>${MSG}</arg>
<arg>--Devices--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.499728" level="INFO">Length is 12.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:30.499728" level="INFO">${RESP} = ('PASS', 12)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Devices failed for Devices(s)\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:30.499728" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.508726" level="INFO">${key} = ['node-4']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.500747" elapsed="0.007979"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.508726" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.508726" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.517879" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.508726" elapsed="0.009153"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.517879" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.517879" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.517879" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:30.508726" elapsed="0.009153"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.517879" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.517879" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.526401" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.517879" elapsed="0.008522"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.526401" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.526401" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.526401" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:30.517879" elapsed="0.008522"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.526401" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.526401" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.535437" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.526401" elapsed="0.009036"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.535437" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.535437" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.535437" elapsed="0.000999"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:30.526401" elapsed="0.010035"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.536436" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.536436" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.545023" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.536436" elapsed="0.008587"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.545023" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.545023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.545023" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:30.536436" elapsed="0.008587"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.545023" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.545023" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.562534" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.545023" elapsed="0.018510"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.563533" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.563533" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.563533" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:30.545023" elapsed="0.018510"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.563533" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.563533" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.572102" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.563533" elapsed="0.008569"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.572102" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.572102" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.572102" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:30.563533" elapsed="0.008569"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.572102" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.572102" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.581237" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.573103" elapsed="0.008134"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.582239" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.581237" elapsed="0.001002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.582239" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:30.572102" elapsed="0.010137"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.582239" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.582239" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.590220" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.582239" elapsed="0.007981"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.591236" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.591236" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.591236" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:30.582239" elapsed="0.008997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.591236" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.591236" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.599801" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.591236" elapsed="0.008565"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.599801" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.599801" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.599801" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:30.591236" elapsed="0.008565"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:30.508726" elapsed="0.091075"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.599801" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.599801" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.600801" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.600801" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.607800" level="INFO">${values} = ['node-4']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.600801" elapsed="0.006999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.609324" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:30.599801" elapsed="0.009523"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.609324" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.609324" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.617381" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.609324" elapsed="0.008057"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:30.609324" elapsed="0.009057"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:30.599801" elapsed="0.018580"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.618381" level="INFO">${convertListToString} = provider_node_id:['node-4']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.618381" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.618381" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.627440" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.009059"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.627440" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.009059"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.627440" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.627440" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.635464" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.627440" elapsed="0.008024"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.636448" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:30.627440" elapsed="0.009008"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.636448" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.636448" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.645006" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.636448" elapsed="0.008558"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.645006" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:30.636448" elapsed="0.008558"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.645006" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.645006" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.654023" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.645006" elapsed="0.009017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.654023" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:30.645006" elapsed="0.009017"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.654023" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.654023" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.663554" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.654023" elapsed="0.009531"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.663554" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:30.654023" elapsed="0.009531"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:30.618381" elapsed="0.045173"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}, 'uuid': 'd074a7dd-6239-452b-9211-847ec59b65b1', 'host_name': 'node-4', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:30.500747" elapsed="0.162807"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.673323" level="INFO">${key} = ['node-1']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.663554" elapsed="0.009769"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.673323" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.673323" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.682885" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.673323" elapsed="0.009562"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.682885" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.682885" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.682885" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:30.673323" elapsed="0.009562"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.682885" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.682885" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.691248" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.682885" elapsed="0.008363"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.692773" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.691248" elapsed="0.001525"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.692773" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:30.682885" elapsed="0.009888"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.692773" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.692773" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.700833" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.692773" elapsed="0.008060"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.701815" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.700833" elapsed="0.000982"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.701815" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:30.692773" elapsed="0.009042"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.701815" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.701815" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.711232" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.701815" elapsed="0.009417"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.711752" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.711232" elapsed="0.000520"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.711837" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:30.701815" elapsed="0.010022"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.711837" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.711837" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.720442" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.711837" elapsed="0.008605"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.720965" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.720442" elapsed="0.000523"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.720965" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:30.711837" elapsed="0.009128"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.720965" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.720965" elapsed="0.000525"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.729710" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.721490" elapsed="0.008220"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.730312" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.730229" elapsed="0.000083"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.730312" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:30.720965" elapsed="0.009347"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.730312" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.730312" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.738872" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.730831" elapsed="0.008041"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.738872" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.738872" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.738872" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:30.730312" elapsed="0.008560"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.738872" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.738872" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.748066" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.739871" elapsed="0.008195"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.748066" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.748066" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.748066" elapsed="0.001001"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:30.738872" elapsed="0.010195"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.749067" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.749067" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.758066" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.749067" elapsed="0.008999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.758066" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:30.749067" elapsed="0.008999"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:30.673323" elapsed="0.084743"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.758066" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.758066" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.767187" level="INFO">${values} = ['node-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.009121"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.768187" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.010121"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.768187" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.768187" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.776187" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.768187" elapsed="0.008000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.776187" elapsed="0.001125"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:30.768187" elapsed="0.009125"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:30.758066" elapsed="0.019246"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.777312" level="INFO">${convertListToString} = provider_node_id:['node-1']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.777312" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.777312" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.786353" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.009041"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.786353" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.009041"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.786353" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.786353" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.794920" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.786353" elapsed="0.008567"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.794920" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:30.786353" elapsed="0.008567"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.795939" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.795939" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.803919" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.795939" elapsed="0.007980"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.803919" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:30.794920" elapsed="0.008999"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.804918" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.804918" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.813509" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.804918" elapsed="0.008591"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.813509" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:30.803919" elapsed="0.009590"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.813509" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.813509" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.836039" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.813509" elapsed="0.022530"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.836039" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:30.813509" elapsed="0.022530"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:30.777312" elapsed="0.058727"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}, 'uuid': '5516be9a-dcee-426c-991d-6d212fdcc2ea', 'host_name': 'node-1', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:30.663554" elapsed="0.172485"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.844109" level="INFO">${key} = ['node-2']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.836039" elapsed="0.008070"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.844109" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.844109" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.853137" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.844109" elapsed="0.009028"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.853137" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.853137" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.853137" elapsed="0.001000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:30.844109" elapsed="0.010028"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.854137" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.854137" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.863695" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.854137" elapsed="0.009558"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.863695" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.863695" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.863695" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:30.854137" elapsed="0.009558"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.863695" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.863695" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.872230" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.863695" elapsed="0.008535"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.873214" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.872230" elapsed="0.000984"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.873214" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:30.863695" elapsed="0.009519"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.873214" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.873214" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.882378" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.873214" elapsed="0.009164"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.882378" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.882378" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.882378" elapsed="0.001017"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:30.873214" elapsed="0.010181"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.883395" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.883395" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.891399" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.883395" elapsed="0.008004"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.891399" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.891399" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.891399" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:30.883395" elapsed="0.008004"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.891399" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.891399" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.900451" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.891399" elapsed="0.009052"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.900451" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.900451" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.900451" elapsed="0.000999"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:30.891399" elapsed="0.010051"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.901450" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.901450" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.909469" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.901450" elapsed="0.009109"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.910559" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.910559" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.910559" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:30.901450" elapsed="0.009109"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.910559" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.910559" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.919563" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.910559" elapsed="0.009004"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.919563" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.919563" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.920563" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:30.910559" elapsed="0.010004"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.920563" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.920563" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.929178" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.920563" elapsed="0.008615"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.929178" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.929178" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.929178" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:30.920563" elapsed="0.008615"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:30.844109" elapsed="0.085069"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.929178" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:30.929178" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.930161" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.930161" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.938181" level="INFO">${values} = ['node-2']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.930161" elapsed="0.008020"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.938181" elapsed="0.000998"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:30.930161" elapsed="0.009018"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.939179" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.939179" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.946737" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.939179" elapsed="0.008541"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.947720" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:30.939179" elapsed="0.008541"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:30.930161" elapsed="0.017559"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.947720" level="INFO">${convertListToString} = provider_node_id:['node-2']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:30.947720" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.947720" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.947720" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:30.947720" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.948719" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.948719" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.956388" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.948719" elapsed="0.007669"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.956388" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:30.948719" elapsed="0.008668"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.957387" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.957387" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.965422" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.957387" elapsed="0.008035"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.965422" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:30.957387" elapsed="0.008035"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.966420" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.966420" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.974558" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.966420" elapsed="0.008138"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.974558" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:30.966420" elapsed="0.008138"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.976078" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.974558" elapsed="0.001520"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.984145" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.976078" elapsed="0.008067"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.984145" elapsed="0.001000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:30.974558" elapsed="0.010587"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:30.985145" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:30.985145" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:30.993683" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.985145" elapsed="0.008538"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:30.993683" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:30.985145" elapsed="0.008538"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:30.947720" elapsed="0.045963"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}, 'uuid': '26d0b740-67aa-467a-8fb3-8ef29ebb8acf', 'host_name': 'node-2', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:30.836039" elapsed="0.157644"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.002710" level="INFO">${key} = ['node-7']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:30.994711" elapsed="0.007999"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.003693" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.003693" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.011847" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.003693" elapsed="0.008154"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.011847" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.011847" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.011847" elapsed="0.000982"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.003693" elapsed="0.009136"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.012829" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.012829" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.020828" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.012829" elapsed="0.007999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.020828" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.020828" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.020828" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.012829" elapsed="0.007999"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.020828" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.020828" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.031395" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.021828" elapsed="0.009567"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.031395" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.031395" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.031395" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.020828" elapsed="0.010567"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.031395" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.031395" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.040408" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.031395" elapsed="0.009013"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.040408" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.040408" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.040408" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.031395" elapsed="0.009013"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.040408" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.040408" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.049950" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.040408" elapsed="0.009542"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.049950" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.049950" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.049950" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.040408" elapsed="0.009542"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.049950" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.049950" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.059469" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.050949" elapsed="0.008520"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.059469" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.059469" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.059469" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.049950" elapsed="0.009519"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.059469" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.059469" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.069044" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.059469" elapsed="0.009575"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.069044" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.069044" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.069044" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.059469" elapsed="0.009575"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.069044" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.069044" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.078214" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.069044" elapsed="0.009170"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.079194" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.079194" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.079194" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.069044" elapsed="0.010150"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.079194" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.079194" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.088211" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.079194" elapsed="0.009017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.088211" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.088211" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.088211" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.079194" elapsed="0.009017"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.003693" elapsed="0.084518"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.089210" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.088211" elapsed="0.000999"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.089210" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.089210" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.108031" level="INFO">${values} = ['node-7']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.089210" elapsed="0.018821"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.109556" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.089210" elapsed="0.020346"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.109556" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.109556" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.117620" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.109556" elapsed="0.008064"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.117620" elapsed="0.000998"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.109556" elapsed="0.009062"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.089210" elapsed="0.029408"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.118618" level="INFO">${convertListToString} = provider_node_id:['node-7']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.118618" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.118618" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.127172" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.008554"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.128196" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.009578"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.128196" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.128196" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.137193" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.128196" elapsed="0.008997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.137193" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.128196" elapsed="0.008997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.137193" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.137193" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.146078" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.137193" elapsed="0.008885"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.146078" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.137193" elapsed="0.008885"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.146078" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.146078" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.155060" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.146078" elapsed="0.008982"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.155060" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.146078" elapsed="0.008982"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.155060" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.155060" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.163633" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.155060" elapsed="0.008573"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.164632" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:31.155060" elapsed="0.009572"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.118618" elapsed="0.046014"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}, 'uuid': 'f0d5a435-6c77-4f2b-be7c-d123e934777c', 'host_name': 'node-7', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:30.994711" elapsed="0.169921"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.172928" level="INFO">${key} = ['node-8']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.164632" elapsed="0.008296"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.173927" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.172928" elapsed="0.000999"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.182073" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.173927" elapsed="0.008146"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.183071" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.182073" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.183071" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.172928" elapsed="0.010143"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.183071" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.183071" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.191071" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.183071" elapsed="0.009001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.192072" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.192072" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.192072" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.183071" elapsed="0.009001"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.192072" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.192072" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.201117" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.192072" elapsed="0.009045"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.201117" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.201117" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.201117" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.192072" elapsed="0.009045"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.202118" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.201117" elapsed="0.001001"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.210660" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.202118" elapsed="0.008542"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.210660" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.210660" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.210660" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.201117" elapsed="0.009543"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.210660" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.210660" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.219681" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.210660" elapsed="0.009021"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.219681" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.219681" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.219681" elapsed="0.000984"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.210660" elapsed="0.010005"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.220665" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.220665" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.229264" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.220665" elapsed="0.008599"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.229264" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.229264" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.229264" elapsed="0.000982"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.220665" elapsed="0.009581"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.230246" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.230246" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.239245" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.230246" elapsed="0.008999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.239245" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.239245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.239245" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.230246" elapsed="0.008999"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.239245" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.239245" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.248822" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.239245" elapsed="0.009577"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.248822" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.248822" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.248822" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.239245" elapsed="0.009577"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.248822" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.248822" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.257820" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.248822" elapsed="0.008998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.257820" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.248822" elapsed="0.008998"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.172928" elapsed="0.084892"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.257820" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.257820" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.268284" level="INFO">${values} = ['node-8']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.010464"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.268284" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.010464"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.268284" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.268284" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.277491" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.268284" elapsed="0.009207"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.277491" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.268284" elapsed="0.009207"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.257820" elapsed="0.019671"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.278503" level="INFO">${convertListToString} = provider_node_id:['node-8']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.278503" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.278503" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.287518" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.009015"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.287518" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.009015"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.287518" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.287518" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.297040" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.287518" elapsed="0.009522"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.297040" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.287518" elapsed="0.009522"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.297040" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.297040" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.307056" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.297040" elapsed="0.010016"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.307056" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.297040" elapsed="0.010016"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.307056" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.307056" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.315164" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.307056" elapsed="0.008108"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.316687" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.307056" elapsed="0.009631"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.316687" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.316687" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.324730" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.316687" elapsed="0.008043"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.324730" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:31.316687" elapsed="0.008043"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.278503" elapsed="0.047751"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}, 'uuid': '5ec93fd1-6892-4ed3-b2d4-7e1e04ecdee6', 'host_name': 'node-8', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:31.164632" elapsed="0.161622"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.334278" level="INFO">${key} = ['node-5']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.326254" elapsed="0.008024"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.335299" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.335299" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.343856" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.335299" elapsed="0.008557"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.343856" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.343856" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.343856" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.334278" elapsed="0.009578"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.344885" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.343856" elapsed="0.001029"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.352883" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.344885" elapsed="0.007998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.353883" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.353883" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.353883" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.343856" elapsed="0.010027"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.353883" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.353883" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.363438" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.353883" elapsed="0.009555"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.363438" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.363438" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.363438" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.353883" elapsed="0.009555"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.363973" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.363973" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.386169" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.363973" elapsed="0.022196"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.386169" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.386169" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.386169" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.363973" elapsed="0.022196"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.387139" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.387139" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.395745" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.387139" elapsed="0.008606"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.396743" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.395745" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.396743" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.386169" elapsed="0.010574"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.396743" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.396743" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.405741" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.396743" elapsed="0.008998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.406740" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.405741" elapsed="0.000999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.406740" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.396743" elapsed="0.009997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.406740" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.406740" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.416319" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.406740" elapsed="0.009579"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.416319" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.416319" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.416319" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.406740" elapsed="0.009579"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.416319" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.416319" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.425319" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.417321" elapsed="0.009000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.426321" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.426321" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.426321" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.416319" elapsed="0.010002"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.426857" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.426857" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.435645" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.426857" elapsed="0.008788"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.435645" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.435645" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.435645" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.426857" elapsed="0.008788"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.334278" elapsed="0.101367"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.436645" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.436645" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.436645" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.436645" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.445779" level="INFO">${values} = ['node-5']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.436645" elapsed="0.009134"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.445779" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.436645" elapsed="0.009134"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.445779" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.445779" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.454774" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.445779" elapsed="0.008995"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.454774" elapsed="0.001004"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.445779" elapsed="0.009999"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.436645" elapsed="0.019133"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.455778" level="INFO">${convertListToString} = provider_node_id:['node-5']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.455778" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.455778" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.465851" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.456777" elapsed="0.009074"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.465851" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.010073"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.465851" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.465851" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.474399" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.465851" elapsed="0.008548"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.474399" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.465851" elapsed="0.008548"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.475400" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.475400" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.485116" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.475400" elapsed="0.009716"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.485116" elapsed="0.000999"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.474399" elapsed="0.011716"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.486115" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.486115" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.494269" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.486115" elapsed="0.009163"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.495278" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.486115" elapsed="0.009163"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.495278" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.495278" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.504289" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.495278" elapsed="0.009011"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.504289" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:31.495278" elapsed="0.009011"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.455778" elapsed="0.048511"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}, 'uuid': 'c1cb2c19-5407-4ea9-b52d-325ac5ea7786', 'host_name': 'node-5', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:31.326254" elapsed="0.178035"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.513351" level="INFO">${key} = ['node-6']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.504289" elapsed="0.009062"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.513351" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.513351" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.522880" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.513351" elapsed="0.009529"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.522880" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.522880" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.522880" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.513351" elapsed="0.009529"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.522880" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.522880" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.531437" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.522880" elapsed="0.008557"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.532438" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.532438" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.532438" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.522880" elapsed="0.009558"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.532438" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.532438" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.541421" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.532438" elapsed="0.008983"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.541421" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.541421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.541421" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.532438" elapsed="0.008983"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.541421" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.541421" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.550996" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.541421" elapsed="0.009575"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.550996" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.550996" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.550996" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.541421" elapsed="0.009575"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.550996" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.550996" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.560527" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.550996" elapsed="0.009531"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.560527" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.560527" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.560527" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.550996" elapsed="0.009531"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.560527" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.560527" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.569780" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.560527" elapsed="0.009253"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.570040" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.570040" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.570040" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.560527" elapsed="0.009513"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.570543" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.570543" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.579099" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.570543" elapsed="0.008556"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.579099" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.579099" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.579099" elapsed="0.000983"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.570543" elapsed="0.009539"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.580082" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.580082" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.589099" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.580082" elapsed="0.009017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.589099" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.589099" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.589099" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.580082" elapsed="0.009017"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.589099" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.589099" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.599106" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.590086" elapsed="0.009020"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.599106" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.599106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.599106" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.589099" elapsed="0.010007"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.513351" elapsed="0.085755"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.600106" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.600106" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.600106" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.600106" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.609631" level="INFO">${values} = ['node-6']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.600106" elapsed="0.009525"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.609631" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.600106" elapsed="0.009525"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.609631" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.609631" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.619639" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.609631" elapsed="0.010008"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.619639" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.609631" elapsed="0.010008"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.600106" elapsed="0.019533"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.620640" level="INFO">${convertListToString} = provider_node_id:['node-6']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.619639" elapsed="0.001001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.620640" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.620640" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.630156" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.009516"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.630156" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.009516"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.631156" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.631156" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.639154" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.631156" elapsed="0.007998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.639154" elapsed="0.001000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.630156" elapsed="0.009998"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.640154" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.640154" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.649249" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.640154" elapsed="0.009095"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.649249" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.640154" elapsed="0.009095"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.649249" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.649249" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.671999" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.650261" elapsed="0.021738"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.671999" elapsed="0.001018"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.649249" elapsed="0.023768"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.673017" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.673017" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.681201" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.673017" elapsed="0.008184"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.681201" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:31.673017" elapsed="0.008184"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.620640" elapsed="0.060561"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}, 'uuid': '44c5e0fa-3148-4a09-85ef-e37cbcd20545', 'host_name': 'node-6', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:31.504289" elapsed="0.176912"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.690184" level="INFO">${key} = ['node-3']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.681201" elapsed="0.008983"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.690184" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.690184" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.701712" level="INFO">${values} = ['demo']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.690184" elapsed="0.011528"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.701712" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.701712" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.701712" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.690184" elapsed="0.011528"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.701712" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.701712" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.711756" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.701712" elapsed="0.010044"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.711756" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.711756" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.711756" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.701712" elapsed="0.010044"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.712755" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.712755" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.720774" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.712755" elapsed="0.008019"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.720774" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.720774" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.720774" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.712755" elapsed="0.008019"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.720774" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.720774" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.730036" level="INFO">${values} = ['IOS XR']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.720774" elapsed="0.009262"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.730036" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.730036" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.730036" elapsed="0.000531"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.720774" elapsed="0.009793"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.730567" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.730567" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.738580" level="INFO">${values} = ['24.2.1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.730567" elapsed="0.008013"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.739580" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.739580" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.739580" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.730567" elapsed="0.009013"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.739580" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.739580" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.748109" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.739580" elapsed="0.008529"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.749091" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.749091" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.749091" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.739580" elapsed="0.009511"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.749091" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.749091" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.757108" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.749091" elapsed="0.008017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.758091" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.757108" elapsed="0.000983"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.758091" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.749091" elapsed="0.009000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.758091" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.758091" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.766598" level="INFO">${values} = [22, 161, 830, 57400]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.758091" elapsed="0.008507"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.767597" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.767597" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.767597" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.758091" elapsed="0.009506"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.767597" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.767597" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.776174" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYP...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.768129" elapsed="0.008045"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.777295" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.776174" elapsed="0.001121"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.767597" elapsed="0.009698"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.690184" elapsed="0.087111"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.777295" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.777295" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.786319" level="INFO">${values} = ['node-3']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.009024"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.786319" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.009024"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.786319" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.786319" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.795837" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.786319" elapsed="0.009518"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.795837" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.786319" elapsed="0.009518"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.777295" elapsed="0.018542"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.795837" level="INFO">${convertListToString} = provider_node_id:['node-3']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.795837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.795837" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.796836" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.796836" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.796836" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.796836" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.804836" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.796836" elapsed="0.008000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.804836" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.796836" elapsed="0.008000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.805853" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.805853" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.814396" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.805853" elapsed="0.008543"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.814396" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.805853" elapsed="0.008543"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.814396" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.814396" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.823375" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.814396" elapsed="0.008979"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.823375" elapsed="0.001000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.814396" elapsed="0.009979"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.824375" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.824375" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.832473" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.824375" elapsed="0.008098"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.832473" elapsed="0.001017"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.824375" elapsed="0.009115"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.833490" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.833490" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.841492" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.833490" elapsed="0.008002"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.841492" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:31.833490" elapsed="0.008002"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.796836" elapsed="0.044656"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}, 'uuid': 'f7e9688f-8746-40ac-8fb1-e04173563395', 'host_name': 'node-3', 'profile': 'demo', 'reachability_sta...</var>
<status status="PASS" start="2024-12-12T15:58:31.681201" elapsed="0.160291"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.851055" level="INFO">${key} = ['cpe-14.nso-topology']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.841492" elapsed="0.009563"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.851055" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.851055" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.859561" level="INFO">${values} = ['demo-cpe']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.851055" elapsed="0.008506"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.860567" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.859561" elapsed="0.001006"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.860567" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:31.851055" elapsed="0.009512"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.860567" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.860567" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.869128" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.860567" elapsed="0.008561"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.870110" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.869128" elapsed="0.000982"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.870110" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:31.860567" elapsed="0.009543"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.870110" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.870110" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.879209" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.870110" elapsed="0.009099"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.879209" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.879209" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.879209" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:31.870110" elapsed="0.009099"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.880186" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.879209" elapsed="0.000977"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.888186" level="INFO">${values} = ['IOS XE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.880186" elapsed="0.008000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.889203" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.888186" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.889203" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:31.879209" elapsed="0.009994"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.889203" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.889203" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.897754" level="INFO">${values} = ['15.6(2)T']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.889203" elapsed="0.008551"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.897754" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.897754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.897754" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:31.889203" elapsed="0.008551"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.898754" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.898754" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.906772" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.898754" elapsed="0.008018"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.906772" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.906772" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.906772" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:31.898754" elapsed="0.008018"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.906772" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.906772" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.916316" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.906772" elapsed="0.009544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.916316" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.916316" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.916316" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:31.906772" elapsed="0.009544"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.917315" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.916316" elapsed="0.000999"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.925316" level="INFO">${values} = [22, 161]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.917315" elapsed="0.008001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.925316" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.925316" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.925316" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:31.916316" elapsed="0.009000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.926333" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.926333" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.948649" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.926333" elapsed="0.022316"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.948649" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:31.925316" elapsed="0.023333"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:31.851055" elapsed="0.097594"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.948649" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.948649" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.957633" level="INFO">${values} = ['cpe-14']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.008984"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.957633" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.008984"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.958650" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.958650" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.966218" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.958650" elapsed="0.007568"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.966218" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:31.957633" elapsed="0.008585"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:31.948649" elapsed="0.017569"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.967736" level="INFO">${convertListToString} = provider_node_id:['cpe-14']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:31.966218" elapsed="0.001518"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.967736" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.967736" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.976296" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.008560"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.977328" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.009592"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.977328" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.977328" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.985355" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.977328" elapsed="0.008027"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.985355" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:31.977328" elapsed="0.008027"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.985355" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.985355" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:31.993907" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.985355" elapsed="0.008552"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:31.993907" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:31.985355" elapsed="0.008552"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:31.993907" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:31.993907" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.001919" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:31.993907" elapsed="0.008012"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.002938" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:31.993907" elapsed="0.009031"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.002938" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.002938" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.011965" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.002938" elapsed="0.009027"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.011965" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:32.002938" elapsed="0.009027"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:31.967736" elapsed="0.044229"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}, 'uuid': '1e516a29-60ef-4f97-aa1c-6dedc43a624d', 'host_name': 'cpe-14.nso-topology', 'profile': 'demo-cpe',...</var>
<status status="PASS" start="2024-12-12T15:58:31.841492" elapsed="0.170473"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.020988" level="INFO">${key} = ['cpe-11.nso-topology']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.011965" elapsed="0.009023"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.020988" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.020988" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.030154" level="INFO">${values} = ['demo-cpe']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.020988" elapsed="0.009166"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.030154" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.030154" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.030154" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:32.020988" elapsed="0.009166"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.031137" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.030154" elapsed="0.000983"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.039154" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.031137" elapsed="0.008017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.039154" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.039154" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.039154" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:32.030154" elapsed="0.009000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.040138" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.040138" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.048740" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.040138" elapsed="0.008602"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.048740" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.048740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.048740" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:32.040138" elapsed="0.008602"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.048740" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.048740" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.057740" level="INFO">${values} = ['IOS XE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.049740" elapsed="0.008000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.058740" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.058740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.058740" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:32.048740" elapsed="0.010000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.058740" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.058740" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.067922" level="INFO">${values} = ['15.6(2)T']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.058740" elapsed="0.009182"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.069101" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.069101" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.069101" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:32.058740" elapsed="0.010361"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.069101" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.069101" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.078213" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.069101" elapsed="0.009112"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.078213" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.078213" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.078213" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:32.069101" elapsed="0.009112"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.078213" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.078213" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.087211" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.079210" elapsed="0.008001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.088211" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.088211" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.088211" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:32.078213" elapsed="0.009998"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.088211" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.088211" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.097005" level="INFO">${values} = [22, 161]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.088211" elapsed="0.009814"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.098097" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.098097" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.098097" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:32.088211" elapsed="0.009886"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.098097" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.098097" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.107343" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.098097" elapsed="0.009246"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.107343" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:32.098097" elapsed="0.009246"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:32.020988" elapsed="0.086355"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.107343" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.108359" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.001016"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.117453" level="INFO">${values} = ['cpe-11']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.108359" elapsed="0.009094"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.117453" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.010110"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.117453" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.117453" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.127016" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.117453" elapsed="0.009563"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.127016" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:32.117453" elapsed="0.009563"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:32.107343" elapsed="0.019673"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.127016" level="INFO">${convertListToString} = provider_node_id:['cpe-11']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.127016" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.127016" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.127993" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.127993" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.127993" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.127993" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.136994" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.127993" elapsed="0.009001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.136994" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:32.127993" elapsed="0.009001"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.136994" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.136994" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.146642" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.136994" elapsed="0.009648"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.146642" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:32.136994" elapsed="0.009648"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.146642" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.146642" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.155673" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.146642" elapsed="0.009031"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.155673" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:32.146642" elapsed="0.009031"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.156673" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.155673" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.164774" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.156673" elapsed="0.008101"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.165774" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:32.155673" elapsed="0.010101"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.165774" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.165774" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.174307" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.165774" elapsed="0.008533"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.174307" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:32.165774" elapsed="0.008533"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:32.127993" elapsed="0.046314"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}, 'uuid': '03e4241a-f616-427c-9a53-843b9c70117d', 'host_name': 'cpe-11.nso-topology', 'profile': 'demo-cpe',...</var>
<status status="PASS" start="2024-12-12T15:58:32.011965" elapsed="0.162342"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.183425" level="INFO">${key} = ['cpe-12.nso-topology']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.175290" elapsed="0.008135"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.184424" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.184424" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.192948" level="INFO">${values} = ['demo-cpe']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.184424" elapsed="0.008524"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.192948" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.192948" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.192948" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:32.184424" elapsed="0.008524"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.193979" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.193979" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.203005" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.193979" elapsed="0.009026"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.203005" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.203005" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.203005" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:32.193979" elapsed="0.009026"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.203005" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.203005" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.223615" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.203005" elapsed="0.020610"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.223615" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.223615" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.223615" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:32.203005" elapsed="0.020610"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.224616" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.224616" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.233171" level="INFO">${values} = ['IOS XE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.224616" elapsed="0.008555"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.233171" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.233171" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.233171" elapsed="0.001005"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:32.224616" elapsed="0.009560"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.234176" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.234176" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.242681" level="INFO">${values} = ['15.6(2)T']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.234176" elapsed="0.008505"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.242681" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.242681" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.243714" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:32.234176" elapsed="0.009538"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.243714" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.243714" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.252740" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.243714" elapsed="0.009026"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.252740" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.252740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.252740" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:32.243714" elapsed="0.009026"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.252740" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.252740" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.261766" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.252740" elapsed="0.009026"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.262761" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.261766" elapsed="0.000995"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.262761" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:32.252740" elapsed="0.010021"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.262761" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.262761" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.271317" level="INFO">${values} = [22, 161]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.262761" elapsed="0.008556"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.272300" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.271317" elapsed="0.000983"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.272300" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:32.262761" elapsed="0.009539"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.272300" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.272300" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.281368" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.272300" elapsed="0.009068"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.281368" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.281368" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.281368" elapsed="0.001000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:32.272300" elapsed="0.010068"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:32.183425" elapsed="0.098943"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.282368" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:32.282368" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.282368" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.282368" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.291405" level="INFO">${values} = ['cpe-12']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.282368" elapsed="0.009037"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.291405" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:32.282368" elapsed="0.009037"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.291405" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.291405" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.301917" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.291405" elapsed="0.010512"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.301917" elapsed="0.000000"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:32.291405" elapsed="0.010512"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:32.282368" elapsed="0.019549"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.301917" level="INFO">${convertListToString} = provider_node_id:['cpe-12']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.301917" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.301917" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.302935" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.302935" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.302935" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.302935" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.311534" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.302935" elapsed="0.008599"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.311534" elapsed="0.000988"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:32.302935" elapsed="0.009587"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.312522" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.312522" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.321522" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.312522" elapsed="0.009000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.321522" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:32.312522" elapsed="0.009000"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.322520" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.322520" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.331080" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.322520" elapsed="0.008560"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.332063" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:32.321522" elapsed="0.010541"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.332063" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.332063" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.340064" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.332063" elapsed="0.008001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.340064" elapsed="0.000000"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:32.332063" elapsed="0.008001"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.341072" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.341072" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.350571" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.341072" elapsed="0.009499"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.350571" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:32.340064" elapsed="0.010507"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:32.302935" elapsed="0.047636"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}, 'uuid': 'ec014ac3-e03b-4227-89ed-66387aa0ac38', 'host_name': 'cpe-12.nso-topology', 'profile': 'demo-cpe',...</var>
<status status="PASS" start="2024-12-12T15:58:32.175290" elapsed="0.175281"/>
</iter>
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.359653" level="INFO">${key} = ['cpe-13.nso-topology']</msg>
<var>${key}</var>
<arg>${data}</arg>
<arg>$.host_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.350571" elapsed="0.009082"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.359653" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.359653" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.368250" level="INFO">${values} = ['demo-cpe']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.359653" elapsed="0.008597"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.368784" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.368784" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.368784" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:32.359653" elapsed="0.009131"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.368784" level="INFO">${search} = $.dg_name</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.368784" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.378394" level="INFO">${values} = ['CDG_Pool_1-1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.368784" elapsed="0.009610"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.378394" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.378394" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.378394" elapsed="0.000000"/>
</kw>
<var name="${item}">dg_name</var>
<status status="PASS" start="2024-12-12T15:58:32.368784" elapsed="0.010610"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.379394" level="INFO">${search} = $.reachability_check</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.379394" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.388391" level="INFO">${values} = ['REACH_CHECK_ENABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.379394" elapsed="0.008997"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.388391" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.388391" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.388391" elapsed="0.000000"/>
</kw>
<var name="${item}">reachability_check</var>
<status status="PASS" start="2024-12-12T15:58:32.379394" elapsed="0.008997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.388391" level="INFO">${search} = $.product_info.software_type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.388391" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.397997" level="INFO">${values} = ['IOS XE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.388391" elapsed="0.009606"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.397997" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.397997" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.397997" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_type</var>
<status status="PASS" start="2024-12-12T15:58:32.388391" elapsed="0.009606"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.397997" level="INFO">${search} = $.product_info.software_version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.397997" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.406980" level="INFO">${values} = ['15.6(2)T']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.397997" elapsed="0.008983"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.406980" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.406980" elapsed="0.001023"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.408003" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.software_version</var>
<status status="PASS" start="2024-12-12T15:58:32.397997" elapsed="0.010006"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.408003" level="INFO">${search} = $.product_info.manufacturer</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.408003" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.416569" level="INFO">${values} = ['Cisco Systems']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.408003" elapsed="0.008566"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.417567" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.416569" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.417567" elapsed="0.000000"/>
</kw>
<var name="${item}">product_info.manufacturer</var>
<status status="PASS" start="2024-12-12T15:58:32.408003" elapsed="0.009564"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.417567" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.417567" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.426094" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.417567" elapsed="0.008527"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.427125" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.427125" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.427125" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:32.417567" elapsed="0.009558"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.427125" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.427125" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.436135" level="INFO">${values} = [22, 161]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.427125" elapsed="0.009010"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.436135" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.436135" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.436135" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:32.427125" elapsed="0.009010"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.437137" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.437137" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.445754" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.437137" elapsed="0.008617"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.445754" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.445754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.445754" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:32.436135" elapsed="0.009619"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:32.359653" elapsed="0.086101"/>
</for>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.446752" level="INFO">@{list} = [ ]</msg>
<var>@{list}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:32.446752" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.446752" level="INFO">${search} = $.providers_family..provider_node_id</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.446752" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.454751" level="INFO">${values} = ['cpe-13']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.446752" elapsed="0.007999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.454751" elapsed="0.001000"/>
</kw>
<var name="${item}">provider_node_id</var>
<status status="PASS" start="2024-12-12T15:58:32.446752" elapsed="0.008999"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.455751" level="INFO">${search} = $.providers_family..provider_name</msg>
<var>${search}</var>
<arg>$.providers_family..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.455751" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.463819" level="INFO">${values} = ['nso201']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.455751" elapsed="0.008068"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${list}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.463819" elapsed="0.001005"/>
</kw>
<var name="${item}">provider_name</var>
<status status="PASS" start="2024-12-12T15:58:32.455751" elapsed="0.009073"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_PROVIDER}</value>
<status status="PASS" start="2024-12-12T15:58:32.446752" elapsed="0.018072"/>
</for>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.464824" level="INFO">${convertListToString} = provider_node_id:['cpe-13']:provider_name:['nso201']</msg>
<var>${convertListToString}</var>
<arg>":".join(${list})</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${key}:${convertListToString}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.464824" level="INFO">${MSG} = --Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_inf...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}:${convertListToString}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.464824" level="INFO">${search} = $.admin_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.474951" level="INFO">${values} = ['ROBOT_ADMIN_STATE_UP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.010127"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.474951" elapsed="0.000000"/>
</kw>
<var name="${item}">admin_state</var>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.010127"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.474951" level="INFO">${search} = $.operational_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.474951" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.485075" level="INFO">${values} = ['ROBOT_OPER_STATE_OK']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.474951" elapsed="0.010124"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.485075" elapsed="0.000000"/>
</kw>
<var name="${item}">operational_state</var>
<status status="PASS" start="2024-12-12T15:58:32.474951" elapsed="0.010124"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.485075" level="INFO">${search} = $.reachability_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.485075" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.508142" level="INFO">${values} = ['CONN_STATE_REACHABLE']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.485075" elapsed="0.023067"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.508142" elapsed="0.001527"/>
</kw>
<var name="${item}">reachability_state</var>
<status status="PASS" start="2024-12-12T15:58:32.485075" elapsed="0.024594"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.509669" level="INFO">${search} = $.nso_state</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.509669" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.517714" level="INFO">${values} = ['SYNCED']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.509669" elapsed="0.008045"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.517714" elapsed="0.001016"/>
</kw>
<var name="${item}">nso_state</var>
<status status="PASS" start="2024-12-12T15:58:32.509669" elapsed="0.009061"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.518730" level="INFO">${search} = $.errors</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.518730" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:32.527270" level="INFO">${values} = []</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:32.518730" elapsed="0.008540"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICES_HEALTH}</arg>
<arg>${key}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.528293" elapsed="0.000000"/>
</kw>
<var name="${item}">errors</var>
<status status="PASS" start="2024-12-12T15:58:32.518730" elapsed="0.009563"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:32.464824" elapsed="0.063469"/>
</for>
<var name="${data}">{'node_ip': {'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}, 'uuid': '37a04da8-1d39-432b-ac0b-b7f44541d716', 'host_name': 'cpe-13.nso-topology', 'profile': 'demo-cpe',...</var>
<status status="PASS" start="2024-12-12T15:58:32.350571" elapsed="0.177722"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="2.028565"/>
</for>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="2.028565"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:30.499728" elapsed="2.028565"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.528293" level="INFO">${CNC_DEVICES} = ["['node-4']:profile:['demo']", "['node-4']:dg_name:['CDG_Pool_1-1']", "['node-4']:reachability_check:['REACH_CHECK_ENABLE']", "['node-4']:product_info.software_type:['IOS XR']", "['node-4']:product_i...</msg>
<arg>${CNC_DEVICES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:32.528293" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.528293" level="INFO">${CNC_DEVICES_HEALTH} = ["['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']", "['node-4']:operational_state:['ROBOT_OPER_STATE_OK']", "['node-4']:reachability_state:['CONN_STATE_REACHABLE']", "['node-4']:nso_state:['SYNCED']",...</msg>
<arg>${CNC_DEVICES_HEALTH}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:32.528293" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:32.528293" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC device information from /crosswork/inventory/v1/nodes/query</doc>
<status status="PASS" start="2024-12-12T15:58:30.351753" elapsed="2.176540"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:32.529293" level="INFO">Set test message to:
--Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_info.software_version:['24.2.1']
['node-4']:product_info.manufacturer:['Cisco Systems']
['node-4']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-4']:connectivity_info..port:[22, 161, 830, 57400]
['node-4']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}]]
['node-4']:provider_node_id:['node-4']:provider_name:['nso201']
['node-1']:profile:['demo']
['node-1']:dg_name:['CDG_Pool_1-1']
['node-1']:reachability_check:['REACH_CHECK_ENABLE']
['node-1']:product_info.software_type:['IOS XR']
['node-1']:product_info.software_version:['24.2.1']
['node-1']:product_info.manufacturer:['Cisco Systems']
['node-1']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-1']:connectivity_info..port:[22, 161, 830, 57400]
['node-1']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}]]
['node-1']:provider_node_id:['node-1']:provider_name:['nso201']
['node-2']:profile:['demo']
['node-2']:dg_name:['CDG_Pool_1-1']
['node-2']:reachability_check:['REACH_CHECK_ENABLE']
['node-2']:product_info.software_type:['IOS XR']
['node-2']:product_info.software_version:['24.2.1']
['node-2']:product_info.manufacturer:['Cisco Systems']
['node-2']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-2']:connectivity_info..port:[22, 161, 830, 57400]
['node-2']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}]]
['node-2']:provider_node_id:['node-2']:provider_name:['nso201']
['node-7']:profile:['demo']
['node-7']:dg_name:['CDG_Pool_1-1']
['node-7']:reachability_check:['REACH_CHECK_ENABLE']
['node-7']:product_info.software_type:['IOS XR']
['node-7']:product_info.software_version:['24.2.1']
['node-7']:product_info.manufacturer:['Cisco Systems']
['node-7']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-7']:connectivity_info..port:[22, 161, 830, 57400]
['node-7']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}]]
['node-7']:provider_node_id:['node-7']:provider_name:['nso201']
['node-8']:profile:['demo']
['node-8']:dg_name:['CDG_Pool_1-1']
['node-8']:reachability_check:['REACH_CHECK_ENABLE']
['node-8']:product_info.software_type:['IOS XR']
['node-8']:product_info.software_version:['24.2.1']
['node-8']:product_info.manufacturer:['Cisco Systems']
['node-8']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-8']:connectivity_info..port:[22, 161, 830, 57400]
['node-8']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}]]
['node-8']:provider_node_id:['node-8']:provider_name:['nso201']
['node-5']:profile:['demo']
['node-5']:dg_name:['CDG_Pool_1-1']
['node-5']:reachability_check:['REACH_CHECK_ENABLE']
['node-5']:product_info.software_type:['IOS XR']
['node-5']:product_info.software_version:['24.2.1']
['node-5']:product_info.manufacturer:['Cisco Systems']
['node-5']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-5']:connectivity_info..port:[22, 161, 830, 57400]
['node-5']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}]]
['node-5']:provider_node_id:['node-5']:provider_name:['nso201']
['node-6']:profile:['demo']
['node-6']:dg_name:['CDG_Pool_1-1']
['node-6']:reachability_check:['REACH_CHECK_ENABLE']
['node-6']:product_info.software_type:['IOS XR']
['node-6']:product_info.software_version:['24.2.1']
['node-6']:product_info.manufacturer:['Cisco Systems']
['node-6']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-6']:connectivity_info..port:[22, 161, 830, 57400]
['node-6']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}]]
['node-6']:provider_node_id:['node-6']:provider_name:['nso201']
['node-3']:profile:['demo']
['node-3']:dg_name:['CDG_Pool_1-1']
['node-3']:reachability_check:['REACH_CHECK_ENABLE']
['node-3']:product_info.software_type:['IOS XR']
['node-3']:product_info.software_version:['24.2.1']
['node-3']:product_info.manufacturer:['Cisco Systems']
['node-3']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-3']:connectivity_info..port:[22, 161, 830, 57400]
['node-3']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}]]
['node-3']:provider_node_id:['node-3']:provider_name:['nso201']
['cpe-14.nso-topology']:profile:['demo-cpe']
['cpe-14.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-14.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-14.nso-topology']:product_info.software_type:['IOS XE']
['cpe-14.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-14.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-14.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-14.nso-topology']:connectivity_info..port:[22, 161]
['cpe-14.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}]]
['cpe-14.nso-topology']:provider_node_id:['cpe-14']:provider_name:['nso201']
['cpe-11.nso-topology']:profile:['demo-cpe']
['cpe-11.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-11.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-11.nso-topology']:product_info.software_type:['IOS XE']
['cpe-11.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-11.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-11.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-11.nso-topology']:connectivity_info..port:[22, 161]
['cpe-11.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}]]
['cpe-11.nso-topology']:provider_node_id:['cpe-11']:provider_name:['nso201']
['cpe-12.nso-topology']:profile:['demo-cpe']
['cpe-12.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-12.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-12.nso-topology']:product_info.software_type:['IOS XE']
['cpe-12.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-12.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-12.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-12.nso-topology']:connectivity_info..port:[22, 161]
['cpe-12.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}]]
['cpe-12.nso-topology']:provider_node_id:['cpe-12']:provider_name:['nso201']
['cpe-13.nso-topology']:profile:['demo-cpe']
['cpe-13.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-13.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-13.nso-topology']:product_info.software_type:['IOS XE']
['cpe-13.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-13.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-13.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-13.nso-topology']:connectivity_info..port:[22, 161]
['cpe-13.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}]]
['cpe-13.nso-topology']:provider_node_id:['cpe-13']:provider_name:['nso201']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:32.529293" elapsed="0.000000"/>
</kw>
<doc>Find key device information</doc>
<tag>DATA-COLLECTION</tag>
<tag>DEVICE</tag>
<status status="PASS" start="2024-12-12T15:58:30.350722" elapsed="2.178571">--Devices--
['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_info.software_version:['24.2.1']
['node-4']:product_info.manufacturer:['Cisco Systems']
['node-4']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-4']:connectivity_info..port:[22, 161, 830, 57400]
['node-4']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}]]
['node-4']:provider_node_id:['node-4']:provider_name:['nso201']
['node-1']:profile:['demo']
['node-1']:dg_name:['CDG_Pool_1-1']
['node-1']:reachability_check:['REACH_CHECK_ENABLE']
['node-1']:product_info.software_type:['IOS XR']
['node-1']:product_info.software_version:['24.2.1']
['node-1']:product_info.manufacturer:['Cisco Systems']
['node-1']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-1']:connectivity_info..port:[22, 161, 830, 57400]
['node-1']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}]]
['node-1']:provider_node_id:['node-1']:provider_name:['nso201']
['node-2']:profile:['demo']
['node-2']:dg_name:['CDG_Pool_1-1']
['node-2']:reachability_check:['REACH_CHECK_ENABLE']
['node-2']:product_info.software_type:['IOS XR']
['node-2']:product_info.software_version:['24.2.1']
['node-2']:product_info.manufacturer:['Cisco Systems']
['node-2']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-2']:connectivity_info..port:[22, 161, 830, 57400]
['node-2']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}]]
['node-2']:provider_node_id:['node-2']:provider_name:['nso201']
['node-7']:profile:['demo']
['node-7']:dg_name:['CDG_Pool_1-1']
['node-7']:reachability_check:['REACH_CHECK_ENABLE']
['node-7']:product_info.software_type:['IOS XR']
['node-7']:product_info.software_version:['24.2.1']
['node-7']:product_info.manufacturer:['Cisco Systems']
['node-7']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-7']:connectivity_info..port:[22, 161, 830, 57400]
['node-7']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}]]
['node-7']:provider_node_id:['node-7']:provider_name:['nso201']
['node-8']:profile:['demo']
['node-8']:dg_name:['CDG_Pool_1-1']
['node-8']:reachability_check:['REACH_CHECK_ENABLE']
['node-8']:product_info.software_type:['IOS XR']
['node-8']:product_info.software_version:['24.2.1']
['node-8']:product_info.manufacturer:['Cisco Systems']
['node-8']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-8']:connectivity_info..port:[22, 161, 830, 57400]
['node-8']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}]]
['node-8']:provider_node_id:['node-8']:provider_name:['nso201']
['node-5']:profile:['demo']
['node-5']:dg_name:['CDG_Pool_1-1']
['node-5']:reachability_check:['REACH_CHECK_ENABLE']
['node-5']:product_info.software_type:['IOS XR']
['node-5']:product_info.software_version:['24.2.1']
['node-5']:product_info.manufacturer:['Cisco Systems']
['node-5']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-5']:connectivity_info..port:[22, 161, 830, 57400]
['node-5']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}]]
['node-5']:provider_node_id:['node-5']:provider_name:['nso201']
['node-6']:profile:['demo']
['node-6']:dg_name:['CDG_Pool_1-1']
['node-6']:reachability_check:['REACH_CHECK_ENABLE']
['node-6']:product_info.software_type:['IOS XR']
['node-6']:product_info.software_version:['24.2.1']
['node-6']:product_info.manufacturer:['Cisco Systems']
['node-6']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-6']:connectivity_info..port:[22, 161, 830, 57400]
['node-6']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}]]
['node-6']:provider_node_id:['node-6']:provider_name:['nso201']
['node-3']:profile:['demo']
['node-3']:dg_name:['CDG_Pool_1-1']
['node-3']:reachability_check:['REACH_CHECK_ENABLE']
['node-3']:product_info.software_type:['IOS XR']
['node-3']:product_info.software_version:['24.2.1']
['node-3']:product_info.manufacturer:['Cisco Systems']
['node-3']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']
['node-3']:connectivity_info..port:[22, 161, 830, 57400]
['node-3']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}]]
['node-3']:provider_node_id:['node-3']:provider_name:['nso201']
['cpe-14.nso-topology']:profile:['demo-cpe']
['cpe-14.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-14.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-14.nso-topology']:product_info.software_type:['IOS XE']
['cpe-14.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-14.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-14.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-14.nso-topology']:connectivity_info..port:[22, 161]
['cpe-14.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}]]
['cpe-14.nso-topology']:provider_node_id:['cpe-14']:provider_name:['nso201']
['cpe-11.nso-topology']:profile:['demo-cpe']
['cpe-11.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-11.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-11.nso-topology']:product_info.software_type:['IOS XE']
['cpe-11.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-11.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-11.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-11.nso-topology']:connectivity_info..port:[22, 161]
['cpe-11.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}]]
['cpe-11.nso-topology']:provider_node_id:['cpe-11']:provider_name:['nso201']
['cpe-12.nso-topology']:profile:['demo-cpe']
['cpe-12.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-12.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-12.nso-topology']:product_info.software_type:['IOS XE']
['cpe-12.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-12.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-12.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-12.nso-topology']:connectivity_info..port:[22, 161]
['cpe-12.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}]]
['cpe-12.nso-topology']:provider_node_id:['cpe-12']:provider_name:['nso201']
['cpe-13.nso-topology']:profile:['demo-cpe']
['cpe-13.nso-topology']:dg_name:['CDG_Pool_1-1']
['cpe-13.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']
['cpe-13.nso-topology']:product_info.software_type:['IOS XE']
['cpe-13.nso-topology']:product_info.software_version:['15.6(2)T']
['cpe-13.nso-topology']:product_info.manufacturer:['Cisco Systems']
['cpe-13.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']
['cpe-13.nso-topology']:connectivity_info..port:[22, 161]
['cpe-13.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}]]
['cpe-13.nso-topology']:provider_node_id:['cpe-13']:provider_name:['nso201']

</status>
</test>
<test id="s1-t6" name="Retrieve NSO Service Types" line="73">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:32.531694" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.531694" elapsed="0.000000"/>
</kw>
<kw name="get-service-types" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.532721" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.532721" level="INFO">${description} = Retrieve NSO Service Types</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.532721" level="INFO">@{CNC_SERVICE_TYPES} = [ ]</msg>
<var>@{CNC_SERVICE_TYPES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.532721" level="INFO">${myurl} = /crosswork/cnc/api/v1/serviceTypes</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/serviceTypes</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.532721" level="INFO">${payload} = {"transport":true}</msg>
<var>${payload}</var>
<arg>{"transport":true}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.533734" level="INFO">${payload_json} = {'transport': True}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.001013"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:32.665336" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/serviceTypes 
 path_url=/crosswork/cnc/api/v1/serviceTypes 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '19'} 
 body=b'{"transport": true}' 
 </msg>
<msg time="2024-12-12T15:58:32.665336" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/serviceTypes 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:32 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"serviceTypes":[{"serviceType":"Tunnel","servicePath":"ietf-te:te/tunnels/tunnel","serviceLayer":"TRANSPORT"},{"serviceType":"ODN-Template","servicePath":"cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template","serviceLayer":"TRANSPORT"},{"serviceType":"NSS","servicePath":"ietf-network-slice-service:network-slice-services/slice-service","serviceLayer":"NETWORK_SLICE"},{"serviceType":"L3VPN-Service","servicePath":"ietf-l3vpn-ntw:l3vpn-ntw/vpn-services/vpn-service","serviceLayer":"VPN"},{"serviceType":"L2VPN-Service","servicePath":"ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service","serviceLayer":"VPN"},{"serviceType":"Circuit-Style Policy","servicePath":"cisco-cs-sr-te-cfp:cs-sr-te-policy","serviceLayer":"TRANSPORT"},{"serviceType":"Policy","servicePath":"cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-policies:policies/policy","serviceLayer":"TRANSPORT"}]} 
 </msg>
<msg time="2024-12-12T15:58:32.666332" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:32.666332" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:32.533734" elapsed="0.132598"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.666332" level="INFO">${json_response} = {'serviceTypes': [{'serviceType': 'Tunnel', 'servicePath': 'ietf-te:te/tunnels/tunnel', 'serviceLayer': 'TRANSPORT'}, {'serviceType': 'ODN-Template', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.666332" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.666332" level="INFO">${MSG} = --NSO Service Types--
</msg>
<arg>${MSG}</arg>
<arg>--NSO Service Types--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.666332" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.667348" level="INFO">Length is 7.</msg>
<arg>${json_response['serviceTypes']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:32.666332" elapsed="0.001016"/>
</kw>
<msg time="2024-12-12T15:58:32.667348" level="INFO">${RESP} = ('PASS', 7)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['serviceTypes']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:32.666332" elapsed="0.001016"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for NSO Service Types\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:32.667348" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:32.667348" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:32.667348" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.667348" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.001527"/>
</kw>
<var name="${item}">{'serviceType': 'Tunnel', 'servicePath': 'ietf-te:te/tunnels/tunnel', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.001527"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.668875" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.668875" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.668875" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'ODN-Template', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-odn:odn/odn-template', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-12T15:58:32.668875" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.669888" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.669888" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.669888" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'NSS', 'servicePath': 'ietf-network-slice-service:network-slice-services/slice-service', 'serviceLayer': 'NETWORK_SLICE'}</var>
<status status="PASS" start="2024-12-12T15:58:32.669888" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.670888" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.670888" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.670888" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'L3VPN-Service', 'servicePath': 'ietf-l3vpn-ntw:l3vpn-ntw/vpn-services/vpn-service', 'serviceLayer': 'VPN'}</var>
<status status="PASS" start="2024-12-12T15:58:32.670888" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.671905" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.670888" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.671905" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'L2VPN-Service', 'servicePath': 'ietf-l2vpn-ntw:l2vpn-ntw/vpn-services/vpn-service', 'serviceLayer': 'VPN'}</var>
<status status="PASS" start="2024-12-12T15:58:32.670888" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.672905" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.671905" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.672905" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'Circuit-Style Policy', 'servicePath': 'cisco-cs-sr-te-cfp:cs-sr-te-policy', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-12T15:58:32.671905" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.672905" level="INFO">${MSG} = --NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceLayer']}:${item['serviceType']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.672905" elapsed="0.000982"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item['serviceLayer']}:${item['serviceType']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.673887" elapsed="0.000000"/>
</kw>
<var name="${item}">{'serviceType': 'Policy', 'servicePath': 'cisco-sr-te-cfp:sr-te/cisco-sr-te-cfp-sr-policies:policies/policy', 'serviceLayer': 'TRANSPORT'}</var>
<status status="PASS" start="2024-12-12T15:58:32.672905" elapsed="0.000982"/>
</iter>
<var>${item}</var>
<value>@{json_response['serviceTypes']}</value>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.006539"/>
</for>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.006539"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:32.667348" elapsed="0.006539"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.673887" level="INFO">${CNC_SERVICE_TYPES} = ['TRANSPORT:Tunnel', 'TRANSPORT:ODN-Template', 'NETWORK_SLICE:NSS', 'VPN:L3VPN-Service', 'VPN:L2VPN-Service', 'TRANSPORT:Circuit-Style Policy', 'TRANSPORT:Policy']</msg>
<arg>${CNC_SERVICE_TYPES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:32.673887" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:32.673887" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves current running CNC/NSO VPN services</doc>
<status status="PASS" start="2024-12-12T15:58:32.532721" elapsed="0.141166"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:32.674887" level="INFO">Set test message to:
--NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:32.674887" elapsed="0.000000"/>
</kw>
<doc>Retrieve the available NSO service models</doc>
<tag>DATA-COLLECTION</tag>
<tag>NSO</tag>
<status status="PASS" start="2024-12-12T15:58:32.531323" elapsed="0.143564">--NSO Service Types--
TRANSPORT:Tunnel
TRANSPORT:ODN-Template
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service
TRANSPORT:Circuit-Style Policy
TRANSPORT:Policy

</status>
</test>
<test id="s1-t7" name="Retrieve CNC VPN Services" line="80">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:32.674887" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:32.674887" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-services" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.676414" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.676414" level="INFO">${description} = Retrieve CNC VPN Services</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.676414" level="INFO">@{CNC_SERVICES} = [ ]</msg>
<var>@{CNC_SERVICES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.677419" level="INFO">${myurl} = /crosswork/cnc/api/v1/services</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/services</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.677419" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.677419" level="INFO">${payload} = {"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["VPN"],"filterCriteria":{"conditionList":[]}}</msg>
<var>${payload}</var>
<arg>{"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["VPN"],"filterCriteria":{"conditionList":[]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:32.677419" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:32.677419" level="INFO">${payload_json} = {'sortAscending': True, 'sortColumn': 'serviceName', 'startRow': 0, 'endRow': 1000, 'transport': False, 'viewByType': ['VPN'], 'filterCriteria': {'conditionList': []}}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:32.677419" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:33.035611" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/services 
 path_url=/crosswork/cnc/api/v1/services 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '167'} 
 body=b'{"sortAscending": true, "sortColumn": "serviceName", "startRow": 0, "endRow": 1000, "transport": false, "viewByType": ["VPN"], "filterCriteria": {"conditionList": []}}' 
 </msg>
<msg time="2024-12-12T15:58:33.036594" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/services 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:32 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"elements":[],"totalCount":0,"status":"success"} 
 </msg>
<msg time="2024-12-12T15:58:33.036594" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:33.036594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:32.677419" elapsed="0.359175"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.036594" level="INFO">${json_response} = {'elements': [], 'totalCount': 0, 'status': 'success'}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.036594" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.037603" level="INFO">${MSG} = --VPN Services--
</msg>
<arg>${MSG}</arg>
<arg>--VPN Services--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.036594" elapsed="0.001009"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.037603" level="INFO">Length is 0.</msg>
<arg>${json_response['elements']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:33.037603" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.037603" level="INFO">${RESP} = ('PASS', 0)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['elements']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.037603" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for NSO Service Types\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.037603" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.037603" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.037603" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.038593" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SERVICES}</arg>
<arg>${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.038593" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:33.038593" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{json_response['elements']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:33.037603" elapsed="0.000990"/>
</for>
<status status="PASS" start="2024-12-12T15:58:33.037603" elapsed="0.000990"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.037603" elapsed="0.000990"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.038593" level="INFO">${CNC_SERVICES} = []</msg>
<arg>${CNC_SERVICES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.038593" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.038593" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active VPN service information from /crosswork/cnc/api/v1/services (first 1000)</doc>
<status status="PASS" start="2024-12-12T15:58:32.676414" elapsed="0.362179"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:33.038593" level="INFO">Set test message to:
--VPN Services--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:33.038593" elapsed="0.000000"/>
</kw>
<doc>Find all CNC Network Services</doc>
<tag>DATA-COLLECTION</tag>
<tag>SERVICES</tag>
<status status="PASS" start="2024-12-12T15:58:32.674887" elapsed="0.363706">--VPN Services--

</status>
</test>
<test id="s1-t8" name="Retrieve NSO VPN Transport" line="87">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:33.039593" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.039593" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-transport" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.040592" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.040592" level="INFO">${description} = Retrieve NSO VPN Transport</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.040592" level="INFO">@{CNC_TRANSPORT} = [ ]</msg>
<var>@{CNC_TRANSPORT}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.040592" level="INFO">${myurl} = /crosswork/cnc/api/v1/services</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/services</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.041594" level="INFO">${payload} = {"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["TRANSPORT"],"filterCriteria":{"conditionList":[]}}</msg>
<var>${payload}</var>
<arg>{"sortAscending":true,"sortColumn":"serviceName","startRow":0,"endRow":1000,"transport":false,"viewByType":["TRANSPORT"],"filterCriteria":{"conditionList":[]}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.001002"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.041594" level="INFO">${payload_json} = {'sortAscending': True, 'sortColumn': 'serviceName', 'startRow': 0, 'endRow': 1000, 'transport': False, 'viewByType': ['TRANSPORT'], 'filterCriteria': {'conditionList': []}}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.041594" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:33.204353" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/services 
 path_url=/crosswork/cnc/api/v1/services 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '173'} 
 body=b'{"sortAscending": true, "sortColumn": "serviceName", "startRow": 0, "endRow": 1000, "transport": false, "viewByType": ["TRANSPORT"], "filterCriteria": {"conditionList": []}}' 
 </msg>
<msg time="2024-12-12T15:58:33.204353" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/services 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:33 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"elements":[],"totalCount":0,"status":"success"} 
 </msg>
<msg time="2024-12-12T15:58:33.204353" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:33.204353" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:33.041594" elapsed="0.162759"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.204353" level="INFO">${json_response} = {'elements': [], 'totalCount': 0, 'status': 'success'}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.204353" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.204353" level="INFO">${MSG} = --NSO Transport--
</msg>
<arg>${MSG}</arg>
<arg>--NSO Transport--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.204353" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.205351" level="INFO">Length is 0.</msg>
<arg>${json_response['elements']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:33.204353" elapsed="0.000998"/>
</kw>
<msg time="2024-12-12T15:58:33.205351" level="INFO">${RESP} = ('PASS', 0)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['elements']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.204353" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for NSO Transport\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_TRANSPORT}</arg>
<arg>${item['serviceType']}:${item['serviceName']}:${item['provisioningState']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.206357" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.001006"/>
</iter>
<var>${item}</var>
<value>@{json_response['elements']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:33.205351" elapsed="0.001006"/>
</for>
<status status="PASS" start="2024-12-12T15:58:33.205351" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.205351" elapsed="0.001006"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.206357" level="INFO">${CNC_TRANSPORT} = []</msg>
<arg>${CNC_TRANSPORT}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.206357" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.206357" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active TRANSPORT service information from /crosswork/cnc/api/v1/services (first 1000)</doc>
<status status="PASS" start="2024-12-12T15:58:33.040592" elapsed="0.165765"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:33.206357" level="INFO">Set test message to:
--NSO Transport--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:33.206357" elapsed="0.000000"/>
</kw>
<doc>Find all CNC Transport services from NSO</doc>
<tag>DATA-COLLECTION</tag>
<tag>SERVICES</tag>
<status status="PASS" start="2024-12-12T15:58:33.039593" elapsed="0.166764">--NSO Transport--

</status>
</test>
<test id="s1-t9" name="Retrieve CNC Application Health" line="94">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:33.207333" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.207333" elapsed="0.000000"/>
</kw>
<kw name="get-application-health" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.208332" level="INFO">${myurl} = /crosswork/platform/v2/cluster/app/health/list</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/cluster/app/health/list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.208332" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.208332" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.208332" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.208332" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.208332" elapsed="0.001003"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.209335" level="INFO">@{CNC_APP_HEALTHY} = [ ]</msg>
<var>@{CNC_APP_HEALTHY}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.209335" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.209335" level="INFO">@{CNC_APP_DEGRADED} = [ ]</msg>
<var>@{CNC_APP_DEGRADED}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.209335" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.209335" level="INFO">${description} = Retrieve CNC Application Health</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.209335" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:33.409444" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/platform/v2/cluster/app/health/list 
 path_url=/crosswork/platform/v2/cluster/app/health/list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:33.409444" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/platform/v2/cluster/app/health/list 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:33 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '1284', 'Connection': 'keep-alive', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"app_health_summary":[{"health_summary":{"state":"Healthy","total":37,"healthy":37,"degraded":0,"down":0,"obj_name":"capp-infra","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":13,"healthy":13,"degraded":0,"down":0,"obj_name":"capp-coe","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":6,"healthy":6,"degraded":0,"down":0,"obj_name":"capp-cat","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":9,"healthy":9,"degraded":0,"down":0,"obj_name":"capp-aa","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":11,"healthy":11,"degraded":0,"down":0,"obj_name":"capp-common-ems-services","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":2,"healthy":2,"degraded":0,"down":0,"obj_name":"capp-hi","availability":"Not protected"},"recommendation":"None","description":""},{"health_summary":{"state":"Healthy","total":1,"healthy":1,"degraded":0,"down":0,"obj_name":"capp-ca","availability":"Not protected"},"recommendation":"None","description":""}]} 
 </msg>
<msg time="2024-12-12T15:58:33.410580" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:33.410580" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:33.209335" elapsed="0.201245"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.410580" level="INFO">${json_response} = {'app_health_summary': [{'health_summary': {'state': 'Healthy', 'total': 37, 'healthy': 37, 'degraded': 0, 'down': 0, 'obj_name': 'capp-infra', 'availability': 'Not protected'}, 'recommendation': 'Non...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.410580" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.410580" level="INFO">${MSG} = --CNC Application Health--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Application Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.410580" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.411581" level="INFO">Length is 37.</msg>
<arg>{json_response['app_health_summary']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.411581" level="INFO">${RESP} = ('PASS', 37)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>{json_response['app_health_summary']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.410580" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Application Health\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.411581" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.411581" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.411581" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.001006"/>
</kw>
<msg time="2024-12-12T15:58:33.412587" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.001006"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.412587" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.412587" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.412587" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.412587" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.412587" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.412587" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.412587" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.412587" elapsed="0.001000"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 37, 'healthy': 37, 'degraded': 0, 'down': 0, 'obj_name': 'capp-infra', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.002006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.413587" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.413587" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 13, 'healthy': 13, 'degraded': 0, 'down': 0, 'obj_name': 'capp-coe', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.001503"/>
</kw>
<msg time="2024-12-12T15:58:33.415090" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.001503"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.415090" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.415090" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.415090" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.415090" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.415090" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.415090" elapsed="0.001022"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.415090" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.415090" elapsed="0.001022"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 6, 'healthy': 6, 'degraded': 0, 'down': 0, 'obj_name': 'capp-cat', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.413587" elapsed="0.002525"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.416112" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.417111" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000999"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.417111" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.417111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.417111" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000999"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 9, 'healthy': 9, 'degraded': 0, 'down': 0, 'obj_name': 'capp-aa', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.416112" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.417111" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.001000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.418111" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
capp-common-ems-services:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.418111" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.418111" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.418111" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.418111" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.001000"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 11, 'healthy': 11, 'degraded': 0, 'down': 0, 'obj_name': 'capp-common-ems-services', 'availability': 'Not protected'}, 'recommendation': 'None', 'descr...</var>
<status status="PASS" start="2024-12-12T15:58:33.417111" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.418111" elapsed="0.000982"/>
</kw>
<msg time="2024-12-12T15:58:33.419093" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.418111" elapsed="0.000982"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.419093" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
capp-common-ems-services:Healthy
capp-hi:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.419093" elapsed="0.000000"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 2, 'healthy': 2, 'degraded': 0, 'down': 0, 'obj_name': 'capp-hi', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.418111" elapsed="0.001984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.420095" level="INFO">${equal} = ('PASS', None)</msg>
<var>${equal}</var>
<arg>Should Be Equal As Strings</arg>
<arg>${item['health_summary']['state']}</arg>
<arg>Healthy</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_HEALTHY}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.421121" level="INFO">${MSG} = --CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
capp-common-ems-services:Healthy
capp-hi:Healthy
capp-ca:Healthy
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Healthy\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.001026"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.001026"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['health_summary']['obj_name']}:Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_DEGRADED}</arg>
<arg>${item['health_summary']['obj_name']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.001026"/>
</if>
<var name="${item}">{'health_summary': {'state': 'Healthy', 'total': 1, 'healthy': 1, 'degraded': 0, 'down': 0, 'obj_name': 'capp-ca', 'availability': 'Not protected'}, 'recommendation': 'None', 'description': ''}</var>
<status status="PASS" start="2024-12-12T15:58:33.420095" elapsed="0.001026"/>
</iter>
<var>${item}</var>
<value>@{json_response['app_health_summary']}</value>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.009540"/>
</for>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.009540"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.411581" elapsed="0.009540"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.421121" level="INFO">${CNC_APP_DEGRADED} = []</msg>
<arg>${CNC_APP_DEGRADED}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.421121" level="INFO">${CNC_APP_HEALTHY} = ['capp-infra', 'capp-coe', 'capp-cat', 'capp-aa', 'capp-common-ems-services', 'capp-hi', 'capp-ca']</msg>
<arg>${CNC_APP_HEALTHY}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.421121" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves health info from the CNC cluster api (/crosswork/platform/v2/cluster/app/health/list). Creates 2 variables - one for healty applications, one for degraded.</doc>
<status status="PASS" start="2024-12-12T15:58:33.208332" elapsed="0.212789"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:33.421121" level="INFO">Set test message to:
--CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
capp-common-ems-services:Healthy
capp-hi:Healthy
capp-ca:Healthy

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:33.421121" elapsed="0.000000"/>
</kw>
<doc>Find Health of CNC applications</doc>
<tag>APPLICATIONS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-12T15:58:33.207333" elapsed="0.214762">--CNC Application Health--
capp-infra:Healthy
capp-coe:Healthy
capp-cat:Healthy
capp-aa:Healthy
capp-common-ems-services:Healthy
capp-hi:Healthy
capp-ca:Healthy

</status>
</test>
<test id="s1-t10" name="Retrieve CNC Device Alerts" line="101">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:33.423271" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.422261" elapsed="0.001010"/>
</kw>
<kw name="get-device-alarms" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.423271" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.423271" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Range=items=0-99</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.423271" level="INFO">${description} = Retrieve CNC Device Alerts</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.423271" level="INFO">@{CNC_DEVICE_ALARMS} = [ ]</msg>
<var>@{CNC_DEVICE_ALARMS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.001039"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.424310" level="INFO">${myurl} = /crosswork/platform/alarms/v1/alarms/?type=device&amp;_COND=and&amp;severity=Critical,Major&amp;_SORT=lastModifiedTimestamp.DESC</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/alarms/v1/alarms/?type=device&amp;_COND=and&amp;severity=Critical,Major&amp;_SORT=lastModifiedTimestamp.DESC</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.424310" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:33.618654" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/platform/alarms/v1/alarms/?type=device&amp;_COND=and&amp;severity=Critical,Major&amp;_SORT=lastModifiedTimestamp.DESC 
 path_url=/crosswork/platform/alarms/v1/alarms/?type=device&amp;_COND=and&amp;severity=Critical,Major&amp;_SORT=lastModifiedTimestamp.DESC 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Range': 'items=0-99'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:33.618654" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/platform/alarms/v1/alarms/?type=device&amp;_COND=and&amp;severity=Critical,Major&amp;_SORT=lastModifiedTimestamp.DESC 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:33 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '2', 'Connection': 'keep-alive', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body=[] 
 </msg>
<msg time="2024-12-12T15:58:33.618654" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:33.618654" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:33.424310" elapsed="0.194344"/>
</kw>
<kw name="Should Be True" owner="BuiltIn">
<arg>'${response.status_code}'=='200' or '${response.status_code}'=='206'</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2024-12-12T15:58:33.618654" elapsed="0.001005"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.619659" level="INFO">${alarms} = []</msg>
<var>${alarms}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.619659" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.619659" level="INFO">${MSG} = --Device Alarms--
</msg>
<arg>${MSG}</arg>
<arg>--Device Alarms--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.619659" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.620658" level="INFO">Length is 25.</msg>
<arg>{json_response['alarms']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.620658" level="INFO">${RESP} = ('PASS', 25)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>{json_response['alarms']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.619659" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Device Alarms\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item['displayName']}|${item['severity']}:${item['eventType']}:${item['source']}:${item['description']}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DEVICE_ALARMS}</arg>
<arg>${item['displayName']}|${item['severity']}:${item['eventType']}:${item['source']}:${item['description']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{alarms}</value>
<status status="NOT RUN" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.620658" level="INFO">${CNC_DEVICE_ALARMS} = []</msg>
<arg>${CNC_DEVICE_ALARMS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.620658" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.620658" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves Open/active device level level alarms (all)</doc>
<status status="PASS" start="2024-12-12T15:58:33.423271" elapsed="0.197387"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:33.621660" level="INFO">Set test message to:
--Device Alarms--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:33.621660" elapsed="0.000000"/>
</kw>
<doc>Find all the current /active device alerts</doc>
<tag>ALARMS</tag>
<tag>DATA-COLLECTION</tag>
<tag>DEVICE</tag>
<status status="PASS" start="2024-12-12T15:58:33.422261" elapsed="0.199399">--Device Alarms--

</status>
</test>
<test id="s1-t11" name="Retrieve CNC System Alarms" line="108">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:33.622662" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.621660" elapsed="0.001002"/>
</kw>
<kw name="get-system-alarms" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.622662" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.622662" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.622662" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.622662" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.622662" elapsed="0.001001"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">${description} = Retrieve CNC System Alarms</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">@{CNC_SYSALARMS} = [ ]</msg>
<var>@{CNC_SYSALARMS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">@{FIELDS_DATA} = [ Description | events_count ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>Description</arg>
<arg>events_count</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">@{FIELDS_EVENTS} = [ alarm_id ]</msg>
<var>@{FIELDS_EVENTS}</var>
<arg>alarm_id</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">${myurl} = /crosswork/alarms/v1/query</msg>
<var>${myurl}</var>
<arg>/crosswork/alarms/v1/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">${payload} = {"openAlarmsOnly":false,"criteria":"select * from alarm limit 20 page 0 where (state = 5 or state = 6)"}</msg>
<var>${payload}</var>
<arg>{"openAlarmsOnly":false,"criteria":"select * from alarm limit ${numalarms} page 0 where (state = 5 or state = 6)"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.623663" level="INFO">${json_payload} = {'openAlarmsOnly': False, 'criteria': 'select * from alarm limit 20 page 0 where (state = 5 or state = 6)'}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.623663" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:33.821203" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/alarms/v1/query 
 path_url=/crosswork/alarms/v1/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '107'} 
 body=b'{"openAlarmsOnly": false, "criteria": "select * from alarm limit 20 page 0 where (state = 5 or state = 6)"}' 
 </msg>
<msg time="2024-12-12T15:58:33.821203" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/alarms/v1/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:33 GMT', 'Content-Type': 'application/json', 'Content-Length': '31', 'Connection': 'keep-alive', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"state":"Success","alarms":[]} 
 </msg>
<msg time="2024-12-12T15:58:33.821203" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:33.821203" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json_payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:33.624662" elapsed="0.196541"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.821203" level="INFO">${json_response} = {'state': 'Success', 'alarms': []}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.821203" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.821203" level="INFO">${MSG} = --CNC System Alarms limit:(20)--
</msg>
<arg>${MSG}</arg>
<arg>--CNC System Alarms limit:(${numalarms})--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.821203" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.822200" level="INFO">Length is 25.</msg>
<arg>{json_response['alarms']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.822200" level="INFO">${RESP} = ('PASS', 25)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>{json_response['alarms']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC System Alarms\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${key}</var>
<arg>${data}</arg>
<arg>$.State</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${key3}</var>
<arg>${data}</arg>
<arg>$.AlarmCategory</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${key2}</var>
<arg>${data}</arg>
<arg>$.Created</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\n--- Alarm | ${key}[0] | ${key3}[0] | ${key2}[0] ---\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSALARMS}</arg>
<arg>Alarms</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="NOT RUN" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</for>
<var name="${data}"/>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000982"/>
</iter>
<var>${data}</var>
<value>@{json_response['alarms']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:33.822200" elapsed="0.000982"/>
</for>
<status status="PASS" start="2024-12-12T15:58:33.822200" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:33.822200" elapsed="0.000982"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.823182" level="INFO">${CNC_SYSALARMS} = []</msg>
<arg>${CNC_SYSALARMS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:33.823182" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<arg>numalarms=20</arg>
<doc>Retrieves Open/active system level alarms (first 10)</doc>
<status status="PASS" start="2024-12-12T15:58:33.622662" elapsed="0.200520"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:33.823182" level="INFO">Set test message to:
--CNC System Alarms limit:(20)--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:33.823182" elapsed="0.000000"/>
</kw>
<doc>Find all the current /active system alarms</doc>
<tag>ALARMS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-12T15:58:33.621660" elapsed="0.202538">--CNC System Alarms limit:(20)--

</status>
</test>
<test id="s1-t12" name="Retrieve CNC Providers" line="115">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:33.825182" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:33.825182" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-providers" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">${myurl} = /crosswork/inventory/v1/providers/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/providers/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">${payload} = {"limit":100,"next_from":"0","filter":{}}</msg>
<var>${payload}</var>
<arg>{"limit":100,"next_from":"0","filter":{}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">${json_payload} = {'limit': 100, 'next_from': '0', 'filter': {}}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">@{CNC_PROVIDERS} = [ ]</msg>
<var>@{CNC_PROVIDERS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.826200" level="INFO">@{FIELDS} = [ profile | connectivity_info..port | connectivity_info..timeout | connectivity_info..type | connectivity_info..ipaddrs ]</msg>
<var>@{FIELDS}</var>
<arg>profile</arg>
<arg>connectivity_info..port</arg>
<arg>connectivity_info..timeout</arg>
<arg>connectivity_info..type</arg>
<arg>connectivity_info..ipaddrs</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:33.826200" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:33.827335" level="INFO">${description} = Retrieve CNC Providers</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:33.827335" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:34.024870" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/inventory/v1/providers/query 
 path_url=/crosswork/inventory/v1/providers/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:34.024870" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/inventory/v1/providers/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:33 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"uuid":"fd78a71b-de75-44d2-a08b-e3be08fc026c","name":"nso201","reachability_state":"CONN_STATE_REACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_NETCONF","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.18.134.28","mask":"32"}],"port":2022,"timeout":"90","reachability_state":"CONN_STATE_REACHABLE"},{"type":"ROBOT_MSVC_TRANS_HTTPS","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.18.134.28","mask":"32"}],"port":8888,"timeout":"90","reachability_state":"CONN_STATE_REACHABLE"},{"type":"ROBOT_MSVC_TRANS_HTTP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.18.134.28","mask":"32"}],"port":8080,"timeout":"90","reachability_state":"CONN_STATE_REACHABLE"}],"profile":"nso1","provider_device_key":"ROBOT_PROVDEVKEY_HOST_NAME","last_upd_time":"1733967686","supported_models":[{"model_prefix":"Cisco-IOS-XR","model_version":"7.52"}],"family":"ROBOT_PROVIDER_NSO","properties":{"ca_device_auth_nso":"ca_device_auth_nso","forward":"true","nso_crosslaunch_url":"https://198.18.134.28:8888"}},{"uuid":"212bc9ac-08c8-4b01-a505-77824be7fbce","name":"sr-pce-09","reachability_state":"CONN_STATE_REACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_HTTP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.9","mask":"32"}],"port":8080,"timeout":"90","reachability_state":"CONN_STATE_REACHABLE"}],"profile":"sr-pce","last_upd_time":"1733967686","family":"ROBOT_PROVIDER_XTC","properties":{"auto-onboard":"managed","device-profile":"demo"}},{"uuid":"bc4d70dc-5d51-4aa8-92fe-d205731d4107","name":"sr-pce-10","reachability_state":"CONN_STATE_REACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_HTTP","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.19.1.10","mask":"32"}],"port":8080,"timeout":"90","reachability_state":"CONN_STATE_REACHABLE"}],"profile":"sr-pce","last_upd_time":"1733967686","family":"ROBOT_PROVIDER_XTC","properties":{"auto-onboard":"managed","device-profile":"demo"}},{"uuid":"e70c3969-4c42-46e1-95c8-195f3a014cea","name":"syslog","reachability_state":"CONN_STATE_REACHABLE","connectivity_info":[{"type":"ROBOT_MSVC_TRANS_SSH","ipaddrs":[{"inet_af":"ROBOT_INET_ADDR_TYPE_v4","inet_addr":"198.18.134.28","mask":"32"}],"port":22,"timeout":"30","reachability_state":"CONN_STATE_REACHABLE"}],"profile":"nso-syslog","last_upd_time":"1733967686","family":"ROBOT_PROVIDER_SYSLOG_STORAGE","properties":{"DestinationDirectory":"/home/cisco/cw-logs"}}],"total_count":4,"result_count":4} 
 </msg>
<msg time="2024-12-12T15:58:34.024870" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:34.024870" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:33.827335" elapsed="0.197535"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.024870" level="INFO">${json_response} = {'data': [{'uuid': 'fd78a71b-de75-44d2-a08b-e3be08fc026c', 'name': 'nso201', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_NETCONF', 'ipaddrs': [{'inet...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:34.024870" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.024870" level="INFO">${MSG} = --CNC Providers--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Providers--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.024870" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.024870" level="INFO">Length is 4.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:34.024870" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:34.024870" level="INFO">${RESP} = ('PASS', 4)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:34.024870" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Providers\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:34.026383" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:34.026383" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:34.026383" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.026383" level="INFO">{'uuid': 'fd78a71b-de75-44d2-a08b-e3be08fc026c', 'name': 'nso201', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_NETCONF', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], 'port': 2022, 'timeout': '90', 'reachability_state': 'CONN_STATE_REACHABLE'}, {'type': 'ROBOT_MSVC_TRANS_HTTPS', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], 'port': 8888, 'timeout': '90', 'reachability_state': 'CONN_STATE_REACHABLE'}, {'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], 'port': 8080, 'timeout': '90', 'reachability_state': 'CONN_STATE_REACHABLE'}], 'profile': 'nso1', 'provider_device_key': 'ROBOT_PROVDEVKEY_HOST_NAME', 'last_upd_time': '1733967686', 'supported_models': [{'model_prefix': 'Cisco-IOS-XR', 'model_version': '7.52'}], 'family': 'ROBOT_PROVIDER_NSO', 'properties': {'ca_device_auth_nso': 'ca_device_auth_nso', 'forward': 'true', 'nso_crosslaunch_url': 'https://198.18.134.28:8888'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.027394" level="INFO">${key} = nso201</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.001011"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.027394" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.027394" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.035400" level="INFO">${values} = ['nso1']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.027394" elapsed="0.008006"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.035400" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.035400" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.035400" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:34.027394" elapsed="0.008006"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.036400" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.036400" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.044947" level="INFO">${values} = [2022, 8888, 8080]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.036400" elapsed="0.008547"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.044947" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.044947" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.044947" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:34.036400" elapsed="0.008547"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.044947" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.044947" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.054966" level="INFO">${values} = ['90', '90', '90']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.044947" elapsed="0.010019"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.054966" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.054966" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.054966" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-12T15:58:34.044947" elapsed="0.010019"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.055966" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.054966" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.065493" level="INFO">${values} = ['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_HTTPS', 'ROBOT_MSVC_TRANS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.055966" elapsed="0.009527"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.065493" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.065493" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.065493" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:34.054966" elapsed="0.010527"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.065493" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.065493" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.074075" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_AD...</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.065493" elapsed="0.008582"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.075074" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.074075" elapsed="0.000999"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.075074" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:34.065493" elapsed="0.009581"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:34.027394" elapsed="0.047680"/>
</for>
<var name="${data}">{'uuid': 'fd78a71b-de75-44d2-a08b-e3be08fc026c', 'name': 'nso201', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_NETCONF', 'ipaddrs': [{'inet_af': 'ROB...</var>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.048691"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.075074" level="INFO">{'uuid': '212bc9ac-08c8-4b01-a505-77824be7fbce', 'name': 'sr-pce-09', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}], 'port': 8080, 'timeout': '90', 'reachability_state': 'CONN_STATE_REACHABLE'}], 'profile': 'sr-pce', 'last_upd_time': '1733967686', 'family': 'ROBOT_PROVIDER_XTC', 'properties': {'auto-onboard': 'managed', 'device-profile': 'demo'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:34.075074" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.076074" level="INFO">${key} = sr-pce-09</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.075074" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.076074" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.076074" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.084255" level="INFO">${values} = ['sr-pce']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.076074" elapsed="0.008181"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.085272" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.084255" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.085272" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:34.076074" elapsed="0.009198"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.085272" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.085272" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.093824" level="INFO">${values} = [8080]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.085272" elapsed="0.008552"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.094830" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.093824" elapsed="0.001006"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.094830" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:34.085272" elapsed="0.009558"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.094830" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.094830" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.102848" level="INFO">${values} = ['90']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.094830" elapsed="0.009017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.103847" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.103847" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.103847" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-12T15:58:34.094830" elapsed="0.009017"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.103847" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.103847" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.112930" level="INFO">${values} = ['ROBOT_MSVC_TRANS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.103847" elapsed="0.009083"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.112930" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.112930" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.112930" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:34.103847" elapsed="0.009083"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.113912" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.112930" elapsed="0.000982"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.121930" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.113912" elapsed="0.008018"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.122930" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.121930" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:34.112930" elapsed="0.010000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:34.076074" elapsed="0.046856"/>
</for>
<var name="${data}">{'uuid': '212bc9ac-08c8-4b01-a505-77824be7fbce', 'name': 'sr-pce-09', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROB...</var>
<status status="PASS" start="2024-12-12T15:58:34.075074" elapsed="0.047856"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.122930" level="INFO">{'uuid': 'bc4d70dc-5d51-4aa8-92fe-d205731d4107', 'name': 'sr-pce-10', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}], 'port': 8080, 'timeout': '90', 'reachability_state': 'CONN_STATE_REACHABLE'}], 'profile': 'sr-pce', 'last_upd_time': '1733967686', 'family': 'ROBOT_PROVIDER_XTC', 'properties': {'auto-onboard': 'managed', 'device-profile': 'demo'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.122930" level="INFO">${key} = sr-pce-10</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.122930" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.001001"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.131500" level="INFO">${values} = ['sr-pce']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.123931" elapsed="0.007569"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.131500" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.131500" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.131500" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.008570"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.132485" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.131500" elapsed="0.000985"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.140076" level="INFO">${values} = [8080]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.132485" elapsed="0.007591"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.141022" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.141022" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.141022" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:34.131500" elapsed="0.009522"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.141022" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.141022" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.149556" level="INFO">${values} = ['90']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.141022" elapsed="0.008534"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.149556" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.149556" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.149556" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-12T15:58:34.141022" elapsed="0.008534"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.150556" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.150556" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.158559" level="INFO">${values} = ['ROBOT_MSVC_TRANS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.150556" elapsed="0.008003"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.158559" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.158559" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.158559" elapsed="0.000980"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:34.150556" elapsed="0.008983"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.159539" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.159539" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.168020" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.159539" elapsed="0.008481"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.168020" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.168020" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.168020" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:34.159539" elapsed="0.008481"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.045090"/>
</for>
<var name="${data}">{'uuid': 'bc4d70dc-5d51-4aa8-92fe-d205731d4107', 'name': 'sr-pce-10', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_HTTP', 'ipaddrs': [{'inet_af': 'ROB...</var>
<status status="PASS" start="2024-12-12T15:58:34.122930" elapsed="0.045090"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.169021" level="INFO">{'uuid': 'e70c3969-4c42-46e1-95c8-195f3a014cea', 'name': 'syslog', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], 'port': 22, 'timeout': '30', 'reachability_state': 'CONN_STATE_REACHABLE'}], 'profile': 'nso-syslog', 'last_upd_time': '1733967686', 'family': 'ROBOT_PROVIDER_SYSLOG_STORAGE', 'properties': {'DestinationDirectory': '/home/cisco/cw-logs'}}</msg>
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.169021" level="INFO">${key} = syslog</msg>
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.169021" level="INFO">${search} = $.profile</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.177866" level="INFO">${values} = ['nso-syslog']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.008845"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.177866" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.177866" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.177866" elapsed="0.000000"/>
</kw>
<var name="${item}">profile</var>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.008845"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.177866" level="INFO">${search} = $.connectivity_info..port</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.177866" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.186888" level="INFO">${values} = [22]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.177866" elapsed="0.009022"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.186888" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.186888" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.186888" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..port</var>
<status status="PASS" start="2024-12-12T15:58:34.177866" elapsed="0.009022"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.186888" level="INFO">${search} = $.connectivity_info..timeout</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.186888" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.196163" level="INFO">${values} = ['30']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.187882" elapsed="0.008281"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.196163" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.196163" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.196163" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..timeout</var>
<status status="PASS" start="2024-12-12T15:58:34.186888" elapsed="0.009275"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.196163" level="INFO">${search} = $.connectivity_info..type</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.196163" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.205181" level="INFO">${values} = ['ROBOT_MSVC_TRANS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.196163" elapsed="0.009018"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.205181" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.205181" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.205181" elapsed="0.001002"/>
</kw>
<var name="${item}">connectivity_info..type</var>
<status status="PASS" start="2024-12-12T15:58:34.196163" elapsed="0.010020"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.206183" level="INFO">${search} = $.connectivity_info..ipaddrs</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.206183" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.214732" level="INFO">${values} = [[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.206183" elapsed="0.008549"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.214732" level="INFO">${MSG} = --CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCO...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.214732" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.214732" elapsed="0.000000"/>
</kw>
<var name="${item}">connectivity_info..ipaddrs</var>
<status status="PASS" start="2024-12-12T15:58:34.206183" elapsed="0.008549"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.045711"/>
</for>
<var name="${data}">{'uuid': 'e70c3969-4c42-46e1-95c8-195f3a014cea', 'name': 'syslog', 'reachability_state': 'CONN_STATE_REACHABLE', 'connectivity_info': [{'type': 'ROBOT_MSVC_TRANS_SSH', 'ipaddrs': [{'inet_af': 'ROBOT_I...</var>
<status status="PASS" start="2024-12-12T15:58:34.169021" elapsed="0.045711"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.188349"/>
</for>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.188349"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:34.026383" elapsed="0.188349"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.214732" level="INFO">${CNC_PROVIDERS} = ["nso201|profile:['nso1']", 'nso201|connectivity_info..port:[2022, 8888, 8080]', "nso201|connectivity_info..timeout:['90', '90', '90']", "nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'R...</msg>
<arg>${CNC_PROVIDERS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:34.214732" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:34.215756" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Providers (first 100)</doc>
<status status="PASS" start="2024-12-12T15:58:33.825182" elapsed="0.390574"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:34.215881" level="INFO">Set test message to:
--CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_HTTPS', 'ROBOT_MSVC_TRANS_HTTP']
nso201|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]
sr-pce-09|profile:['sr-pce']
sr-pce-09|connectivity_info..port:[8080]
sr-pce-09|connectivity_info..timeout:['90']
sr-pce-09|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
sr-pce-09|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}]]
sr-pce-10|profile:['sr-pce']
sr-pce-10|connectivity_info..port:[8080]
sr-pce-10|connectivity_info..timeout:['90']
sr-pce-10|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
sr-pce-10|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}]]
syslog|profile:['nso-syslog']
syslog|connectivity_info..port:[22]
syslog|connectivity_info..timeout:['30']
syslog|connectivity_info..type:['ROBOT_MSVC_TRANS_SSH']
syslog|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:34.215881" elapsed="0.000000"/>
</kw>
<doc>Find Providers</doc>
<tag>DATA-COLLECTION</tag>
<tag>PROVIDERS</tag>
<status status="PASS" start="2024-12-12T15:58:33.824198" elapsed="0.391683">--CNC Providers--
nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_HTTPS', 'ROBOT_MSVC_TRANS_HTTP']
nso201|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]
sr-pce-09|profile:['sr-pce']
sr-pce-09|connectivity_info..port:[8080]
sr-pce-09|connectivity_info..timeout:['90']
sr-pce-09|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
sr-pce-09|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}]]
sr-pce-10|profile:['sr-pce']
sr-pce-10|connectivity_info..port:[8080]
sr-pce-10|connectivity_info..timeout:['90']
sr-pce-10|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']
sr-pce-10|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}]]
syslog|profile:['nso-syslog']
syslog|connectivity_info..port:[22]
syslog|connectivity_info..timeout:['30']
syslog|connectivity_info..type:['ROBOT_MSVC_TRANS_SSH']
syslog|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]

</status>
</test>
<test id="s1-t13" name="Retrieve CNC Credentials" line="122">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:34.217889" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.216893" elapsed="0.000996"/>
</kw>
<kw name="get-cnc-credentials-v2" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.217889" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.217889" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.217889" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.217889" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.217889" elapsed="0.001047"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">${description} = Retrieve CNC Credentials</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">@{CNC_CREDENTIALS} = [ ]</msg>
<var>@{CNC_CREDENTIALS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">@{FIELDS_DATA} = [ user_name | type ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>user_name</arg>
<arg>type</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">${myurl} = /crosswork/inventory/v1/credentials/query</msg>
<var>${myurl}</var>
<arg>/crosswork/inventory/v1/credentials/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">${payload} = {"limit":100,"next_from":"0","filter":{}}</msg>
<var>${payload}</var>
<arg>{"limit":100,"next_from":"0","filter":{}}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.218936" level="INFO">${json_payload} = {'limit': 100, 'next_from': '0', 'filter': {}}</msg>
<var>${json_payload}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:34.433761" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/inventory/v1/credentials/query 
 path_url=/crosswork/inventory/v1/credentials/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '46'} 
 body=b'{"limit": 100, "next_from": "0", "filter": {}}' 
 </msg>
<msg time="2024-12-12T15:58:34.433761" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/inventory/v1/credentials/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:34 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"profile":"external","user_pass":[{"user_name":"cw-admin","password":"******","type":"ROBOT_USERPASS_SSH"}]},{"profile":"nso-syslog","user_pass":[{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_SSH"}]},{"profile":"coe","user_pass":[{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_HTTPS"}]},{"profile":"ca_device_auth_nso","user_pass":[{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_HTTPS"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_HTTP"}]},{"profile":"demo-cpe","v2_info":{"read_community":"******"},"user_pass":[{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_SSH","enable_password":"ROBOT_USERPASSEN_ENABLE","enable_password_data":"******"}]},{"profile":"demo","v2_info":{"read_community":"******","write_community":"******"},"user_pass":[{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_SSH"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_TELNET"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_ADMIN"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_NETCONF"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_HTTP"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_GNMI"}]},{"profile":"csm","user_pass":[{"user_name":"cw-admin","password":"******","type":"ROBOT_USERPASS_SSH"}]},{"profile":"nso1","user_pass":[{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_NETCONF"},{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_HTTPS"},{"user_name":"admin","password":"******","type":"ROBOT_USERPASS_HTTP"}]},{"profile":"sr-pce","user_pass":[{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_SSH"},{"user_name":"cisco","password":"******","type":"ROBOT_USERPASS_HTTP"}]}],"total_count":9,"result_count":9} 
 </msg>
<msg time="2024-12-12T15:58:34.433761" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:34.434687" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>json=${json_payload}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:34.218936" elapsed="0.215751"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.434687" level="INFO">${json_response} = {'data': [{'profile': 'external', 'user_pass': [{'user_name': 'cw-admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}, {'profile': 'nso-syslog', 'user_pass': [{'user_name': 'cisco', 'passwor...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:34.434687" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.434687" level="INFO">${MSG} = --CNC Credentials--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Credentials--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.434687" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.435719" level="INFO">Length is 9.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:34.434687" elapsed="0.001032"/>
</kw>
<msg time="2024-12-12T15:58:34.435719" level="INFO">${RESP} = ('PASS', 9)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:34.434687" elapsed="0.001032"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for credentials\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:34.435719" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:34.435719" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:34.435719" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.435719" level="INFO">${key} = external</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.436709" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.436709" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.444812" level="INFO">${values} = ['cw-admin']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.436709" elapsed="0.008103"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.444812" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.444812" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.444812" elapsed="0.000978"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.436709" elapsed="0.009081"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.445790" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.445790" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.454790" level="INFO">${values} = ['ROBOT_USERPASS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.445790" elapsed="0.009000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.454790" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.454790" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.454790" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.445790" elapsed="0.009000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.019071"/>
</for>
<var name="${data}">{'profile': 'external', 'user_pass': [{'user_name': 'cw-admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}</var>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.019071"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.455790" level="INFO">${key} = nso-syslog</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.454790" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.455790" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.455790" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.463348" level="INFO">${values} = ['cisco']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.455790" elapsed="0.007558"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.464366" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.463348" elapsed="0.001018"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.464366" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.455790" elapsed="0.008576"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.464366" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.464366" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.472910" level="INFO">${values} = ['ROBOT_USERPASS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.464366" elapsed="0.008544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.473910" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.472910" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.464366" elapsed="0.009544"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.455790" elapsed="0.018120"/>
</for>
<var name="${data}">{'profile': 'nso-syslog', 'user_pass': [{'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}</var>
<status status="PASS" start="2024-12-12T15:58:34.454790" elapsed="0.019120"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.473910" level="INFO">${key} = coe</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.473910" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.497072" level="INFO">${values} = ['admin']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.474910" elapsed="0.022162"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.497072" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.497072" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.497072" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.023162"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.498056" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.498056" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.507046" level="INFO">${values} = ['ROBOT_USERPASS_HTTPS']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.498056" elapsed="0.008990"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.507046" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.507046" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.507046" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.498056" elapsed="0.008990"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.033136"/>
</for>
<var name="${data}">{'profile': 'coe', 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_HTTPS'}]}</var>
<status status="PASS" start="2024-12-12T15:58:34.473910" elapsed="0.033136"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.508065" level="INFO">${key} = ca_device_auth_nso</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.507046" elapsed="0.001019"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.508065" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.508065" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.517633" level="INFO">${values} = ['cisco', 'cisco']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.508065" elapsed="0.010567"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.518632" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.518632" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.518632" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.508065" elapsed="0.010567"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.518632" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.518632" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.528176" level="INFO">${values} = ['ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.518632" elapsed="0.009544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.528176" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.528176" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.528176" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.518632" elapsed="0.009544"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.508065" elapsed="0.020111"/>
</for>
<var name="${data}">{'profile': 'ca_device_auth_nso', 'user_pass': [{'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_HTTPS'}, {'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'...</var>
<status status="PASS" start="2024-12-12T15:58:34.507046" elapsed="0.021130"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.529175" level="INFO">${key} = demo-cpe</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.528176" elapsed="0.000999"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.529175" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.529175" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.538194" level="INFO">${values} = ['cisco']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.529175" elapsed="0.009019"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.538194" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.538194" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.538194" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.529175" elapsed="0.009019"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.538194" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.538194" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.547738" level="INFO">${values} = ['ROBOT_USERPASS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.538194" elapsed="0.009544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.548755" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.547738" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.548755" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.538194" elapsed="0.010561"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.529175" elapsed="0.019580"/>
</for>
<var name="${data}">{'profile': 'demo-cpe', 'v2_info': {'read_community': '******'}, 'user_pass': [{'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_SSH', 'enable_password': 'ROBOT_USERPASSEN_ENABLE', ...</var>
<status status="PASS" start="2024-12-12T15:58:34.528176" elapsed="0.020579"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.548755" level="INFO">${key} = demo</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.548755" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.549754" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.549754" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.558737" level="INFO">${values} = ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.549754" elapsed="0.008983"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.558737" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.558737" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.558737" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.549754" elapsed="0.008983"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.558737" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.558737" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.567797" level="INFO">${values} = ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT_USERPASS_ADMIN', 'ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTP', 'ROBOT_USERPASS_GNMI']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.558737" elapsed="0.009060"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.568814" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.567797" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.558737" elapsed="0.010077"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.548755" elapsed="0.020059"/>
</for>
<var name="${data}">{'profile': 'demo', 'v2_info': {'read_community': '******', 'write_community': '******'}, 'user_pass': [{'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}, {'user_name': 'cisco...</var>
<status status="PASS" start="2024-12-12T15:58:34.548755" elapsed="0.020059"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.568814" level="INFO">${key} = csm</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.569813" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.000999"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.578387" level="INFO">${values} = ['cw-admin']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.569813" elapsed="0.008574"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.578387" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.578387" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.578387" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.009573"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.579415" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.579415" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.586931" level="INFO">${values} = ['ROBOT_USERPASS_SSH']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.579415" elapsed="0.007516"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.587933" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.579415" elapsed="0.008518"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.019119"/>
</for>
<var name="${data}">{'profile': 'csm', 'user_pass': [{'user_name': 'cw-admin', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}]}</var>
<status status="PASS" start="2024-12-12T15:58:34.568814" elapsed="0.019119"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.587933" level="INFO">${key} = nso1</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.588932" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.588932" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.598061" level="INFO">${values} = ['admin', 'admin', 'admin']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.588932" elapsed="0.009129"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.598061" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.598061" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.598061" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.010128"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.598061" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.598061" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.607062" level="INFO">${values} = ['ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.598061" elapsed="0.009001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.607062" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.607062" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.000000"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.598061" elapsed="0.010000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.020128"/>
</for>
<var name="${data}">{'profile': 'nso1', 'user_pass': [{'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_NETCONF'}, {'user_name': 'admin', 'password': '******', 'type': 'ROBOT_USERPASS_HTTPS'}, {'user_n...</var>
<status status="PASS" start="2024-12-12T15:58:34.587933" elapsed="0.020128"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.608061" level="INFO">${key} = sr-pce</msg>
<var>${key}</var>
<arg>${data['profile']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.608061" level="INFO">${search} = $..user_name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.617644" level="INFO">${values} = ['cisco', 'cisco']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.009583"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.617644" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.617644" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.617644" elapsed="0.000000"/>
</kw>
<var name="${item}">user_name</var>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.009583"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.617644" level="INFO">${search} = $..type</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.617644" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:34.627183" level="INFO">${values} = ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_HTTP']</msg>
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:34.618645" elapsed="0.008538"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.627183" level="INFO">${MSG} = --CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|typ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item} : ${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.627183" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${key}|${item} : ${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.627183" elapsed="0.001018"/>
</kw>
<var name="${item}">type</var>
<status status="PASS" start="2024-12-12T15:58:34.617644" elapsed="0.010557"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_DATA}</value>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.020140"/>
</for>
<var name="${data}">{'profile': 'sr-pce', 'user_pass': [{'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_SSH'}, {'user_name': 'cisco', 'password': '******', 'type': 'ROBOT_USERPASS_HTTP'}]}</var>
<status status="PASS" start="2024-12-12T15:58:34.608061" elapsed="0.020140"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.192482"/>
</for>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.192482"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:34.435719" elapsed="0.192482"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.628201" level="INFO">${CNC_CREDENTIALS} = ["external|user_name : ['cw-admin']", "external|type : ['ROBOT_USERPASS_SSH']", "nso-syslog|user_name : ['cisco']", "nso-syslog|type : ['ROBOT_USERPASS_SSH']", "coe|user_name : ['admin']", "coe|type :...</msg>
<arg>${CNC_CREDENTIALS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:34.628201" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:34.628201" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Credentials</doc>
<status status="PASS" start="2024-12-12T15:58:34.217889" elapsed="0.410312"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:34.628201" level="INFO">Set test message to:
--CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|type : ['ROBOT_USERPASS_HTTPS']
ca_device_auth_nso|user_name : ['cisco', 'cisco']
ca_device_auth_nso|type : ['ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']
demo-cpe|user_name : ['cisco']
demo-cpe|type : ['ROBOT_USERPASS_SSH']
demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']
demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT_USERPASS_ADMIN', 'ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTP', 'ROBOT_USERPASS_GNMI']
csm|user_name : ['cw-admin']
csm|type : ['ROBOT_USERPASS_SSH']
nso1|user_name : ['admin', 'admin', 'admin']
nso1|type : ['ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']
sr-pce|user_name : ['cisco', 'cisco']
sr-pce|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_HTTP']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:34.628201" elapsed="0.000000"/>
</kw>
<doc>Find credential policies</doc>
<tag>CREDENTIALS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-12T15:58:34.216893" elapsed="0.412289">--CNC Credentials--
external|user_name : ['cw-admin']
external|type : ['ROBOT_USERPASS_SSH']
nso-syslog|user_name : ['cisco']
nso-syslog|type : ['ROBOT_USERPASS_SSH']
coe|user_name : ['admin']
coe|type : ['ROBOT_USERPASS_HTTPS']
ca_device_auth_nso|user_name : ['cisco', 'cisco']
ca_device_auth_nso|type : ['ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']
demo-cpe|user_name : ['cisco']
demo-cpe|type : ['ROBOT_USERPASS_SSH']
demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']
demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT_USERPASS_ADMIN', 'ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTP', 'ROBOT_USERPASS_GNMI']
csm|user_name : ['cw-admin']
csm|type : ['ROBOT_USERPASS_SSH']
nso1|user_name : ['admin', 'admin', 'admin']
nso1|type : ['ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']
sr-pce|user_name : ['cisco', 'cisco']
sr-pce|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_HTTP']

</status>
</test>
<test id="s1-t14" name="Retrieve CNC KPIs" line="129">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:34.630183" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:34.630183" elapsed="0.000000"/>
</kw>
<kw name="get-kpis" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.630183" level="INFO">${myurl} = /crosswork/hi/v1/kpis</msg>
<var>${myurl}</var>
<arg>/crosswork/hi/v1/kpis</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.630183" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.631204" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.631204" level="INFO">@{CNC_KPI} = [ ]</msg>
<var>@{CNC_KPI}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:34.631204" level="INFO">${description} = Retrieve CNC KPIs</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:35.054088" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/hi/v1/kpis 
 path_url=/crosswork/hi/v1/kpis 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:35.054088" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/hi/v1/kpis 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:34 GMT', 'Content-Type': 'text/plain; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={
  "kpis": {
    "kpi": [
      {
        "kpi_id": "pulse_device_uptime",
        "kpi_name": "Device uptime",
        "category": "BASICS",
        "summary": "Monitors device uptime",
        "details": "Monitors device uptime",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 600,
                "min": 600,
                "max": 1800,
                "increment": 60
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysObjectID"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysUpTime"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysContact"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysName"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysLocation"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysServices"
                  },
                  {
                    "path_id": "SNMPv2-MIB:SNMPv2-MIB/system/sysORLastChange"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_device_uptime_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_device_uptime\",\n  \"description\" : \"This alert template detects abnormal condition if KPI value goes below a threshold.\",\n  \"master_template\": \"stream-simple-threshold-below-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"ALERT_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"1800.0\",\n      \"display_name\" : \"Alert Threshold\",\n      \"description\": \"Device uptime in seconds below which alert is raised to detect recent reboot of the device\"\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_device_uptime\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003c= ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"CRITICAL : Device Reloaded {kpi_stream} sec back!\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003e ALERT_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : Device uptime \u003e Threshold.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expression\": \"Float64(sysUpTime)/100.0\"\n      },\n      {\n         \"type\"  : \"DEP_TYPE_METRIC\",\n         \"label\" : \"sysUpTime\",\n         \"eval_expression\" : \"SNMPv2-MIB:SNMPv2-MIB/system\"\n       }\n     ]\n  }\n}",
              "template": "One Level(Lower) Threshold",
              "parameters": {
                "parameter": [
                  {
                    "name": "ALERT_THRESHOLD",
                    "type": "float",
                    "value": "1800.0",
                    "description": "Device uptime in seconds below which alert is raised to detect recent reboot of the device",
                    "display_name": "Alert Threshold",
                    "possible_values": null
                  }
                ]
              },
              "type": "stream",
              "scope": "local"
            }
          ]
        },
        "dashboards": {
          "dashboard": [
            {
              "type": "jsonfile",
              "value": "Pulse-device-uptime-summary.json",
              "label": "Summary"
            }
          ]
        },
        "sensor_type": "SNMP",
        "module_and_revision": "SNMPv2-MIB:",
        "created_by": "admin",
        "creation_date": 1733967034,
        "last_updated_by": "admin",
        "last_updation_date": 1733967034
      },
      {
        "kpi_id": "pulse_cpu_threshold",
        "kpi_name": "CPU threshold",
        "category": "CPU",
        "summary": "Monitors CPU usage across route processor and line cards on routers",
        "details": "Monitors CPU usage across route processor and line cards on routers; generates an alert when CPU utilization exceeds the configured threshold",
        "sensor_groups": {
          "sensor_group": [
            {
              "cadence": {
                "default": 60,
                "min": 10,
                "max": 900,
                "increment": 10
              },
              "sensor_paths": {
                "sensor_path": [
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-one-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-five-minute"
                  },
                  {
                    "path_id": "Cisco-IOS-XR-wdsysmon-fd-oper:system-monitoring/cpu-utilization/total-cpu-fifteen-minute"
                  }
                ]
              }
            }
          ]
        },
        "alert_outputs": {
          "alert_output": [
            {
              "alert_tag": "node-name"
            },
            {
              "alert_tag": "Producer"
            }
          ]
        },
        "scripts": {
          "script": [
            {
              "script_id": "pulse_cpu_threshold_template.json",
              "script": "{\n  \"version\" : \"1.0\",\n  \"script_id\": \"pulse_cpu_threshold\",\n  \"description\" : \"This alert template detects abnormal measured values using 2 custom thresholds and the ability to provide dampening intervals on the thresholds\",\n  \"master_template\": \"two_level_threshold-master-template\",\n  \"Parameters\": [\n    {\n      \"name\": \"LEVEL1_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"50.0\",\n      \"display_name\" : \"Level 1 Alert Threshold\",\n      \"description\": \"Generates a level 1 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL1_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"WARNING\",\n      \"display_name\" : \"Level 1 Alert Severity\",\n      \"description\": \"Severity label of a level 1 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"LEVEL2_THRESHOLD\",\n      \"type\": \"float\",\n      \"value\": \"70.0\",\n      \"display_name\" : \"Level 2 Alert Threshold\",\n      \"description\": \"Generates a level 2 alert when this threshold is exceeded\"\n    },\n    {\n      \"name\": \"LEVEL2_SEVERITY\",\n      \"type\": \"string\",\n      \"value\": \"CRITICAL\",\n      \"display_name\" : \"Level 2 Alert Severity\",\n      \"description\": \"Severity label of a level 2 alert\",\n      \"possible_values\" : [\"CRITICAL\", \"WARNING\", \"MAJOR\",\"MINOR\",\"INFO\"]\n    },\n    {\n      \"name\": \"ALERT_PRE_FILTER\",\n      \"type\": \"string\",\n      \"value\": \"\\\"total-cpu-five-minute\\\" \u003e 0\",\n      \"description\": \"Pre filter evaluation for telemetry feed\"\n    }\n  ],\n  \"ssc\": {\n    \"name\": \"pulse_cpu_threshold\",\n    \"namespace\": \"cw.hi\",\n    \"description\": \"\",\n    \"root_expressions\": [\n      {\n        \"eval_expression\": \"critical_level || warning_level || clear_level\"\n      }\n    ],\n    \"dependencies\": [\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"critical_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"CRITICAL\",\n          \"preempt_priority\" : 1,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL2_SEVERITY} : {node-name}  5min CPU Utilization: {kpi_stream} % higher than Threshold: {LEVEL2_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"warning_level\",\n        \"eval_expression\": \"kpi_stream \u003e= LEVEL1_THRESHOLD \u0026\u0026 kpi_stream \u003c LEVEL2_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"WARNING\",\n          \"preempt_priority\" : 2,\n          \"preempt_group\" : \"level\",\n          \"format_string\": \"{LEVEL1_SEVERITY} : {node-name}  5min CPU Utilization: {kpi_stream} % higher than Threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"clear_level\",\n        \"eval_expression\": \"kpi_stream \u003c LEVEL1_THRESHOLD\",\n        \"symptom\": {\n          \"raise_when\": true,\n          \"level\" : \"INFO\",\n          \"format_string\": \"INFO : 5min CPU Utilization: {kpi_stream} is below threshold: {LEVEL1_THRESHOLD}%.\"\n        }\n      },\n      {\n        \"type\": \"DEP_TYPE_EXPRESSION\",\n        \"label\": \"kpi_stream\",\n        \"eval_expressio... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2024-12-12T15:58:35.054088" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:35.055036" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:34.631204" elapsed="0.423832"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.058615" level="INFO">${json_response} = {'kpis': {'kpi': [{'kpi_id': 'pulse_device_uptime', 'kpi_name': 'Device uptime', 'category': 'BASICS', 'summary': 'Monitors device uptime', 'details': 'Monitors device uptime', 'sensor_groups': {'sens...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.055036" elapsed="0.003579"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.058615" level="INFO">Length is 23.</msg>
<arg>{json_response['kpis']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:35.058615" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.058615" level="INFO">${RESP} = ('PASS', 23)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>{json_response['kpis']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:35.058615" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for KPIs\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.058615" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.058615" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:35.058615" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.059614" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_device_uptime', 'kpi_name': 'Device uptime', 'category': 'BASICS', 'summary': 'Monitors device uptime', 'details': 'Monitors device uptime', 'sensor_groups': {'sensor_group': [{'cade...</var>
<status status="PASS" start="2024-12-12T15:58:35.059614" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.059614" elapsed="0.001300"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cpu_threshold', 'kpi_name': 'CPU threshold', 'category': 'CPU', 'summary': 'Monitors CPU usage across route processor and line cards on routers', 'details': 'Monitors CPU usage acros...</var>
<status status="PASS" start="2024-12-12T15:58:35.059614" elapsed="0.001300"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.060914" elapsed="0.000998"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cpu_utilization', 'kpi_name': 'CPU utilization', 'category': 'CPU', 'summary': 'Monitors CPU usage across route processor and line cards on routers', 'details': 'Monitors CPU usage a...</var>
<status status="PASS" start="2024-12-12T15:58:35.060914" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.061912" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cef_drops', 'kpi_name': 'CEF drops', 'category': 'Dataplane-Counters', 'summary': 'Monitors CEF drop counters', 'details': 'Monitors CEF drop counters and baseline; generates an aler...</var>
<status status="PASS" start="2024-12-12T15:58:35.061912" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.062913" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_cli_filesystem_utilization', 'kpi_name': 'Filesystem utilization', 'category': 'Filesystem', 'summary': 'Monitors filesystem usage on active route processor', 'details': 'Monitors fi...</var>
<status status="PASS" start="2024-12-12T15:58:35.062913" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.062913" elapsed="0.000999"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ipsla_udp_echo_rtt', 'kpi_name': 'IP SLA UDP Echo RTT', 'category': 'IPSLA', 'summary': 'Monitors IP SLA UDP echo RTT; generates an alert when unusual RTT values occur', 'details': '...</var>
<status status="PASS" start="2024-12-12T15:58:35.062913" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.063912" elapsed="0.000982"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ipsla_udp_jitter', 'kpi_name': 'IP SLA UDP jitter monitoring', 'category': 'IPSLA', 'summary': 'Monitors IP SLA UDP jitter; generates an alert when an abnormal UDP jitter occurs', 'd...</var>
<status status="PASS" start="2024-12-12T15:58:35.063912" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.064894" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer2_lldp_summary', 'kpi_name': 'LLDP neighbors', 'category': 'LLDP', 'summary': 'Monitors LLDP neighbors; generates an alert when any sudden changes are detected', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-12T15:58:35.064894" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.064894" elapsed="0.001017"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_alarms', 'kpi_name': 'Layer 1 optical alarms', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical alarms', 'details': 'Monitors per-port optical alarms'...</var>
<status status="PASS" start="2024-12-12T15:58:35.064894" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.065911" elapsed="0.001001"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_errors', 'kpi_name': 'Layer 1 optical errors', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port Layer 1 errors', 'details': 'Monitors per-port Layer 1 errors;...</var>
<status status="PASS" start="2024-12-12T15:58:35.065911" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.066912" elapsed="0.000999"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_fecerrors', 'kpi_name': 'Layer 1 optical FEC errors', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical FEC errors', 'details': 'Monitors per-port opti...</var>
<status status="PASS" start="2024-12-12T15:58:35.066912" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.067911" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_power', 'kpi_name': 'Layer 1 optical power', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical power', 'details': 'Monitors per-port optical power; gen...</var>
<status status="PASS" start="2024-12-12T15:58:35.067911" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.067911" elapsed="0.001001"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_temperature', 'kpi_name': 'Layer 1 optical temperature', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical temperature', 'details': 'Monitors per-port ...</var>
<status status="PASS" start="2024-12-12T15:58:35.067911" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.068912" elapsed="0.000982"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_layer1_optics_voltage', 'kpi_name': 'Layer 1 optical voltage', 'category': 'Layer1-Optics', 'summary': 'Monitors per-port optical voltage', 'details': 'Monitors per-port optical volt...</var>
<status status="PASS" start="2024-12-12T15:58:35.068912" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.069894" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_error_counters', 'kpi_name': 'Ethernet port error counters', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive error counters', 'details': 'M...</var>
<status status="PASS" start="2024-12-12T15:58:35.069894" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.069894" elapsed="0.001022"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_packet_size_distribution', 'kpi_name': 'Ethernet port packet size distribution', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive packet siz...</var>
<status status="PASS" start="2024-12-12T15:58:35.069894" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.070916" elapsed="0.000996"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_ethernet_port_stats', 'kpi_name': 'Ethernet port packet statistics', 'category': 'Layer1-Traffic', 'summary': 'Monitors port transmit and receive packet statistics', 'details': 'Moni...</var>
<status status="PASS" start="2024-12-12T15:58:35.070916" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.071912" elapsed="0.000536"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_flap_detector', 'kpi_name': 'Interface flap detection', 'category': 'Layer2-Interface', 'summary': 'Monitors interface flaps', 'details': 'Monitors interface flaps and aler...</var>
<status status="PASS" start="2024-12-12T15:58:35.071912" elapsed="0.000536"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.072448" elapsed="0.001034"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_state_info', 'kpi_name': 'Line state', 'category': 'Layer2-Interface', 'summary': 'Monitors interface line states; generates an alert when link states change', 'details': '...</var>
<status status="PASS" start="2024-12-12T15:58:35.072448" elapsed="0.001034"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.073482" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_bandwidth_utilization', 'kpi_name': 'Interface bandwidth monitor', 'category': 'Layer2-Traffic', 'summary': 'Monitors bandwidth utilization across all interfaces on a route...</var>
<status status="PASS" start="2024-12-12T15:58:35.073482" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.074481" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_error_counters', 'kpi_name': 'Interface packet error counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error counters', 'details'...</var>
<status status="PASS" start="2024-12-12T15:58:35.074481" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.074481" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_error_counters_oc', 'kpi_name': 'Interface packet error counters(Openconfig)', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error count...</var>
<status status="PASS" start="2024-12-12T15:58:35.074481" elapsed="0.001505"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.075986" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_packet_counters', 'kpi_name': 'Interface packet counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive counters', 'details': 'Monitors...</var>
<status status="PASS" start="2024-12-12T15:58:35.075986" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.076989" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_rate_counters', 'kpi_name': 'Interface rate counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters', 'details': 'Monitors inter...</var>
<status status="PASS" start="2024-12-12T15:58:35.075986" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.076989" elapsed="0.001024"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_rate_counters_oc', 'kpi_name': 'Interface rate counters(Openconfig)', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters using opencon...</var>
<status status="PASS" start="2024-12-12T15:58:35.076989" elapsed="0.001024"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.078013" elapsed="0.000998"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_error_counters', 'kpi_name': 'SNMP interface packet error counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive error counters',...</var>
<status status="PASS" start="2024-12-12T15:58:35.078013" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.079011" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_packet_counters', 'kpi_name': 'SNMP interface packet counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface transmit and receive counters', 'details':...</var>
<status status="PASS" start="2024-12-12T15:58:35.079011" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.080010" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_snmp_interface_rate_counters', 'kpi_name': 'SNMP interface rate counters', 'category': 'Layer2-Traffic', 'summary': 'Monitors interface statistics as rate counters', 'details': 'Moni...</var>
<status status="PASS" start="2024-12-12T15:58:35.079011" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.080010" elapsed="0.000983"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_bgp', 'kpi_name': 'IPv6 RIB BGP route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by BGP', 'details': 'Monito...</var>
<status status="PASS" start="2024-12-12T15:58:35.080010" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.080993" elapsed="0.001025"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_isis', 'kpi_name': 'IPv6 RIB IS-IS route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by IS-IS', 'details': 'M...</var>
<status status="PASS" start="2024-12-12T15:58:35.080993" elapsed="0.001025"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.082018" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ipv6_rib_ospf', 'kpi_name': 'IPv6 RIB OSPF route count', 'category': 'Layer3-Routing', 'summary': 'Monitors IPv6 RIB for route count and memory used by OSPF', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-12T15:58:35.082018" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.082018" elapsed="0.000997"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_bgp', 'kpi_name': 'RIB BGP route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by BGP', 'details': 'Monitors RIB for rout...</var>
<status status="PASS" start="2024-12-12T15:58:35.082018" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.083015" elapsed="0.000999"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_connected', 'kpi_name': 'RIB CONNECTED route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by connected', 'details': 'Mon...</var>
<status status="PASS" start="2024-12-12T15:58:35.083015" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.084014" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_isis', 'kpi_name': 'RIB IS-IS route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by IS-IS', 'details': 'Monitors RIB for...</var>
<status status="PASS" start="2024-12-12T15:58:35.084014" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.084998" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_local', 'kpi_name': 'RIB local route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by local', 'details': 'Monitors RIB fo...</var>
<status status="PASS" start="2024-12-12T15:58:35.084998" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.084998" elapsed="0.001219"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_ospf', 'kpi_name': 'RIB OSPF route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by OSPF', 'details': 'Monitors RIB for r...</var>
<status status="PASS" start="2024-12-12T15:58:35.084998" elapsed="0.001219"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.086217" elapsed="0.000522"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_rib_static', 'kpi_name': 'RIB static route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIB for route count and memory used by static', 'details': 'Monitors RIB...</var>
<status status="PASS" start="2024-12-12T15:58:35.086217" elapsed="0.000522"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.086739" elapsed="0.001034"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_connected', 'kpi_name': 'RIBv6 connected route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by connected', 'details'...</var>
<status status="PASS" start="2024-12-12T15:58:35.086739" elapsed="0.001034"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.087773" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_local', 'kpi_name': 'RIBv6 local route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by local', 'details': 'Monitors ...</var>
<status status="PASS" start="2024-12-12T15:58:35.087773" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.088772" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_ribv6_static', 'kpi_name': 'RIBv6 static route count', 'category': 'Layer3-Routing', 'summary': 'Monitors RIBv6 for route count and memory used by static', 'details': 'Monito...</var>
<status status="PASS" start="2024-12-12T15:58:35.087773" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.088772" elapsed="0.001000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_intf_stat_protocol', 'kpi_name': 'Interface counters by protocol', 'category': 'Layer3-Traffic', 'summary': 'Monitors interface statistics by protocol', 'details': 'Monitors interfac...</var>
<status status="PASS" start="2024-12-12T15:58:35.088772" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.089772" elapsed="0.001000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_memory_utilization', 'kpi_name': 'Memory utilization', 'category': 'Memory', 'summary': 'Monitors memory usage across route processor and line cards on routers', 'details': 'Monitors...</var>
<status status="PASS" start="2024-12-12T15:58:35.089772" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.090772" elapsed="0.000000"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_memory_utilization_cxr', 'kpi_name': 'Memory utilization (cXR)', 'category': 'Memory', 'summary': 'Monitors memory usage across route processor and line cards on routers on classic X...</var>
<status status="PASS" start="2024-12-12T15:58:35.090772" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.090772" elapsed="0.000999"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_routing_isis_neighbor_summary', 'kpi_name': 'ISIS neighbor summary', 'category': 'Protocol-ISIS', 'summary': 'Monitors IS-IS neighbor summaries for changes in neighbor status', 'deta...</var>
<status status="PASS" start="2024-12-12T15:58:35.090772" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.091771" elapsed="0.001006"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_qos_egress', 'kpi_name': 'Interface QoS (egress)', 'category': 'QoS', 'summary': 'Monitors interface QoS on the egress direction for queue statistics, queue depth', 'detail...</var>
<status status="PASS" start="2024-12-12T15:58:35.091771" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Append To List" owner="Collections">
<arg>${CNC_KPI}</arg>
<arg>[${item['category']}] ${item['kpi_name']}:${item['sensor_type']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.092777" elapsed="0.001057"/>
</kw>
<var name="${item}">{'kpi_id': 'pulse_interface_qos_ingress', 'kpi_name': 'Interface QoS (ingress)', 'category': 'QoS', 'summary': 'Monitors interface QoS on the ingress direction for queue statistics, queue depth', 'det...</var>
<status status="PASS" start="2024-12-12T15:58:35.092777" elapsed="0.001057"/>
</iter>
<var>${item}</var>
<value>@{json_response['kpis']['kpi']}</value>
<status status="PASS" start="2024-12-12T15:58:35.058615" elapsed="0.035219"/>
</for>
<status status="PASS" start="2024-12-12T15:58:35.058615" elapsed="0.035219"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:35.058615" elapsed="0.035219"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.093834" level="INFO">Length is 46.</msg>
<msg time="2024-12-12T15:58:35.093834" level="INFO">${NUM_KPI} = 46</msg>
<var>${NUM_KPI}</var>
<arg>${CNC_KPI}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:35.093834" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.093834" level="INFO">${MSG} = # KPIs: 46</msg>
<arg>${MSG}</arg>
<arg>${MSG}# KPIs: ${NUM_KPI}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.093834" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.093834" level="INFO">${CNC_KPI} = ['[BASICS] Device uptime:SNMP', '[CPU] CPU threshold:GNMI,YANG_MDT', '[CPU] CPU utilization:GNMI,YANG_MDT', '[Dataplane-Counters] CEF drops:GNMI,YANG_MDT', '[Filesystem] Filesystem utilization:YANG_CL...</msg>
<arg>${CNC_KPI}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:35.093834" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.093834" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieve and reports on CAHI defined alerts (KPIs)</doc>
<status status="PASS" start="2024-12-12T15:58:34.630183" elapsed="0.463651"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:35.094856" level="INFO">Set test message to:
# KPIs: 46
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:35.093834" elapsed="0.001022"/>
</kw>
<doc>Find all the configured KPIs by category</doc>
<tag>DATA-COLLECTION</tag>
<tag>KPIS</tag>
<status status="PASS" start="2024-12-12T15:58:34.629182" elapsed="0.465674"># KPIs: 46
</status>
</test>
<test id="s1-t15" name="Retrieve CNC SLO Templates (NSST)" line="136">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:35.095874" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.095874" elapsed="0.000000"/>
</kw>
<kw name="get-cnc-slo" owner="CW_Keywords">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.095874" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.095874" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.096856" level="INFO">${myurl} = /crosswork/cnc/api/v1/getTemplatesByName</msg>
<var>${myurl}</var>
<arg>/crosswork/cnc/api/v1/getTemplatesByName</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.096856" level="INFO">@{XX} = [ ]</msg>
<var>@{XX}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.096856" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.096856" level="INFO">@{FIELDS} = [ policyType | L2-input-policy | L3-input-policy | L2-output-policy | L3-output-policy | forward-plane-policy ]</msg>
<var>@{FIELDS}</var>
<arg>policyType</arg>
<arg>L2-input-policy</arg>
<arg>L3-input-policy</arg>
<arg>L2-output-policy</arg>
<arg>L3-output-policy</arg>
<arg>forward-plane-policy</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.096856" level="INFO">${description} = Retrieve CNC SLO Templates (NSST)</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:35.253478" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/getTemplatesByName 
 path_url=/crosswork/cnc/api/v1/getTemplatesByName 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:35.253478" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/cnc/api/v1/getTemplatesByName 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[]} 
 </msg>
<msg time="2024-12-12T15:58:35.253478" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:35.253478" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:35.096856" elapsed="0.156622"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.254477" level="INFO">${json_response} = {'data': []}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.253478" elapsed="0.000999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.254477" level="INFO">${MSG} = --CNC Templates--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Templates--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.254477" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.254477" level="INFO">Length is 0.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:35.254477" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.254477" level="INFO">${RESP} = ('PASS', 0)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:35.254477" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Templates\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.254477" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:35.254477" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${key}</var>
<arg>${data['id']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<var>@{TEMP}</var>
<doc>Returns a list containing given items.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${TEMP}</arg>
<arg>${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</for>
<kw name="Log List" owner="Collections">
<arg>${TEMP}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${XX}</arg>
<arg>@{TEMP}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</kw>
<var name="${data}"/>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-12T15:58:35.255477" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:35.254477" elapsed="0.001000"/>
</if>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:35.256479" level="INFO">List is empty.</msg>
<arg>${XX}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.255477" elapsed="0.001002"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.256479" level="INFO">${XX} = []</msg>
<arg>${XX}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.256479" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.256479" level="INFO">${XX} = []</msg>
<arg>${XX}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:35.256479" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.256479" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Providers (first 100)</doc>
<status status="PASS" start="2024-12-12T15:58:35.095874" elapsed="0.160605"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:35.256479" level="INFO">Set test message to:
--CNC Templates--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:35.256479" elapsed="0.000000"/>
</kw>
<doc>Find all Slicing templates</doc>
<tag>DATA-COLLECTION</tag>
<tag>SLICING</tag>
<status status="PASS" start="2024-12-12T15:58:35.094856" elapsed="0.161623">--CNC Templates--

</status>
</test>
<test id="s1-t16" name="Retrieve CNC Versions" line="143">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:35.257477" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.257477" elapsed="0.000000"/>
</kw>
<kw name="get-application-versions" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.258478" level="INFO">${myurl} = /crosswork/platform/v2/capp/applicationsummary/query</msg>
<var>${myurl}</var>
<arg>/crosswork/platform/v2/capp/applicationsummary/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.258478" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.258478" level="INFO">@{CNC_APP_VERSIONS} = [ ]</msg>
<var>@{CNC_APP_VERSIONS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.259496" level="INFO">${description} = Retrieve CNC Versions</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.001018"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:35.465121" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/platform/v2/capp/applicationsummary/query 
 path_url=/crosswork/platform/v2/capp/applicationsummary/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:35.466131" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/platform/v2/capp/applicationsummary/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:35 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Grpc-Metadata-Content-Type': 'application/grpc', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"application_summary_list":[{"application_id":"capp-ca","application_data":{"application_id":"capp-ca","version":"7.0.0-rc.62+build.65","summary":{"name":"Change Automation","description":"Automates the process of deploying changes to networks"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-15 03:00:20.385663","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-ca","version":"7.0.0-rc.4","description":"","summary":{"name":"Change Automation","description":"Cisco Crosswork Change Automation application automates the process of deploying changes to the network"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-ca-ui-plugins","version":"7.0.0-rc.3","description":"","summary":{"name":"ui-plugin","description":"nca"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-astackserver","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-metricmanager","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"rs-du-dlm-ui-plugins","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-nso-fp-dep-mngr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CAHISW","software_id_tag":"regid.2019-11.com.cisco.CAHISW,1.0_1bb005c9-b4e7-41c4-bf49-65ff6643a44e","display_name":"Health Insights and Change Automation","entitlements":[{"entitlement_tag":"regid.2023-01.com.cisco.CNC_CAHI_RTU,1.0_92a3f791-2a2f-4413-994d-70640accdb7b","version":"1.0","name":"CNC_CAHI_RTU","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","is_lab_supported":false,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-ca","version":"7.0.0-rc.62+build.65","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-hi","application_data":{"application_id":"capp-hi","version":"7.0.0-rc.60+build.62","summary":{"name":"Health Insights","description":"Setup and monitor KPIs for your network devices"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-15 03:00:22.232663","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-hi","version":"7.0.0-rc.5","description":"","summary":{"name":"health insights","description":"health insights"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-grafana","version":"7.0.0-rc.2","description":"","summary":{"name":"grafana","description":"grafana"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"rs-du-hi-ui-plugins","version":"7.0.0-rc.4","description":"","summary":{"name":"ui-plugin","description":"pulse"},"identifier_Type":"RESOURCE","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"1.0.0","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"}],"dependency_constraints":[{"id":"capp-infra","identifier_type":"APPLICATION","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-astackserver","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-metricmanager","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-neo4j-toposvc","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-topovisualization","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-geoservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-groupingservice","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-cw-icon-server","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-clms","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dgmanager","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-dlminvmgr","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"rs-du-dlm-ui-plugins","identifier_type":"POD","version_range":"\u003e=7.0.0 \u003c8.0.0"},{"id":"pod-du-helios","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"},{"id":"pod-du-magellan","identifier_type":"POD","version_range":"\u003e=5.0.0 \u003c8.0.0"}],"license_data":{"product_id":"CAHISW","software_id_tag":"regid.2019-11.com.cisco.CAHISW,1.0_1bb005c9-b4e7-41c4-bf49-65ff6643a44e","display_name":"Health Insights and Change Automation","entitlements":[{"entitlement_tag":"regid.2019-11.com.cisco.NTWAUTO_RTM,1.0_9659e789-15e7-4db3-8665-7f06e5f08857","version":"1.0","name":"NTWAUTO_RTM","is_reset_after_first_registration":false,"is_lab":false},{"entitlement_tag":"regid.2023-01.com.cisco.CNC_CAHI_RTU,1.0_92a3f791-2a2f-4413-994d-70640accdb7b","version":"1.0","name":"CNC_CAHI_RTU","is_reset_after_first_registration":false,"is_lab":false}],"capp_licensing_type":"UNKNOWN_TYPE","parent_software_id":"regid.2022-11.com.cisco.CNC,1.0_6a3c6976-76d7-4604-8be5-ef8d0221612a","is_lab_supported":false,"auto_onboard":true},"meta_schema_version":"1.0.0"},"application_state":{"application_id":"capp-hi","version":"7.0.0-rc.60+build.62","install_id":"","status":"ACTIVE","progress":100,"possible_actions":["CONFIGURE","DEACTIVATE","UNINSTALL","VIEW_APPLICATION_DETAILS"],"available_updates":[],"pending_action":{"action":"UNKNOWN_ACTION","job_id":""},"last_operation_error":{"message":""}}},{"application_id":"capp-common-ems-services","application_data":{"application_id":"capp-common-ems-services","version":"7.0.0-rc.760+build.767","summary":{"name":"Element Management Functions","description":"Functions included detailed device inventory, software image management, device alarm, device key metrics, configuration related functions and ZTP"},"identifier_type":"APPLICATION","category":"EXTERNAL_APP","build_information":{"date_time":"2024-08-20 15:27:41.371887","publisher":"Cisco"},"contents":[{"unit_id":"pod-du-emf-service-manager","version":"7.0.0-rc.1","description":"","summary":{"name":"emf-service-manager","description":"Element management function service manager"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-event-based-inventory","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-event-based-inventory","description":"event based inventory"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-inventory","version":"7.0.0-rc.1","description":"","summary":{"name":"inventory","description":"CS Inventory automates the process of inventory collection"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-inventory-collector","version":"7.0.0-rc.1","description":"","summary":{"name":"inventory-collector","description":"CS Inventory automates the process of inventory collection"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"UNKNOWN_DEPLOYMENT_RUNTIME_TYPE"},{"unit_id":"pod-du-cw-nbi-alarm-notification","version":"7.0.0-rc.1","description":"","summary":{"name":"cw-nbi-alarm-notification","description":"NBI Alarm Notification"},"identifier_Type":"POD","category":"EXTERNAL_APP","dependency_constraints":[],"build_information":null,"meta_schema_version":"","skip_auto_install":false,"runtime_type":"U... (set the log level to DEBUG or TRACE to see the full content) 
 </msg>
<msg time="2024-12-12T15:58:35.466131" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:35.466131" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:35.259496" elapsed="0.206635"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.467171" level="INFO">${json_response} = {'application_summary_list': [{'application_id': 'capp-ca', 'application_data': {'application_id': 'capp-ca', 'version': '7.0.0-rc.62+build.65', 'summary': {'name': 'Change Automation', 'description':...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.466131" elapsed="0.001040"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.467171" level="INFO">${MSG} = --CNC Application Versions--</msg>
<arg>${MSG}</arg>
<arg>--CNC Application Versions--</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.467171" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.467171" level="INFO">Length is 43.</msg>
<arg>{json_response['application_summary_list']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:35.467171" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.467171" level="INFO">${RESP} = ('PASS', 43)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>{json_response['application_summary_list']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:35.467171" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Application Versions\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.468171" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.468171" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:35.467171" elapsed="0.001000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.468171" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.468171" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.468171" elapsed="0.000962"/>
</kw>
<var name="${item}">{'application_id': 'capp-ca', 'application_data': {'application_id': 'capp-ca', 'version': '7.0.0-rc.62+build.65', 'summary': {'name': 'Change Automation', 'description': 'Automates the process of dep...</var>
<status status="PASS" start="2024-12-12T15:58:35.468171" elapsed="0.000962"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.469133" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.469133" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.469133" elapsed="0.001047"/>
</kw>
<var name="${item}">{'application_id': 'capp-hi', 'application_data': {'application_id': 'capp-hi', 'version': '7.0.0-rc.60+build.62', 'summary': {'name': 'Health Insights', 'description': 'Setup and monitor KPIs for you...</var>
<status status="PASS" start="2024-12-12T15:58:35.469133" elapsed="0.001047"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.470180" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.470180" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.470180" elapsed="0.000950"/>
</kw>
<var name="${item}">{'application_id': 'capp-common-ems-services', 'application_data': {'application_id': 'capp-common-ems-services', 'version': '7.0.0-rc.760+build.767', 'summary': {'name': 'Element Management Functions...</var>
<status status="PASS" start="2024-12-12T15:58:35.470180" elapsed="0.000950"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.471130" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.471130" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.472130" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-aa', 'application_data': {'application_id': 'capp-aa', 'version': '7.0.0-rc.71+build.77', 'summary': {'name': 'Service Health', 'description': 'Enables network operators to id...</var>
<status status="PASS" start="2024-12-12T15:58:35.471130" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.472130" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.472130" elapsed="0.001025"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.473155" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-cat', 'application_data': {'application_id': 'capp-cat', 'version': '7.0.0-rc.65+build.68', 'summary': {'name': 'Active Topology', 'description': 'Turnkey solution to end-to-e...</var>
<status status="PASS" start="2024-12-12T15:58:35.472130" elapsed="0.001025"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.474175" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.473155" elapsed="0.001020"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.474175" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-coe', 'application_data': {'application_id': 'capp-coe', 'version': '7.0.0-rc.73+build.78', 'summary': {'name': 'Optimization Engine', 'description': 'Provides real-time netwo...</var>
<status status="PASS" start="2024-12-12T15:58:35.473155" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.475267" level="INFO">${MSG} = --CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-c...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.474175" elapsed="0.001092"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item['application_data']['application_id']}:${item['application_data']['version']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.475267" elapsed="0.000000"/>
</kw>
<var name="${item}">{'application_id': 'capp-infra', 'application_data': {'application_id': 'capp-infra', 'version': '7.0.0-rc.73+build.85', 'summary': {'name': 'Platform Infrastructure', 'description': 'Plan, design, im...</var>
<status status="PASS" start="2024-12-12T15:58:35.474175" elapsed="0.001092"/>
</iter>
<var>${item}</var>
<value>@{json_response['application_summary_list']}</value>
<status status="PASS" start="2024-12-12T15:58:35.468171" elapsed="0.007096"/>
</for>
<status status="PASS" start="2024-12-12T15:58:35.468171" elapsed="0.007096"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:35.467171" elapsed="0.008096"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.475267" level="INFO">${CNC_APP_VERSIONS} = ['capp-ca:7.0.0-rc.62+build.65', 'capp-hi:7.0.0-rc.60+build.62', 'capp-common-ems-services:7.0.0-rc.760+build.767', 'capp-aa:7.0.0-rc.71+build.77', 'capp-cat:7.0.0-rc.65+build.68', 'capp-coe:7.0.0-rc....</msg>
<arg>${CNC_APP_VERSIONS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:35.475267" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.475267" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves the CNC application versions and stores result in suit variabe ``CNC_APP_VERSIONS``</doc>
<status status="PASS" start="2024-12-12T15:58:35.258478" elapsed="0.216789"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:35.476266" level="INFO">Set test message to:
--CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-infra:7.0.0-rc.73+build.85
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:35.476266" elapsed="0.000000"/>
</kw>
<doc>Find all the Crosswork modules and versions</doc>
<tag>APPLICATIONS</tag>
<tag>DATA-COLLECTION</tag>
<status status="PASS" start="2024-12-12T15:58:35.257477" elapsed="0.218789">--CNC Application Versions--
capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-infra:7.0.0-rc.73+build.85
</status>
</test>
<test id="s1-t17" name="Retrieve CNC Data Gateway" line="150">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:35.477330" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.476266" elapsed="0.002063"/>
</kw>
<kw name="get-cnc-cdg" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.478329" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.478329" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.478329" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.478329" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.478329" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.478329" elapsed="0.001042"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">${description} = Retrieve CNC Data Gateway</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{CNC_DATAGW} = [ ]</msg>
<var>@{CNC_DATAGW}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{CNC_DATAGW_OPER} = [ ]</msg>
<var>@{CNC_DATAGW_OPER}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{FIELDS_DATA} = [ name ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>name</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{FIELDS_CONFIGDATA} = [ version | adminState | profileType ]</msg>
<var>@{FIELDS_CONFIGDATA}</var>
<arg>version</arg>
<arg>adminState</arg>
<arg>profileType</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{FIELDS_CONFIGDATA_INTERFACES} = [ name | inetAddr | mask ]</msg>
<var>@{FIELDS_CONFIGDATA_INTERFACES}</var>
<arg>name</arg>
<arg>inetAddr</arg>
<arg>mask</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.479371" level="INFO">@{FIELDS_CONFIGDATA_PROFILE} = [ cpu | memory | nics ]</msg>
<var>@{FIELDS_CONFIGDATA_PROFILE}</var>
<arg>cpu</arg>
<arg>memory</arg>
<arg>nics</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.479371" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.480354" level="INFO">@{FIELDS_OPERDATA} = [ operState ]</msg>
<var>@{FIELDS_OPERDATA}</var>
<arg>operState</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.480354" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.480354" level="INFO">${myurl} = /crosswork/dg-manager/v1/dg/query</msg>
<var>${myurl}</var>
<arg>/crosswork/dg-manager/v1/dg/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.480354" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.480354" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.480354" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.480354" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.480354" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:35.664638" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/dg-manager/v1/dg/query 
 path_url=/crosswork/dg-manager/v1/dg/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-12T15:58:35.664638" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/dg-manager/v1/dg/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:35 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'Timestamp': '2024-12-12T05:58:35Z', 'X-Cxw-Rpc-Status': '0', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"data":[{"duuid":"19c6045f-f05f-44d4-bb73-610cc212bdaf","name":"cdg1.demo.dcloud.cisco.com","configData":{"description":"Cisco","version":"7.0.0 (branch release700 - build number 19)","interfaces":[{"name":"eth0","mac":"00:50:56:b7:ae:2b","ipAddr":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"198.18.134.230","mask":"18"}],"roles":"ADMINISTRATION,DEFAULT_GATEWAY,EXTERNAL_LOGGING,MANAGEMENT"},{"name":"eth1","mac":"00:50:56:b7:49:e4","ipAddr":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"198.18.2.230","mask":"24"}],"roles":"CONTROL,NB_EXTERNAL_DATA,NB_SYSTEM_DATA"},{"name":"eth2","mac":"00:50:56:b7:ba:6f","roles":"SB_DATA"}],"certChain":{"certificate":"MIIJczCCBVugAwIBAgIUV2lenTtfVfwW17yn0dg6UYhioYQwDQYJKoZIhvcNAQENBQAwMjELMAkGA1UECgwCREcxIzAhBgNVBAMMGmNkZzEuZGVtby5kY2xvdWQuY2lzY28uY29tMB4XDTI0MTIxMTAwMDg1N1oXDTQ0MTIxMjAwMDg1N1owMjELMAkGA1UECgwCREcxIzAhBgNVBAMMGmNkZzEuZGVtby5kY2xvdWQuY2lzY28uY29tMIIEIjANBgkqhkiG9w0BAQEFAAOCBA8AMIIECgKCBAEA5dhwxFMSrPe0DqOJEKxG/fOWyj0f0kyy96CFlbEUklGXoo1ymkYXyG4WdM144yXoacRt4ira8disz3In8AsxHvWvPO/VPAFfbo48pxv54uEUyS81Bj5ZYQnI37ZE7KYUIa/nIqvZfIB3j5ZNjDcNa4VMxwXi0yhePqvq+1O8KomD3y6LkGrZ9i0RS5g4vLPm0oWELP0oQw8jiKDeClyJnqo6DclRouwj05xpQLBShD5ncHBhmZ4p75Y7UTXfhQReVED1GcS0j/66HC/zi/lKBR+EaBcihtsx/ljrEBopP/bS4KMFAuELvvAb3mnj+urvg2Sz/nhxmAx4GpeuyirXLpqFsG3oVKugrP9KESCTd5oihS2P3ZNLky+xAhg/87qsP9+U1FQhe0FclMuBh24oDyNuev/kkS47rKl4gqO5SIluvGejlV12EuRERYsrwxySVloU+ukdj6NLejeSSvC5vyMpzI0ordJBg5yf7Drw8av1a27pzAi4D1dTP0EYtodzGJVNxutC2IBDmETleDLCxt3yyRTLlN/AttT2NSTYsZQGozfW7SIRnKqfjPQGaPapx2E4ZZCDAAHilt5mvIqDvgX4qpXZt/ld9uDH7J4CSIwqrMnjhwDzYjGP7RAAbY30e2htOZsnvqahJWt1tl8umtDR1zKLXGnv/O65Xi9oRemCXGion2Ppw7rDDOkNcgl45qtKuOfj4I80k2J3pQ9eD3osm8amCHc8wAOehp5uMMBcrQYjkZLoK+jws2ohuWJTKJW33Bqgw2DSQyngWFxX0DT3+0O2mzk77CPbRs9pKJolcqOy5zm1JqqwyJO8vhaDMm2qGovVatjTmLaYfUw9hM2ussftnopyX460mR3IM0aNj1FT8wwcdV9DYBZVtLf32l0K/yeGcWgNjtCZwqO8Bh/X+Tj1pIKb9axu0D1gzg5GuPV3+bQ+R8T5132DXAvxn3LBEHNC9vC/ZzIQrbDqTy4oh6sSAbF+raqsGejyYZX95INUs+NuHxgORLe5Yqq/vjxkA6tH20ut9q4E7opsfmisYDD5JPNLUSMsjry0eFCu+mUPUt1YQqinEi9s+Pw5zF/maOwTIiFAPOpQ9V6aBsUOo38+qnzR2eeEseTOseB4nepVwgfTaZTtYgjK36xuR9xgvmCva56mRgAwyYarc6iIrns8mz0AuQ0qlLWfTtPO0fxAwrYUXLjYBFM+taYJXMNwGjo7c8AyhLdL4LJCnqvKou4o2znsRPyrDQEN5wa/OZjGe+MhFUdeEgp8XVfeB9uUkkj8pySXm6Y3J3lek4QlZHeI+EIC3Sy1eZ0XBUkPjcmf92fv4WfOFifiCM0PRCEp3i6fVqvpvTZYxmeVcwIDAQABo4GAMH4wHQYDVR0OBBYEFKt3sJCv5VSoOI4slZMHGrz8hS36MB8GA1UdIwQYMBaAFKt3sJCv5VSoOI4slZMHGrz8hS36MA8GA1UdEwEB/wQFMAMBAf8wKwYDVR0RBCQwIoIaY2RnMS5kZW1vLmRjbG91ZC5jaXNjby5jb22CBGNkZzEwDQYJKoZIhvcNAQENBQADggQBANwxARa+QJSgs6P/vbmpbSxVCH8kBUscib83WIwMTOnmFNJM65B4qkEN/klNv2q1beVe70OXBR6wy8ZxCQs1TWCWbI+lrsW9LrW9Q72EAGk6CbTYrtYiiJrcox2GmBNtCHt8RfRl2MMKrVrrhbT4EBAVIgjXH3/nxq2T2c0GLnFx02YGSTrid/17bMXUl2tYfk5lLJGjAFhek0Bkd4AjwXZrOU1QFoeeB6yyZQInIkjTwtFDnIhPbRxnIqORLNVRnep+DCFFqHKOE8LSvS40bma7kijSaIag17aKH5o4O963pYnj4rDDgtAR4wC5FJJeRZ5VEy1EBI3WZZ86uc7XwW+t8DE176oLWAaRjLvoMoJW01PzDzYKpz3azHzu+5ZCEpGMTGWnSojenF+Nd8hx93GUntDhnuTuWLPYyn9tAMOJCwlw8M5/2hUBU0gaYnPYxYzPB16R0C3i3KWaLOaIIt7IunB0uAiKLhj7QsCAXJWo0kdwvhgthSgOftVyIkENjcpFgN69KUcAIU9C6RlXUQypKia7vdsuMJJtKysYemgPI1RwOP1G5hXNx7CFHQLn3XE112uOMB4bjfAsP95DwoRViYcvpzIyVL+qfz5vMDphyEOdqOzBEv/ZVJyI/S6VnxD18FoXrTnKz5OuwusQ5n16i8kzeW+j82UZuPl/CVBV3aRpeUcftCOCWrkBFtuEvvx/gWMhtKpQ03NvYA2GWPcJ0gsJUdw4oEe29WR4Ra24O2ALTc4pBBr2HFg/YrdV+kGVJgcHOM22+EKSJDuIEc23u0GBaxltcNTJIwcwQxd22GcSlHmvglCkQgHuagCH25ZiWMrpopEW82zSBT9EEejNLp5ZwBl8y19+wno9LMVpELMcHIIonsKZtpnVT0B2NibOVd4XDPkW93d8mDUrqnRcbsCeNsUlVeyzaVdlt1Wp4x65Zw+WebLDxPKMOIHVaDmE8VS0wbWeu8lKGgXOlbNHbfcjN9tMuwoT0XmLm218/6BhKitsnIwAW5uu8YO/70qd/xQ6tvcNYs29BpzSbDwHJO4XeDHc6+zSsdq/r4zjD0MrAwFDaJKWLnmIqCUjgYyUd+N57HE40pBNb+XbgRJ+jbAaq3x7bEGa+e+rn+ktArr4zPgBM8qmdUjJvW+BYTwf4tq9lIuwNyl3/Qnk69Pl5Yy1Apl7IdRaSD5CSf/mu6ipH9re0lXewum42dMZ80oCt47BQjbzekzHUbsSpOalpA8IofPq1T/ZUPXhYlScG+uuZ8jqBsq+O0AmKkikcOzT0ltPAMZ9d1/vw1FlqYAekY5JhFgtZICJdTBPN7iHuSASXKZhNBV13bcm/t2LkpVnvLA6L7u8Py6q3ZTN88U="},"profile":{"cpu":20,"memory":110,"nics":3,"baseVm":"BASE_VM_TRUE"},"role":"ASSIGNED","adminState":"AS_UP","poolId":"cdc89956-cbb7-4c20-b201-49fa97671d5d","vdgUuid":"c2871f3c-7750-4a44-98d0-de569431ce59","profileType":"VM_PROFILE_EXTENDED"},"operationalData":{"operState":"OS_UP","operStateDetails":[{"componentName":"snmp-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"cli-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"mdt-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"gnmi-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"syslog-collector","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"astack-service","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"icon","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"common-pipeline","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"aa-exp-tracker","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"robot-astack-influxdb","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"image-manager","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"oam-manager","state":"CS_UP","imageTag":"7.0.0"},{"componentName":"controller-gateway","state":"CS_UP","imageTag":"7.0.0"}],"createdTime":"1733962220","lastUpdatedTime":"1733962763"},"globalParamSyncStatus":true}],"totalCount":1} 
 </msg>
<msg time="2024-12-12T15:58:35.664638" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:35.665639" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:35.480354" elapsed="0.185285"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.665639" level="INFO">${json_response} = {'data': [{'duuid': '19c6045f-f05f-44d4-bb73-610cc212bdaf', 'name': 'cdg1.demo.dcloud.cisco.com', 'configData': {'description': 'Cisco', 'version': '7.0.0 (branch release700 - build number 19)', 'inte...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.665639" elapsed="0.000000"/>
</kw>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.666640" level="INFO">[{'duuid': '19c6045f-f05f-44d4-bb73-610cc212bdaf', 'name': 'cdg1.demo.dcloud.cisco.com', 'configData': {'description': 'Cisco', 'version': '7.0.0 (branch release700 - build number 19)', 'interfaces': [{'name': 'eth0', 'mac': '00:50:56:b7:ae:2b', 'ipAddr': [{'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '198.18.134.230', 'mask': '18'}], 'roles': 'ADMINISTRATION,DEFAULT_GATEWAY,EXTERNAL_LOGGING,MANAGEMENT'}, {'name': 'eth1', 'mac': '00:50:56:b7:49:e4', 'ipAddr': [{'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr': '198.18.2.230', 'mask': '24'}], 'roles': 'CONTROL,NB_EXTERNAL_DATA,NB_SYSTEM_DATA'}, {'name': 'eth2', 'mac': '00:50:56:b7:ba:6f', 'roles': 'SB_DATA'}], 'certChain': {'certificate': 'MIIJczCCBVugAwIBAgIUV2lenTtfVfwW17yn0dg6UYhioYQwDQYJKoZIhvcNAQENBQAwMjELMAkGA1UECgwCREcxIzAhBgNVBAMMGmNkZzEuZGVtby5kY2xvdWQuY2lzY28uY29tMB4XDTI0MTIxMTAwMDg1N1oXDTQ0MTIxMjAwMDg1N1owMjELMAkGA1UECgwCREcxIzAhBgNVBAMMGmNkZzEuZGVtby5kY2xvdWQuY2lzY28uY29tMIIEIjANBgkqhkiG9w0BAQEFAAOCBA8AMIIECgKCBAEA5dhwxFMSrPe0DqOJEKxG/fOWyj0f0kyy96CFlbEUklGXoo1ymkYXyG4WdM144yXoacRt4ira8disz3In8AsxHvWvPO/VPAFfbo48pxv54uEUyS81Bj5ZYQnI37ZE7KYUIa/nIqvZfIB3j5ZNjDcNa4VMxwXi0yhePqvq+1O8KomD3y6LkGrZ9i0RS5g4vLPm0oWELP0oQw8jiKDeClyJnqo6DclRouwj05xpQLBShD5ncHBhmZ4p75Y7UTXfhQReVED1GcS0j/66HC/zi/lKBR+EaBcihtsx/ljrEBopP/bS4KMFAuELvvAb3mnj+urvg2Sz/nhxmAx4GpeuyirXLpqFsG3oVKugrP9KESCTd5oihS2P3ZNLky+xAhg/87qsP9+U1FQhe0FclMuBh24oDyNuev/kkS47rKl4gqO5SIluvGejlV12EuRERYsrwxySVloU+ukdj6NLejeSSvC5vyMpzI0ordJBg5yf7Drw8av1a27pzAi4D1dTP0EYtodzGJVNxutC2IBDmETleDLCxt3yyRTLlN/AttT2NSTYsZQGozfW7SIRnKqfjPQGaPapx2E4ZZCDAAHilt5mvIqDvgX4qpXZt/ld9uDH7J4CSIwqrMnjhwDzYjGP7RAAbY30e2htOZsnvqahJWt1tl8umtDR1zKLXGnv/O65Xi9oRemCXGion2Ppw7rDDOkNcgl45qtKuOfj4I80k2J3pQ9eD3osm8amCHc8wAOehp5uMMBcrQYjkZLoK+jws2ohuWJTKJW33Bqgw2DSQyngWFxX0DT3+0O2mzk77CPbRs9pKJolcqOy5zm1JqqwyJO8vhaDMm2qGovVatjTmLaYfUw9hM2ussftnopyX460mR3IM0aNj1FT8wwcdV9DYBZVtLf32l0K/yeGcWgNjtCZwqO8Bh/X+Tj1pIKb9axu0D1gzg5GuPV3+bQ+R8T5132DXAvxn3LBEHNC9vC/ZzIQrbDqTy4oh6sSAbF+raqsGejyYZX95INUs+NuHxgORLe5Yqq/vjxkA6tH20ut9q4E7opsfmisYDD5JPNLUSMsjry0eFCu+mUPUt1YQqinEi9s+Pw5zF/maOwTIiFAPOpQ9V6aBsUOo38+qnzR2eeEseTOseB4nepVwgfTaZTtYgjK36xuR9xgvmCva56mRgAwyYarc6iIrns8mz0AuQ0qlLWfTtPO0fxAwrYUXLjYBFM+taYJXMNwGjo7c8AyhLdL4LJCnqvKou4o2znsRPyrDQEN5wa/OZjGe+MhFUdeEgp8XVfeB9uUkkj8pySXm6Y3J3lek4QlZHeI+EIC3Sy1eZ0XBUkPjcmf92fv4WfOFifiCM0PRCEp3i6fVqvpvTZYxmeVcwIDAQABo4GAMH4wHQYDVR0OBBYEFKt3sJCv5VSoOI4slZMHGrz8hS36MB8GA1UdIwQYMBaAFKt3sJCv5VSoOI4slZMHGrz8hS36MA8GA1UdEwEB/wQFMAMBAf8wKwYDVR0RBCQwIoIaY2RnMS5kZW1vLmRjbG91ZC5jaXNjby5jb22CBGNkZzEwDQYJKoZIhvcNAQENBQADggQBANwxARa+QJSgs6P/vbmpbSxVCH8kBUscib83WIwMTOnmFNJM65B4qkEN/klNv2q1beVe70OXBR6wy8ZxCQs1TWCWbI+lrsW9LrW9Q72EAGk6CbTYrtYiiJrcox2GmBNtCHt8RfRl2MMKrVrrhbT4EBAVIgjXH3/nxq2T2c0GLnFx02YGSTrid/17bMXUl2tYfk5lLJGjAFhek0Bkd4AjwXZrOU1QFoeeB6yyZQInIkjTwtFDnIhPbRxnIqORLNVRnep+DCFFqHKOE8LSvS40bma7kijSaIag17aKH5o4O963pYnj4rDDgtAR4wC5FJJeRZ5VEy1EBI3WZZ86uc7XwW+t8DE176oLWAaRjLvoMoJW01PzDzYKpz3azHzu+5ZCEpGMTGWnSojenF+Nd8hx93GUntDhnuTuWLPYyn9tAMOJCwlw8M5/2hUBU0gaYnPYxYzPB16R0C3i3KWaLOaIIt7IunB0uAiKLhj7QsCAXJWo0kdwvhgthSgOftVyIkENjcpFgN69KUcAIU9C6RlXUQypKia7vdsuMJJtKysYemgPI1RwOP1G5hXNx7CFHQLn3XE112uOMB4bjfAsP95DwoRViYcvpzIyVL+qfz5vMDphyEOdqOzBEv/ZVJyI/S6VnxD18FoXrTnKz5OuwusQ5n16i8kzeW+j82UZuPl/CVBV3aRpeUcftCOCWrkBFtuEvvx/gWMhtKpQ03NvYA2GWPcJ0gsJUdw4oEe29WR4Ra24O2ALTc4pBBr2HFg/YrdV+kGVJgcHOM22+EKSJDuIEc23u0GBaxltcNTJIwcwQxd22GcSlHmvglCkQgHuagCH25ZiWMrpopEW82zSBT9EEejNLp5ZwBl8y19+wno9LMVpELMcHIIonsKZtpnVT0B2NibOVd4XDPkW93d8mDUrqnRcbsCeNsUlVeyzaVdlt1Wp4x65Zw+WebLDxPKMOIHVaDmE8VS0wbWeu8lKGgXOlbNHbfcjN9tMuwoT0XmLm218/6BhKitsnIwAW5uu8YO/70qd/xQ6tvcNYs29BpzSbDwHJO4XeDHc6+zSsdq/r4zjD0MrAwFDaJKWLnmIqCUjgYyUd+N57HE40pBNb+XbgRJ+jbAaq3x7bEGa+e+rn+ktArr4zPgBM8qmdUjJvW+BYTwf4tq9lIuwNyl3/Qnk69Pl5Yy1Apl7IdRaSD5CSf/mu6ipH9re0lXewum42dMZ80oCt47BQjbzekzHUbsSpOalpA8IofPq1T/ZUPXhYlScG+uuZ8jqBsq+O0AmKkikcOzT0ltPAMZ9d1/vw1FlqYAekY5JhFgtZICJdTBPN7iHuSASXKZhNBV13bcm/t2LkpVnvLA6L7u8Py6q3ZTN88U='}, 'profile': {'cpu': 20, 'memory': 110, 'nics': 3, 'baseVm': 'BASE_VM_TRUE'}, 'role': 'ASSIGNED', 'adminState': 'AS_UP', 'poolId': 'cdc89956-cbb7-4c20-b201-49fa97671d5d', 'vdgUuid': 'c2871f3c-7750-4a44-98d0-de569431ce59', 'profileType': 'VM_PROFILE_EXTENDED'}, 'operationalData': {'operState': 'OS_UP', 'operStateDetails': [{'componentName': 'snmp-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'cli-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'mdt-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'gnmi-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'syslog-collector', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'astack-service', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'icon', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'common-pipeline', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'aa-exp-tracker', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'robot-astack-influxdb', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'image-manager', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'oam-manager', 'state': 'CS_UP', 'imageTag': '7.0.0'}, {'componentName': 'controller-gateway', 'state': 'CS_UP', 'imageTag': '7.0.0'}], 'createdTime': '1733962220', 'lastUpdatedTime': '1733962763'}, 'globalParamSyncStatus': True}]</msg>
<arg>${json_response['data']}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:35.665639" elapsed="0.001001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.666640" level="INFO">${MSG} = --Data Gateways--
</msg>
<arg>${MSG}</arg>
<arg>--Data Gateways--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.666640" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.666640" level="INFO">Length is 1.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:35.666640" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.666640" level="INFO">${RESP} = ('PASS', 1)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:35.666640" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Data Gateways\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.667639" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:35.667639" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:35.666640" elapsed="0.000999"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.677694" level="INFO">${cdg} = ['cdg1.demo.dcloud.cisco.com']</msg>
<var>${cdg}</var>
<arg>${data}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.667639" elapsed="0.010055"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.677694" level="INFO">${search} = $.version</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.677694" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.685768" level="INFO">${values} = ['7.0.0 (branch release700 - build number 19)']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.677694" elapsed="0.008074"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.686790" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.685768" elapsed="0.001022"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.686790" elapsed="0.000000"/>
</kw>
<var name="${item}">version</var>
<status status="PASS" start="2024-12-12T15:58:35.677694" elapsed="0.009096"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.687786" level="INFO">${search} = $.adminState</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.687786" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.695909" level="INFO">${values} = ['AS_UP']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.687786" elapsed="0.008123"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.696933" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.696933" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.696933" elapsed="0.000994"/>
</kw>
<var name="${item}">adminState</var>
<status status="PASS" start="2024-12-12T15:58:35.686790" elapsed="0.011137"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.697927" level="INFO">${search} = $.profileType</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.697927" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.705927" level="INFO">${values} = ['VM_PROFILE_EXTENDED']</msg>
<var>${values}</var>
<arg>${data['configData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.697927" elapsed="0.008000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.706910" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.705927" elapsed="0.000983"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.706910" elapsed="0.000000"/>
</kw>
<var name="${item}">profileType</var>
<status status="PASS" start="2024-12-12T15:58:35.697927" elapsed="0.008983"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA}</value>
<status status="PASS" start="2024-12-12T15:58:35.677694" elapsed="0.029216"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.706910" level="INFO">${search} = $.cpu</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.706910" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.716472" level="INFO">${values} = [20]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.707926" elapsed="0.008546"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.716472" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.716472" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.716472" elapsed="0.001022"/>
</kw>
<var name="${item}">cpu</var>
<status status="PASS" start="2024-12-12T15:58:35.706910" elapsed="0.010584"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.717494" level="INFO">${search} = $.memory</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.717494" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.726014" level="INFO">${values} = [110]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.717494" elapsed="0.008520"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.726014" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.726014" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.726014" elapsed="0.001014"/>
</kw>
<var name="${item}">memory</var>
<status status="PASS" start="2024-12-12T15:58:35.717494" elapsed="0.009534"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.727028" level="INFO">${search} = $.nics</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.727028" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.736031" level="INFO">${values} = [3]</msg>
<var>${values}</var>
<arg>${data['configData']['profile']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.727028" elapsed="0.009003"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.736031" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values[0]}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.736031" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.737031" elapsed="0.000000"/>
</kw>
<var name="${item}">nics</var>
<status status="PASS" start="2024-12-12T15:58:35.727028" elapsed="0.010003"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA_PROFILE}</value>
<status status="PASS" start="2024-12-12T15:58:35.706910" elapsed="0.030121"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.737031" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.737031" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.746122" level="INFO">${values} = ['eth0', 'eth1', 'eth2']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.737031" elapsed="0.009091"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.746122" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.746122" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.746122" elapsed="0.000000"/>
</kw>
<var name="${item}">name</var>
<status status="PASS" start="2024-12-12T15:58:35.737031" elapsed="0.009091"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.747122" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.746122" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.756123" level="INFO">${values} = ['198.18.134.230', '198.18.2.230']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.747122" elapsed="0.009001"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.756123" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.756123" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.756123" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-12T15:58:35.746122" elapsed="0.010001"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.756123" level="INFO">${search} = $..mask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.756123" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.765652" level="INFO">${values} = ['18', '24']</msg>
<var>${values}</var>
<arg>${data['configData']['interfaces']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.757122" elapsed="0.008530"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.765652" level="INFO">${MSG} = --Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFI...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.765652" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.766650" elapsed="0.000000"/>
</kw>
<var name="${item}">mask</var>
<status status="PASS" start="2024-12-12T15:58:35.756123" elapsed="0.010527"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_CONFIGDATA_INTERFACES}</value>
<status status="PASS" start="2024-12-12T15:58:35.737031" elapsed="0.029619"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.766650" level="INFO">${search} = $.operState</msg>
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.766650" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:35.776208" level="INFO">${values} = ['OS_UP']</msg>
<var>${values}</var>
<arg>${data['operationalData']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:35.766650" elapsed="0.009558"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${cdg}:${item}:${values[0]}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.776208" elapsed="0.001096"/>
</kw>
<var name="${item}">operState</var>
<status status="PASS" start="2024-12-12T15:58:35.766650" elapsed="0.010654"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_OPERDATA}</value>
<status status="PASS" start="2024-12-12T15:58:35.766650" elapsed="0.010654"/>
</for>
<var name="${data}">{'duuid': '19c6045f-f05f-44d4-bb73-610cc212bdaf', 'name': 'cdg1.demo.dcloud.cisco.com', 'configData': {'description': 'Cisco', 'version': '7.0.0 (branch release700 - build number 19)', 'interfaces': [...</var>
<status status="PASS" start="2024-12-12T15:58:35.667639" elapsed="0.109665"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-12T15:58:35.667639" elapsed="0.109665"/>
</for>
<status status="PASS" start="2024-12-12T15:58:35.667639" elapsed="0.109665"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:35.666640" elapsed="0.110664"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.777304" level="INFO">${CNC_DATAGW} = ["['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)", "['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP", "['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDE...</msg>
<arg>${CNC_DATAGW}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:35.777304" elapsed="0.000000"/>
</kw>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.777304" level="INFO">${CNC_DATAGW_OPER} = ["['cdg1.demo.dcloud.cisco.com']:operState:OS_UP"]</msg>
<arg>${CNC_DATAGW_OPER}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:35.777304" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:35.777304" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Data gateway key configuration from /crosswork/dg-manager/v1/dg/query</doc>
<status status="PASS" start="2024-12-12T15:58:35.478329" elapsed="0.298975"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:35.777304" level="INFO">Set test message to:
--Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED
['cdg1.demo.dcloud.cisco.com']:cpu:20
['cdg1.demo.dcloud.cisco.com']:memory:110
['cdg1.demo.dcloud.cisco.com']:nics:3
['cdg1.demo.dcloud.cisco.com']:name:['eth0', 'eth1', 'eth2']
['cdg1.demo.dcloud.cisco.com']:inetAddr:['198.18.134.230', '198.18.2.230']
['cdg1.demo.dcloud.cisco.com']:mask:['18', '24']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:35.777304" elapsed="0.000000"/>
</kw>
<doc>Find the Data Gateway hosts and IP</doc>
<tag>DATA-COLLECTION</tag>
<tag>DATA_GATEWAY</tag>
<status status="PASS" start="2024-12-12T15:58:35.476266" elapsed="0.302044">--Data Gateways--
['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED
['cdg1.demo.dcloud.cisco.com']:cpu:20
['cdg1.demo.dcloud.cisco.com']:memory:110
['cdg1.demo.dcloud.cisco.com']:nics:3
['cdg1.demo.dcloud.cisco.com']:name:['eth0', 'eth1', 'eth2']
['cdg1.demo.dcloud.cisco.com']:inetAddr:['198.18.134.230', '198.18.2.230']
['cdg1.demo.dcloud.cisco.com']:mask:['18', '24']

</status>
</test>
<test id="s1-t18" name="Retrieve CNC Data Gateway Pools" line="157">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:35.779603" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:35.779313" elapsed="0.000290"/>
</kw>
<kw name="get-cnc-cdg-pools" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.779603" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.779603" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.779603" elapsed="0.001005"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">${description} = Retrieve CNC Data Gateway Pools</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">@{CNC_DATAGW_POOL} = [ ]</msg>
<var>@{CNC_DATAGW_POOL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">@{FIELDS_DATA} = [ name ]</msg>
<var>@{FIELDS_DATA}</var>
<arg>name</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">@{FIELDS_VIP} = [ inetAddr | inetAddr | mask | gateway ]</msg>
<var>@{FIELDS_VIP}</var>
<arg>inetAddr</arg>
<arg>inetAddr</arg>
<arg>mask</arg>
<arg>gateway</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">@{FIELDS_VIP_CDG} = [ cpu | memory | nics ]</msg>
<var>@{FIELDS_VIP_CDG}</var>
<arg>cpu</arg>
<arg>memory</arg>
<arg>nics</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">${myurl} = crosswork/dg-manager/v2/vdg/query</msg>
<var>${myurl}</var>
<arg>crosswork/dg-manager/v2/vdg/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.780608" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:35.780608" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:35.786942" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:35.786942" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:36.078308" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/dg-manager/v2/vdg/query 
 path_url=/crosswork/dg-manager/v2/vdg/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-12T15:58:36.079308" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/dg-manager/v2/vdg/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:35 GMT', 'Content-Type': 'application/json', 'Content-Length': '479', 'Connection': 'keep-alive', 'Timestamp': '2024-12-12T05:58:35Z', 'X-Cxw-Rpc-Status': '0', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"return":{"desc":"IPV4"},"data":[{"name":"CDG_Pool_1-1","vdgUuid":"c2871f3c-7750-4a44-98d0-de569431ce59","pdgUuid":"19c6045f-f05f-44d4-bb73-610cc212bdaf","virtualIPs":[{"ipaddr":{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"198.18.1.220","mask":"24","gateway":"198.18.1.1"},"gateway":"198.18.1.1","inetaddrs":[{"inetAf":"ROBOT_INET_ADDR_TYPE_v4","inetAddr":"198.18.1.220","mask":"24","gateway":"198.18.1.1"}]}],"poolId":"cdc89956-cbb7-4c20-b201-49fa97671d5d"}],"totalCount":1} 
 </msg>
<msg time="2024-12-12T15:58:36.079308" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:36.079308" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:35.786942" elapsed="0.292366"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.079308" level="INFO">${json_response} = {'return': {'desc': 'IPV4'}, 'data': [{'name': 'CDG_Pool_1-1', 'vdgUuid': 'c2871f3c-7750-4a44-98d0-de569431ce59', 'pdgUuid': '19c6045f-f05f-44d4-bb73-610cc212bdaf', 'virtualIPs': [{'ipaddr': {'inetAf'...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.079308" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.079308" level="INFO">${MSG} = --Data Gateway Pool(s)--
</msg>
<arg>${MSG}</arg>
<arg>--Data Gateway Pool(s)--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.079308" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.080287" level="INFO">Length is 1.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.080287" level="INFO">${RESP} = ('PASS', 1)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Data Data Gateway Pool(s)\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.080287" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.080287" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:36.080287" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.089264" level="INFO">${cdg} = ['CDG_Pool_1-1']</msg>
<var>${cdg}</var>
<arg>${data}</arg>
<arg>$.name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.081267" elapsed="0.007997"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.089264" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.089264" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.097820" level="INFO">${values} = ['198.18.1.220', '198.18.1.220']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.089264" elapsed="0.008556"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.098863" level="INFO">${MSG} = --Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.097820" elapsed="0.001043"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.098863" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-12T15:58:36.089264" elapsed="0.009599"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.098863" level="INFO">${search} = $..inetAddr</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.098863" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.119489" level="INFO">${values} = ['198.18.1.220', '198.18.1.220']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.098863" elapsed="0.020626"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.119489" level="INFO">${MSG} = --Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.119489" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.120488" elapsed="0.000000"/>
</kw>
<var name="${item}">inetAddr</var>
<status status="PASS" start="2024-12-12T15:58:36.098863" elapsed="0.021625"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.120488" level="INFO">${search} = $..mask</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.120488" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.130094" level="INFO">${values} = ['24', '24']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.120488" elapsed="0.009606"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.130094" level="INFO">${MSG} = --Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.130094" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.130094" elapsed="0.000000"/>
</kw>
<var name="${item}">mask</var>
<status status="PASS" start="2024-12-12T15:58:36.120488" elapsed="0.009606"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.130094" level="INFO">${search} = $..gateway</msg>
<var>${search}</var>
<arg>$..${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.130094" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.139648" level="INFO">${values} = ['198.18.1.1', '198.18.1.1', '198.18.1.1']</msg>
<var>${values}</var>
<arg>${data['virtualIPs']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.130094" elapsed="0.009554"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.139648" level="INFO">${MSG} = --Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
['CDG_Pool_1-1']:gatew...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${cdg}:${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.139648" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${cdg}:${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.139648" elapsed="0.000000"/>
</kw>
<var name="${item}">gateway</var>
<status status="PASS" start="2024-12-12T15:58:36.130094" elapsed="0.009554"/>
</iter>
<var>${item}</var>
<value>@{FIELDS_VIP}</value>
<status status="PASS" start="2024-12-12T15:58:36.089264" elapsed="0.050384"/>
</for>
<var name="${data}">{'name': 'CDG_Pool_1-1', 'vdgUuid': 'c2871f3c-7750-4a44-98d0-de569431ce59', 'pdgUuid': '19c6045f-f05f-44d4-bb73-610cc212bdaf', 'virtualIPs': [{'ipaddr': {'inetAf': 'ROBOT_INET_ADDR_TYPE_v4', 'inetAddr...</var>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.059361"/>
</iter>
<var>${data}</var>
<value>@{json_response['data']}</value>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.059361"/>
</for>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.059361"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:36.080287" elapsed="0.059361"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.139648" level="INFO">${CNC_DATAGW_POOL} = ["['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']", "['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']", "['CDG_Pool_1-1']:mask:['24', '24']", "['CDG_Pool_1-1']:gateway:['198.18.1....</msg>
<arg>${CNC_DATAGW_POOL}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:36.139648" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.139648" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Data gateway pool key configuration from /crosswork/dg-manager/v2/vdg/query</doc>
<status status="PASS" start="2024-12-12T15:58:35.779603" elapsed="0.360045"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:36.139648" level="INFO">Set test message to:
--Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18.1.1', '198.18.1.1']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:36.139648" elapsed="0.000000"/>
</kw>
<doc>Find Data Gateway Pool information</doc>
<tag>DATA-COLLECTION</tag>
<tag>DATA_GATEWAY</tag>
<status status="PASS" start="2024-12-12T15:58:35.778310" elapsed="0.361338">--Data Gateway Pool(s)--
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18.1.1', '198.18.1.1']

</status>
</test>
<test id="s1-t19" name="Retrieve CNC Syslog Destinations" line="164">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:36.141186" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.141186" elapsed="0.000000"/>
</kw>
<kw name="get-syslog-dest" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.142707" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.142707" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.142707" level="INFO">${description} = Retrieve CNC Syslog Destinations</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.142707" level="INFO">@{CNC_SYSLOG_DEST} = [ ]</msg>
<var>@{CNC_SYSLOG_DEST}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.142707" level="INFO">${myurl} = /crosswork/alarms/v1/syslog-dest/query</msg>
<var>${myurl}</var>
<arg>/crosswork/alarms/v1/syslog-dest/query</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.142707" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.143716" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.143716" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.143716" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.143716" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:36.289412" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/alarms/v1/syslog-dest/query 
 path_url=/crosswork/alarms/v1/syslog-dest/query 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-12T15:58:36.289412" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/alarms/v1/syslog-dest/query 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:36 GMT', 'Content-Type': 'text/plain;charset=UTF-8', 'Content-Length': '11', 'Connection': 'keep-alive', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate'} 
 body={"data":[]} 
 </msg>
<msg time="2024-12-12T15:58:36.289412" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:36.289412" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:36.143716" elapsed="0.146678"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.290394" level="INFO">${json_response} = {'data': []}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.290394" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.290394" level="INFO">${MSG} = --NSO Transport--
</msg>
<arg>${MSG}</arg>
<arg>--NSO Transport--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.290394" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.290394" level="INFO">Length is 0.</msg>
<arg>${json_response['data']}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:36.290394" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.291414" level="INFO">${RESP} = ('PASS', 0)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response['data']}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:36.290394" elapsed="0.001020"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for Syslog\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\n${item['host']}:${item['port']}:${item['criteria']}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SYSLOG_DEST}</arg>
<arg>${item['host']}:${item['port']}:${item['criteria']}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{json_response['data']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.291414" level="INFO">${CNC_SYSLOG_DEST} = []</msg>
<arg>${CNC_SYSLOG_DEST}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.291414" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC active SYSLOG configuration information from /crosswork/alarms/v1/syslog-dest/query</doc>
<status status="PASS" start="2024-12-12T15:58:36.141186" elapsed="0.150228"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:36.291414" level="INFO">Set test message to:
--NSO Transport--

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:36.291414" elapsed="0.000000"/>
</kw>
<doc>Find all the remote syslog destinations</doc>
<tag>DATA-COLLECTION</tag>
<tag>SYSLOG</tag>
<status status="PASS" start="2024-12-12T15:58:36.141186" elapsed="0.150228">--NSO Transport--

</status>
</test>
<test id="s1-t20" name="Retrieve CNC Entitlements" line="171">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:36.293952" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.292922" elapsed="0.001030"/>
</kw>
<kw name="get-cnc-entitlement" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.294927" level="INFO">${myurl} = /crosswork/clms/v1/onboard-list</msg>
<var>${myurl}</var>
<arg>/crosswork/clms/v1/onboard-list</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.294927" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/xml</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.294927" level="INFO">@{CNC_ENTITLEMENTS} = [ ]</msg>
<var>@{CNC_ENTITLEMENTS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.294927" level="INFO">@{FIELDS} = [ name | version ]</msg>
<var>@{FIELDS}</var>
<arg>name</arg>
<arg>version</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.294927" level="INFO">${description} = Retrieve CNC Entitlements</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:36.447012" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/clms/v1/onboard-list 
 path_url=/crosswork/clms/v1/onboard-list 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/xml', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:36.447012" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/clms/v1/onboard-list 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body=[{"product_id":"CW_INFRA","display_name":"Crosswork Platform Services","entitlements":[{"name":"CW_EXTERNAL_COLLECT","version":"1.0"}]},{"product_id":"CAA","display_name":"Service Health","entitlements":[{"name":"CAA_RTM","version":"1.0"}]},{"product_id":"OPTIMA","display_name":"Crosswork Optimization Engine","entitlements":[{"name":"OPTM-RTM-ESS","version":"1.0"},{"name":"OPTM-RTU-FP-BW","version":"1.0"},{"name":"OPTM-RTM-ADV","version":"1.0"},{"name":"OPTM-RTU-SVR","version":"1.0"}]},{"product_id":"CNC","display_name":"Crosswork Network Controller","entitlements":[{"name":"CNC_RTU","version":"1.0"},{"name":"CNC_GEO_RTU","version":"1.0"},{"name":"CNC-ERTM-SMALL","version":"1.0"},{"name":"CNC_ARTM_SMALL","version":"1.0"},{"name":"CW_EXTERNAL_COLLECT","version":"1.0"},{"name":"NTWAUTO_RTM","version":"1.0"},{"name":"CNC_CAHI_RTU","version":"1.0"}]},{"product_id":"CAHISW","display_name":"Health Insights and Change Automation","entitlements":[{"name":"NTWAUTO_RTM","version":"1.0"},{"name":"CNC_CAHI_RTU","version":"1.0"}]}] 
 </msg>
<msg time="2024-12-12T15:58:36.447012" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:36.447012" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:36.294927" elapsed="0.152085"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.447996" level="INFO">${json_response} = [{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}, {'product_id': 'CAA', 'display_name': 'Service Health',...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.447012" elapsed="0.000984"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.447996" level="INFO">${MSG} = --CNC Entitlements--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Entitlements--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.447996" level="INFO">Length is 5.</msg>
<arg>${json_response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.447996" level="INFO">${RESP} = ('PASS', 5)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Entitlements\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:36.447996" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.448996" level="INFO">${entitlement} = Crosswork Platform Services</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.448996" level="INFO">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.448996" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.448996" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.448996" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.457013" level="INFO">${data} = ['CW_EXTERNAL_COLLECT']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.448996" elapsed="0.008017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.457995" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.457013" elapsed="0.000982"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.457995" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-12T15:58:36.448996" elapsed="0.008999"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.457995" level="INFO">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.457995" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.457995" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.457995" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.467508" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.457995" elapsed="0.009513"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.467508" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.467508" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.467508" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-12T15:58:36.457995" elapsed="0.009513"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:36.448996" elapsed="0.018512"/>
</for>
<var name="${item}">{'product_id': 'CW_INFRA', 'display_name': 'Crosswork Platform Services', 'entitlements': [{'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}]}</var>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.019512"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.468513" level="INFO">${entitlement} = Service Health</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.467508" elapsed="0.001005"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.468513" level="INFO">{'product_id': 'CAA', 'display_name': 'Service Health', 'entitlements': [{'name': 'CAA_RTM', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.468513" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.468513" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.468513" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.477181" level="INFO">${data} = ['CAA_RTM']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.468513" elapsed="0.008668"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.477181" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.477181" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.477181" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-12T15:58:36.468513" elapsed="0.008668"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.477181" level="INFO">{'product_id': 'CAA', 'display_name': 'Service Health', 'entitlements': [{'name': 'CAA_RTM', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.477181" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.478191" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.477181" elapsed="0.001010"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.487208" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.478191" elapsed="0.009017"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.487208" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.487208" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.487208" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-12T15:58:36.477181" elapsed="0.010027"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:36.468513" elapsed="0.018695"/>
</for>
<var name="${item}">{'product_id': 'CAA', 'display_name': 'Service Health', 'entitlements': [{'name': 'CAA_RTM', 'version': '1.0'}]}</var>
<status status="PASS" start="2024-12-12T15:58:36.467508" elapsed="0.019700"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.488208" level="INFO">${entitlement} = Crosswork Optimization Engine</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.487208" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.488208" level="INFO">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-ADV', 'version': '1.0'}, {'name': 'OPTM-RTU-SVR', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.488208" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.488208" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.488208" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.496752" level="INFO">${data} = ['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.488208" elapsed="0.008544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.496752" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.496752" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.496752" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-12T15:58:36.488208" elapsed="0.008544"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.497754" level="INFO">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-ADV', 'version': '1.0'}, {'name': 'OPTM-RTU-SVR', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.497754" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.497754" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.497754" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.505752" level="INFO">${data} = ['1.0', '1.0', '1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.497754" elapsed="0.007998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.505752" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.505752" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.505752" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-12T15:58:36.497754" elapsed="0.007998"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:36.488208" elapsed="0.017544"/>
</for>
<var name="${item}">{'product_id': 'OPTIMA', 'display_name': 'Crosswork Optimization Engine', 'entitlements': [{'name': 'OPTM-RTM-ESS', 'version': '1.0'}, {'name': 'OPTM-RTU-FP-BW', 'version': '1.0'}, {'name': 'OPTM-RTM-...</var>
<status status="PASS" start="2024-12-12T15:58:36.487208" elapsed="0.018544"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.506750" level="INFO">${entitlement} = Crosswork Network Controller</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.506750" level="INFO">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'version': '1.0'}, {'name': 'CNC_ARTM_SMALL', 'version': '1.0'}, {'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}, {'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.506750" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.514925" level="INFO">${data} = ['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.008175"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.514925" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.514925" elapsed="0.000984"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.515909" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.009159"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.515909" level="INFO">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'version': '1.0'}, {'name': 'CNC_ARTM_SMALL', 'version': '1.0'}, {'name': 'CW_EXTERNAL_COLLECT', 'version': '1.0'}, {'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.515909" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.515909" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.515909" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.524886" level="INFO">${data} = ['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.515909" elapsed="0.008977"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.524886" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-12T15:58:36.515909" elapsed="0.008977"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.018136"/>
</for>
<var name="${item}">{'product_id': 'CNC', 'display_name': 'Crosswork Network Controller', 'entitlements': [{'name': 'CNC_RTU', 'version': '1.0'}, {'name': 'CNC_GEO_RTU', 'version': '1.0'}, {'name': 'CNC-ERTM-SMALL', 'ver...</var>
<status status="PASS" start="2024-12-12T15:58:36.506750" elapsed="0.018136"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.524886" level="INFO">${entitlement} = Health Insights and Change Automation</msg>
<var>${entitlement}</var>
<arg>${item['display_name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.524886" level="INFO">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.526430" level="INFO">${search} = $..name</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.001544"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.534500" level="INFO">${data} = ['NTWAUTO_RTM', 'CNC_CAHI_RTU']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.526430" elapsed="0.008070"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.534500" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.534500" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.535483" elapsed="0.000000"/>
</kw>
<var name="${ent}">name</var>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.010597"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.535483" level="INFO">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</msg>
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:36.535483" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.535483" level="INFO">${search} = $..version</msg>
<var>${search}</var>
<arg>$..${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.535483" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.545085" level="INFO">${data} = ['1.0', '1.0']</msg>
<var>${data}</var>
<arg>${item['entitlements']}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.535483" elapsed="0.009602"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.545085" level="INFO">${MSG} = --CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optim...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${entitlement}|${ent}:${data}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.545085" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${entitlement}|${ent}:${data}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.545085" elapsed="0.000000"/>
</kw>
<var name="${ent}">version</var>
<status status="PASS" start="2024-12-12T15:58:36.535483" elapsed="0.009602"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS}</value>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.020199"/>
</for>
<var name="${item}">{'product_id': 'CAHISW', 'display_name': 'Health Insights and Change Automation', 'entitlements': [{'name': 'NTWAUTO_RTM', 'version': '1.0'}, {'name': 'CNC_CAHI_RTU', 'version': '1.0'}]}</var>
<status status="PASS" start="2024-12-12T15:58:36.524886" elapsed="0.020199"/>
</iter>
<var>${item}</var>
<value>@{json_response}</value>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.097089"/>
</for>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.097089"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:36.447996" elapsed="0.097089"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.546080" level="INFO">${CNC_ENTITLEMENTS} = ["Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']", "Crosswork Platform Services|version:['1.0']", "Service Health|name:['CAA_RTM']", "Service Health|version:['1.0']", "Crosswork Optimization...</msg>
<arg>${CNC_ENTITLEMENTS}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:36.545085" elapsed="0.000995"/>
</kw>
<msg time="2024-12-12T15:58:36.546080" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Entitlements</doc>
<status status="PASS" start="2024-12-12T15:58:36.293952" elapsed="0.252128"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:36.546468" level="INFO">Set test message to:
--CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:36.546468" elapsed="0.000000"/>
</kw>
<doc>Find CNC Entitlements and RTM</doc>
<tag>DATA-COLLECTION</tag>
<tag>LICENSING</tag>
<status status="PASS" start="2024-12-12T15:58:36.292922" elapsed="0.253546">--CNC Entitlements--
Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']
Crosswork Platform Services|version:['1.0']
Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']
Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']
Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']
Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']
Health Insights and Change Automation|version:['1.0', '1.0']

</status>
</test>
<test id="s1-t21" name="Retrieve CNC Licensing" line="178">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:36.548391" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.547381" elapsed="0.001010"/>
</kw>
<kw name="get-cnc-licensing" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.548391" level="INFO">${myurl} = /crosswork/clms/v1/license-info</msg>
<var>${myurl}</var>
<arg>/crosswork/clms/v1/license-info</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.548391" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.549414" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.549414" level="INFO">${payload} = {"product_id":"CNC"}</msg>
<var>${payload}</var>
<arg>{"product_id":"CNC"}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.549414" level="INFO">${payload_json} = {'product_id': 'CNC'}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.549414" level="INFO">@{CNC_LICENSING} = [ ]</msg>
<var>@{CNC_LICENSING}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.549414" level="INFO">@{FIELDS_REGISTRATION} = [ summary | registration_status ]</msg>
<var>@{FIELDS_REGISTRATION}</var>
<arg>summary</arg>
<arg>registration_status</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.550411" level="INFO">@{FIELDS_ENTITLEMENT} = [ display_name | entitlement_version | enforce_mode | requested_count ]</msg>
<var>@{FIELDS_ENTITLEMENT}</var>
<arg>display_name</arg>
<arg>entitlement_version</arg>
<arg>enforce_mode</arg>
<arg>requested_count</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:36.549414" elapsed="0.000997"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.550411" level="INFO">${description} = Retrieve CNC Licensing</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.550411" elapsed="0.000000"/>
</kw>
<kw name="POST On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:36.707261" level="INFO">POST Request : url=https://198.18.134.219:30603/crosswork/clms/v1/license-info 
 path_url=/crosswork/clms/v1/license-info 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '21'} 
 body=b'{"product_id": "CNC"}' 
 </msg>
<msg time="2024-12-12T15:58:36.707261" level="INFO">POST Response : url=https://198.18.134.219:30603/crosswork/clms/v1/license-info 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:36 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Vary': 'Accept-Encoding', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;", 'Cache-Control': ': private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Encoding': 'gzip'} 
 body={"registration_summary":{"summary":"Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in evaluation mode until the evaluation period expires","registration_status":"UN_REGISTERED","registration_last_renew":"1970-01-01T00:00:00.000+00:00","registration_next_renew":"1970-01-01T00:00:00.000+00:00","registration_expire":"1970-01-01T00:00:00.000+00:00","product_instance_id":"UDI_PID:CNC;UDI_SN:7addb999-a320-41f6-b681-d5569148b477;","registration_renew_failed":false},"license_auth_summary":{"summary":"\nSmart Licensing is ENABLED\n\nRegistration:\n  Status: UNREGISTERED\n  Export-Controlled Functionality: Not Allowed\n\nLicense Authorization:\n  Status: EVAL MODE\n  Evaluation Period Remaining: 89 days, 15 hr, 53 min, 0 sec\n  Last Communication Attempt: NONE\n\nLicense Conversion: \n Automatic Conversion Enabled: true\n Status: NOT STARTED\n\nUtility:\n  Status: DISABLED\n\nTransport:\n  Type: Smart Transport\n  Registration URL: null\n  Utility URL: null","authorization_failed_reason":null,"authorization_expired_at":"1970-01-01T00:00:00.000+00:00","authorization_next":"1970-01-01T00:00:00.000+00:00","authorization_last":"1970-01-01T00:00:00.000+00:00","license_status":"EVALUATION_MODE","evaluation_period_remaining":89,"evaluation_expired_at":"1970-01-01T00:00:00.000+00:00","authorization_failed":false},"reservation_status":"NONE","smart_account_name":null,"virtual_account_name":null,"allow_restricted":false,"entitlement_usage":[{"display_name":"CW_EXTERNAL_COLLECT","entitlement_version":"1.0","enforce_mode":"NOT_IN_USE","requested_date":null,"expiry_date":null,"requested_count":0,"description":"Crosswork External Collection Enablement device - Right to Manage","export_status":"NOT_RESTRICTED","lab":false},{"display_name":"CNC_RTU","entitlement_version":"1.0","enforce_mode":"EVALUATION","requested_date":"2024-12-12T05:35:44.282+00:00","expiry_date":"2025-03-11T21:50:44.282+00:00","requested_count":1,"description":"Crosswork Network Controller RTU","export_status":"NOT_RESTRICTED","lab":false},{"display_name":"CNC_ARTM_SMALL","entitlement_version":"1.0","enforce_mode":"EVALUATION","requested_date":"2024-12-12T05:35:47.105+00:00","expiry_date":"2025-03-11T21:50:47.105+00:00","requested_count":12,"description":"Crosswork Network Controller Advantage RTM for Small Network Elements","export_status":"NOT_RESTRICTED","lab":false},{"display_name":"CNC-ERTM-SMALL","entitlement_version":"1.0","enforce_mode":"NOT_IN_USE","requested_date":null,"expiry_date":null,"requested_count":0,"description":"CNC Essential RTM license for Small Network Elements","export_status":"NOT_RESTRICTED","lab":false},{"display_name":"NTWAUTO_RTM","entitlement_version":"1.0","enforce_mode":"NOT_IN_USE","requested_date":null,"expiry_date":null,"requested_count":0,"description":"Network Automation Right To Manage","export_status":"NOT_RESTRICTED","lab":false},{"display_name":"CNC_CAHI_RTU","entitlement_version":"1.0","enforce_mode":"EVALUATION","requested_date":"2024-12-12T01:38:45.262+00:00","expiry_date":"2025-03-11T21:48:45.262+00:00","requested_count":1,"description":"Crosswork Network Controller CAHI RTU","export_status":"NOT_RESTRICTED","lab":false}],"transport":{"mode":"DIRECT","url":"https://smartreceiver.cisco.com/licservice/license","proxy":null},"reservation_request_code":null,"reservation_confirmation_code":null,"lab_enabled":false,"lab_supported":true} 
 </msg>
<msg time="2024-12-12T15:58:36.707261" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:36.707261" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:36.550411" elapsed="0.156850"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.707261" level="INFO">${json_response} = {'registration_summary': {'summary': 'Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in eval...</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:36.707261" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.707261" level="INFO">${MSG} = --CNC Licensing--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Licensing--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.707261" elapsed="0.001002"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.708263" level="INFO">Length is 12.</msg>
<arg>${json_response}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:36.708263" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:36.708263" level="INFO">${RESP} = ('PASS', 12)</msg>
<var>${RESP}</var>
<arg>Get Length</arg>
<arg>${json_response}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:36.708263" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}Data Collection failed for CNC Licensing\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.708263" elapsed="0.000000"/>
</kw>
<kw name="Fail" owner="BuiltIn">
<arg>Test failed.</arg>
<doc>Fails the test with the given message and optionally alters its tags.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:36.708263" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:36.708263" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.717234" level="INFO">${key1} = ['NONE']</msg>
<var>${key1}</var>
<arg>${json_response}</arg>
<arg>$.reservation_status</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.708263" elapsed="0.008971"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.726350" level="INFO">${key2} = [None]</msg>
<var>${key2}</var>
<arg>${json_response}</arg>
<arg>$.smart_account_name</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.717234" elapsed="0.009116"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.736198" level="INFO">${registration_summary} = [{'summary': 'Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in evaluation mode until the ev...</msg>
<var>${registration_summary}</var>
<arg>${json_response}</arg>
<arg>$.registration_summary</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.727365" elapsed="0.008833"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.736198" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- Licensing | Status:${key1} | Account:${key2} ---\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.736198" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.736717" level="INFO">${search} = $.summary</msg>
<var>${search}</var>
<arg>$.${reg}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.736198" elapsed="0.000519"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.745823" level="INFO">${data} = ['Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in evaluation mode until the evaluation per...</msg>
<var>${data}</var>
<arg>@{registration_summary}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.736717" elapsed="0.009106"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.746396" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${reg} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.746396" elapsed="0.000000"/>
</kw>
<var name="${reg}">summary</var>
<status status="PASS" start="2024-12-12T15:58:36.736198" elapsed="0.010198"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.746396" level="INFO">${search} = $.registration_status</msg>
<var>${search}</var>
<arg>$.${reg}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.746396" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.754928" level="INFO">${data} = ['UN_REGISTERED']</msg>
<var>${data}</var>
<arg>@{registration_summary}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.746396" elapsed="0.008532"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.755925" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${reg} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.754928" elapsed="0.000997"/>
</kw>
<var name="${reg}">registration_status</var>
<status status="PASS" start="2024-12-12T15:58:36.746396" elapsed="0.009529"/>
</iter>
<var>${reg}</var>
<value>@{FIELDS_REGISTRATION}</value>
<status status="PASS" start="2024-12-12T15:58:36.736198" elapsed="0.019727"/>
</for>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.755925" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.755925" elapsed="0.000983"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.756908" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.756908" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.765441" level="INFO">${data} = ['CW_EXTERNAL_COLLECT']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.756908" elapsed="0.008533"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.766461" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.766461" elapsed="0.000000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.756908" elapsed="0.009553"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.766461" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.766461" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.776028" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.766461" elapsed="0.009567"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.776028" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.776028" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.766461" elapsed="0.009567"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.776028" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.776028" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.785162" level="INFO">${data} = ['NOT_IN_USE']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.776028" elapsed="0.009134"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.786162" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.786162" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.776028" elapsed="0.010134"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.786162" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.786162" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.796710" level="INFO">${data} = [0]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.786162" elapsed="0.010548"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.796710" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.796710" elapsed="0.000000"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:36.786162" elapsed="0.010548"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.756908" elapsed="0.039802"/>
</for>
<var name="${entitlement}">{'display_name': 'CW_EXTERNAL_COLLECT', 'entitlement_version': '1.0', 'enforce_mode': 'NOT_IN_USE', 'requested_date': None, 'expiry_date': None, 'requested_count': 0, 'description': 'Crosswork Externa...</var>
<status status="PASS" start="2024-12-12T15:58:36.755925" elapsed="0.040785"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.797725" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.796710" elapsed="0.001015"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.797725" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.797725" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.806721" level="INFO">${data} = ['CNC_RTU']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.797725" elapsed="0.008996"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.807721" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.806721" elapsed="0.001000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.797725" elapsed="0.009996"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.807721" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.807721" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.816904" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.807721" elapsed="0.009183"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.816904" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.816904" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.807721" elapsed="0.009183"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.816904" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.816904" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.824903" level="INFO">${data} = ['EVALUATION']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.816904" elapsed="0.007999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.824903" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.824903" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.816904" elapsed="0.007999"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.824903" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.824903" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.835447" level="INFO">${data} = [1]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.826426" elapsed="0.009021"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.835447" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.835447" elapsed="0.000000"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:36.824903" elapsed="0.010544"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.797725" elapsed="0.037722"/>
</for>
<var name="${entitlement}">{'display_name': 'CNC_RTU', 'entitlement_version': '1.0', 'enforce_mode': 'EVALUATION', 'requested_date': '2024-12-12T05:35:44.282+00:00', 'expiry_date': '2025-03-11T21:50:44.282+00:00', 'requested_co...</var>
<status status="PASS" start="2024-12-12T15:58:36.796710" elapsed="0.038737"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.836447" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.835447" elapsed="0.001000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.836447" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.836447" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.845991" level="INFO">${data} = ['CNC_ARTM_SMALL']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.836447" elapsed="0.009544"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.846993" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.846993" elapsed="0.000000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.836447" elapsed="0.010546"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.846993" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.846993" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.871570" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.846993" elapsed="0.024577"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.871570" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.871570" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.846993" elapsed="0.024577"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.871570" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.871570" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.881417" level="INFO">${data} = ['EVALUATION']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.871570" elapsed="0.009847"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.881417" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.881417" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.871570" elapsed="0.009847"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.881417" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.881417" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.890411" level="INFO">${data} = [12]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.881417" elapsed="0.008994"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.890411" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.890411" elapsed="0.000000"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:36.881417" elapsed="0.008994"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.836447" elapsed="0.053964"/>
</for>
<var name="${entitlement}">{'display_name': 'CNC_ARTM_SMALL', 'entitlement_version': '1.0', 'enforce_mode': 'EVALUATION', 'requested_date': '2024-12-12T05:35:47.105+00:00', 'expiry_date': '2025-03-11T21:50:47.105+00:00', 'reque...</var>
<status status="PASS" start="2024-12-12T15:58:36.835447" elapsed="0.054964"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.891413" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.890411" elapsed="0.001002"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.891413" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.891413" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.900979" level="INFO">${data} = ['CNC-ERTM-SMALL']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.891413" elapsed="0.009566"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.900979" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.900979" elapsed="0.000000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.891413" elapsed="0.009566"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.900979" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.900979" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.911503" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.900979" elapsed="0.010524"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.911503" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.911503" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.900979" elapsed="0.010524"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.912527" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.912527" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.920500" level="INFO">${data} = ['NOT_IN_USE']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.912527" elapsed="0.007973"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.920500" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.920500" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.911503" elapsed="0.008997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.921500" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.920500" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.930562" level="INFO">${data} = [0]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.921500" elapsed="0.009062"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.930562" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.930562" elapsed="0.000000"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:36.920500" elapsed="0.010062"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.891413" elapsed="0.039149"/>
</for>
<var name="${entitlement}">{'display_name': 'CNC-ERTM-SMALL', 'entitlement_version': '1.0', 'enforce_mode': 'NOT_IN_USE', 'requested_date': None, 'expiry_date': None, 'requested_count': 0, 'description': 'CNC Essential RTM lice...</var>
<status status="PASS" start="2024-12-12T15:58:36.890411" elapsed="0.040151"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.931586" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.930562" elapsed="0.001024"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.931586" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.931586" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.940583" level="INFO">${data} = ['NTWAUTO_RTM']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.931586" elapsed="0.008997"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.940583" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.940583" elapsed="0.000000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.931586" elapsed="0.008997"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.941583" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.940583" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.951151" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.941583" elapsed="0.009568"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.951151" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.951151" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.940583" elapsed="0.010568"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.951151" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.951151" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.960662" level="INFO">${data} = ['NOT_IN_USE']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.951151" elapsed="0.009511"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.960662" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.960662" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.951151" elapsed="0.009511"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.961661" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.960662" elapsed="0.000999"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.969679" level="INFO">${data} = [0]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.961661" elapsed="0.008018"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.970678" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.000000"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:36.960662" elapsed="0.010016"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.931586" elapsed="0.039092"/>
</for>
<var name="${entitlement}">{'display_name': 'NTWAUTO_RTM', 'entitlement_version': '1.0', 'enforce_mode': 'NOT_IN_USE', 'requested_date': None, 'expiry_date': None, 'requested_count': 0, 'description': 'Network Automation Right ...</var>
<status status="PASS" start="2024-12-12T15:58:36.930562" elapsed="0.040116"/>
</iter>
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.970678" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}\n--- ${entitlement['description']} --- \n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.971678" level="INFO">${search} = $.display_name</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.001000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.980793" level="INFO">${data} = ['CNC_CAHI_RTU']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.971678" elapsed="0.009115"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.980793" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.980793" elapsed="0.000000"/>
</kw>
<var name="${ent}">display_name</var>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.010115"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.980793" level="INFO">${search} = $.entitlement_version</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.980793" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:36.993927" level="INFO">${data} = ['1.0']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.980793" elapsed="0.013134"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.994951" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:36.994951" elapsed="0.000000"/>
</kw>
<var name="${ent}">entitlement_version</var>
<status status="PASS" start="2024-12-12T15:58:36.980793" elapsed="0.014158"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:36.994951" level="INFO">${search} = $.enforce_mode</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:36.994951" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:37.003931" level="INFO">${data} = ['EVALUATION']</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:36.994951" elapsed="0.008980"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.003931" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.003931" elapsed="0.000000"/>
</kw>
<var name="${ent}">enforce_mode</var>
<status status="PASS" start="2024-12-12T15:58:36.994951" elapsed="0.008980"/>
</iter>
<iter>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.003931" level="INFO">${search} = $.requested_count</msg>
<var>${search}</var>
<arg>$.${ent}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.003931" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<msg time="2024-12-12T15:58:37.012484" level="INFO">${data} = [1]</msg>
<var>${data}</var>
<arg>${entitlement}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="PASS" start="2024-12-12T15:58:37.003931" elapsed="0.008553"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.013482" level="INFO">${MSG} = --CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If ...</msg>
<arg>${MSG}</arg>
<arg>${MSG}${ent} | ${data}[0]\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.012484" elapsed="0.000998"/>
</kw>
<var name="${ent}">requested_count</var>
<status status="PASS" start="2024-12-12T15:58:37.003931" elapsed="0.009551"/>
</iter>
<var>${ent}</var>
<value>@{FIELDS_ENTITLEMENT}</value>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.042804"/>
</for>
<var name="${entitlement}">{'display_name': 'CNC_CAHI_RTU', 'entitlement_version': '1.0', 'enforce_mode': 'EVALUATION', 'requested_date': '2024-12-12T01:38:45.262+00:00', 'expiry_date': '2025-03-11T21:48:45.262+00:00', 'request...</var>
<status status="PASS" start="2024-12-12T15:58:36.970678" elapsed="0.042804"/>
</iter>
<var>${entitlement}</var>
<value>@{json_response['entitlement_usage']}</value>
<status status="PASS" start="2024-12-12T15:58:36.755925" elapsed="0.257557"/>
</for>
<status status="PASS" start="2024-12-12T15:58:36.708263" elapsed="0.305219"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:36.708263" elapsed="0.305219"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.013482" level="INFO">${CNC_LICENSING} = []</msg>
<arg>${CNC_LICENSING}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.013482" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.013482" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC Entitlements</doc>
<status status="PASS" start="2024-12-12T15:58:36.548391" elapsed="0.465091"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.013482" level="INFO">Set test message to:
--CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in evaluation mode until the evaluation period expires
registration_status | UN_REGISTERED

--- Crosswork External Collection Enablement device - Right to Manage --- 
display_name | CW_EXTERNAL_COLLECT
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Crosswork Network Controller RTU --- 
display_name | CNC_RTU
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 1

--- Crosswork Network Controller Advantage RTM for Small Network Elements --- 
display_name | CNC_ARTM_SMALL
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 12

--- CNC Essential RTM license for Small Network Elements --- 
display_name | CNC-ERTM-SMALL
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Network Automation Right To Manage --- 
display_name | NTWAUTO_RTM
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Crosswork Network Controller CAHI RTU --- 
display_name | CNC_CAHI_RTU
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 1

</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.013482" elapsed="0.000000"/>
</kw>
<doc>Find CNC Licensing status</doc>
<tag>DATA-COLLECTION</tag>
<tag>LICENSING</tag>
<status status="PASS" start="2024-12-12T15:58:36.547381" elapsed="0.467086">--CNC Licensing--

--- Licensing | Status:['NONE'] | Account:[None] ---
summary | Smart software licensing is enabled but this product instance is not registered with Cisco smart software manager. If any licenses are in use, it will run in evaluation mode until the evaluation period expires
registration_status | UN_REGISTERED

--- Crosswork External Collection Enablement device - Right to Manage --- 
display_name | CW_EXTERNAL_COLLECT
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Crosswork Network Controller RTU --- 
display_name | CNC_RTU
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 1

--- Crosswork Network Controller Advantage RTM for Small Network Elements --- 
display_name | CNC_ARTM_SMALL
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 12

--- CNC Essential RTM license for Small Network Elements --- 
display_name | CNC-ERTM-SMALL
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Network Automation Right To Manage --- 
display_name | NTWAUTO_RTM
entitlement_version | 1.0
enforce_mode | NOT_IN_USE
requested_count | 0

--- Crosswork Network Controller CAHI RTU --- 
display_name | CNC_CAHI_RTU
entitlement_version | 1.0
enforce_mode | EVALUATION
requested_count | 1

</status>
</test>
<test id="s1-t22" name="Retrieve CNC Software Images" line="185">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.015467" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.015467" elapsed="0.000000"/>
</kw>
<kw name="get-swim-images" owner="CW_Keywords">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.016478" level="INFO">${myurl} = status</msg>
<var>${myurl}</var>
<arg>status</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.016478" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.016478" level="INFO">${description} = Retrieve CNC Software Images</msg>
<var>${description}</var>
<arg>${TEST NAME}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.016478" level="INFO">@{CNC_SWIM_IMAGES} = [ ]</msg>
<var>@{CNC_SWIM_IMAGES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.016478" level="INFO">${myurl} = /crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/</msg>
<var>${myurl}</var>
<arg>/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.017485" level="INFO">${payload} = {}</msg>
<var>${payload}</var>
<arg>{}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.001007"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.017485" level="INFO">${payload_json} = {}</msg>
<var>${payload_json}</var>
<arg>json.loads($payload)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:37.017485" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:37.155362" level="INFO">GET Request : url=https://198.18.134.219:30603/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 path_url=/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '2'} 
 body=b'{}' 
 </msg>
<msg time="2024-12-12T15:58:37.155362" level="INFO">GET Response : url=https://198.18.134.219:30603/crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository/ 
 status=206, reason=Partial Content 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:37 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Cache-Control': 'must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Content-Range': 'items=0-0/0', 'Pragma': 'must-revalidate', 'X-Ratelimit-Limit': '-1', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'Server': 'Webserver', 'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload', 'X-Frame-Options': 'deny', 'X-Content-Type-Options': 'nosniff', 'X-XSS-Protection': '1; mode=block', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body={"softwareImageListDTO":{"id":"imageId","totalCount":0}} 
 </msg>
<msg time="2024-12-12T15:58:37.159369" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:37.159369" level="INFO">${response} = &lt;Response [206]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=206</arg>
<arg>json=${payload_json}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:37.017485" elapsed="0.141884"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.160603" level="INFO">${json_response} = {'softwareImageListDTO': {'id': 'imageId', 'totalCount': 0}}</msg>
<var>${json_response}</var>
<arg>json.loads($response.text)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.160603" level="INFO">@{CNC_SWIM_IMAGES} = [ ]</msg>
<var>@{CNC_SWIM_IMAGES}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.160603" level="INFO">@{CNC_NODES_HEALTH} = [ ]</msg>
<var>@{CNC_NODES_HEALTH}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.160603" level="INFO">@{FIELDS} = [ name | imageName | version | family | vendor | imagePlatform ]</msg>
<var>@{FIELDS}</var>
<arg>name</arg>
<arg>imageName</arg>
<arg>version</arg>
<arg>family</arg>
<arg>vendor</arg>
<arg>imagePlatform</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.160603" level="INFO">${MSG} = --CNC Images--
</msg>
<arg>${MSG}</arg>
<arg>--CNC Images--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.161630" level="INFO">${count} = 0</msg>
<var>${count}</var>
<arg>${json_response['softwareImageListDTO']['totalCount']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.160603" elapsed="0.001027"/>
</kw>
<if>
<branch type="IF" condition="${count} &gt; 0">
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${data}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<var>${key}</var>
<arg>${data['name']}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Variable" owner="BuiltIn">
<var>${search}</var>
<arg>$.${item}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<kw name="Get Value From Json" owner="JSONLibrary">
<var>${values}</var>
<arg>${data}</arg>
<arg>${search}</arg>
<doc>Get Value From JSON using JSONPath</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${key}|${item}:${values}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${CNC_SWIM_IMAGES}</arg>
<arg>${key}|${item}:${values}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{FIELDS}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</for>
<var name="${data}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</iter>
<var>${data}</var>
<value>@{json_response['softwareImageListDTO']['items']}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</for>
<status status="NOT RUN" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</branch>
<branch type="ELSE">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.161630" level="INFO">${MSG} = --CNC Images--
Image Count:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}Image Count:${count}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.161630" elapsed="0.000000"/>
</if>
<kw name="Set Suite Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.162602" level="INFO">${CNC_SWIM_IMAGES} = []</msg>
<arg>${CNC_SWIM_IMAGES}</arg>
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.162602" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.162602" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Retrieves CNC SWIM/Image info from /crosswork/rs/json/SwimRepositoryRestService/getImagesForRepository</doc>
<status status="PASS" start="2024-12-12T15:58:37.016478" elapsed="0.146124"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.162602" level="INFO">Set test message to:
--CNC Images--
Image Count:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.162602" elapsed="0.000000"/>
</kw>
<doc>Find Software Images (SWIM)</doc>
<tag>DATA-COLLECTION</tag>
<tag>SWIM</tag>
<status status="PASS" start="2024-12-12T15:58:37.014467" elapsed="0.148135">--CNC Images--
Image Count:0
</status>
</test>
<test id="s1-t23" name="Validate CNC Data Gateway" line="192">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.164601" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.163601" elapsed="0.001000"/>
</kw>
<kw name="validate-cnc-cdg" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.164601" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.164601" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.165601" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.164601" elapsed="0.001000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.165601" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.165601" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.165601" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.165601" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.166601" level="INFO">${LoadData} = ['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED
['cdg1...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.001000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.166601" level="INFO">${RESP} = ('PASS', "['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)\n['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP\n['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXT...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.165601" elapsed="0.001000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.166601" level="INFO">${MSG} = --Validate CDG--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.166601" level="INFO">${appsVALID} = ['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)
['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP
['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED
['cdg1...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.166601" level="INFO">9 lines returned</msg>
<msg time="2024-12-12T15:58:37.166601" level="INFO">@{appsVALID} = [ ['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19) | ['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP | ['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED ...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.167620" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.001019"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.167620" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19)</var>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.167620" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.168621" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.001001"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP</var>
<status status="PASS" start="2024-12-12T15:58:37.167620" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.168621" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.168621" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED</var>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000983"/>
</kw>
<msg time="2024-12-12T15:58:37.169604" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000983"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.169604" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:cpu:20</var>
<status status="PASS" start="2024-12-12T15:58:37.168621" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.169604" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000997"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.170601" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:memory:110</var>
<status status="PASS" start="2024-12-12T15:58:37.169604" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.170601" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.170601" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:nics:3</var>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.001019"/>
</kw>
<msg time="2024-12-12T15:58:37.171620" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.001019"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.171620" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:name:['eth0', 'eth1', 'eth2']</var>
<status status="PASS" start="2024-12-12T15:58:37.170601" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.171620" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.172619" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:inetAddr:['198.18.134.230', '198.18.2.230']</var>
<status status="PASS" start="2024-12-12T15:58:37.171620" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.172619" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.172619" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:mask:['18', '24']</var>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.006018"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.006018"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.166601" elapsed="0.006018"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.172619" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.172619" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.172619" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.172619" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.172619" level="INFO">List length is 9 and it contains following items:
0: PASS:['cdg1.demo.dcloud.cisco.com']:version:7.0.0 (branch release700 - build number 19):App found in validation list, but not in system
1: PASS:['cdg1.demo.dcloud.cisco.com']:adminState:AS_UP:App found in validation list, but not in system
2: PASS:['cdg1.demo.dcloud.cisco.com']:profileType:VM_PROFILE_EXTENDED:App found in validation list, but not in system
3: PASS:['cdg1.demo.dcloud.cisco.com']:cpu:20:App found in validation list, but not in system
4: PASS:['cdg1.demo.dcloud.cisco.com']:memory:110:App found in validation list, but not in system
5: PASS:['cdg1.demo.dcloud.cisco.com']:nics:3:App found in validation list, but not in system
6: PASS:['cdg1.demo.dcloud.cisco.com']:name:['eth0', 'eth1', 'eth2']:App found in validation list, but not in system
7: PASS:['cdg1.demo.dcloud.cisco.com']:inetAddr:['198.18.134.230', '198.18.2.230']:App found in validation list, but not in system
8: PASS:['cdg1.demo.dcloud.cisco.com']:mask:['18', '24']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.172619" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.172619" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CDG configuration</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.172619" elapsed="0.001529"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.174148" level="INFO">${MSG} = --Validate CDG--

All configuration validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll configuration validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.174148" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.174148" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway configuration based on the suite variable of ``CNC_DATAGW``</doc>
<status status="PASS" start="2024-12-12T15:58:37.164601" elapsed="0.009547"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.174148" level="INFO">Set test message to:
--Validate CDG--

All configuration validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.174148" elapsed="0.000000"/>
</kw>
<doc>Validate the configured DGW is correct as per file spec [cnc-cdg.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.163601" elapsed="0.010547">--Validate CDG--

All configuration validated:0 Errors.
</status>
</test>
<test id="s1-t24" name="Validate CNC Data Gateway Pools" line="199">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.175164" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.175164" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-cdg-pools" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.176183" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.176183" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.176183" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.176183" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.176183" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.176183" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg-pools.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg-pools.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.176183" level="INFO">${LoadData} = ['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-pools.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.001385"/>
</kw>
<msg time="2024-12-12T15:58:37.177568" level="INFO">${RESP} = ('PASS', "['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']\n['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']\n['CDG_Pool_1-1']:mask:['24', '24']\n['CDG_Pool_1-1']:gateway:['198.18....</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-pools.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.001385"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.177568" level="INFO">${MSG} = --Validate CDG Pools--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG Pools--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.177568" level="INFO">${appsVALID} = ['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']
['CDG_Pool_1-1']:mask:['24', '24']
['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.177568" level="INFO">4 lines returned</msg>
<msg time="2024-12-12T15:58:37.177568" level="INFO">@{appsVALID} = [ ['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220'] | ['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220'] | ['CDG_Pool_1-1']:mask:['24', '24'] | ['CDG_Pool_1-1']:gateway:['198.18.1.1',...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.177568" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.001004"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.178572" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000000"/>
</kw>
<var name="${item}">['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']</var>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.178572" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.179571" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<var name="${item}">['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']</var>
<status status="PASS" start="2024-12-12T15:58:37.178572" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.179571" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.179571" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</kw>
<var name="${item}">['CDG_Pool_1-1']:mask:['24', '24']</var>
<status status="PASS" start="2024-12-12T15:58:37.179571" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.180572" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_POOL}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.180572" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<var name="${item}">['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18.1.1', '198.18.1.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.003004"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.003004"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.177568" elapsed="0.003004"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.180572" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.180572" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.180572" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.180572" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.180572" level="INFO">List length is 4 and it contains following items:
0: PASS:['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']:App found in validation list, but not in system
1: PASS:['CDG_Pool_1-1']:inetAddr:['198.18.1.220', '198.18.1.220']:App found in validation list, but not in system
2: PASS:['CDG_Pool_1-1']:mask:['24', '24']:App found in validation list, but not in system
3: PASS:['CDG_Pool_1-1']:gateway:['198.18.1.1', '198.18.1.1', '198.18.1.1']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.180572" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.181571" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.181571" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CDG pool configuration</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.181571" level="INFO">${MSG} = --Validate CDG Pools--

All configuration validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll configuration validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.181571" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway pool configuration based on the suite variable of ``CNC_DATAGW_POOL``</doc>
<status status="PASS" start="2024-12-12T15:58:37.176183" elapsed="0.005388"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.181571" level="INFO">Set test message to:
--Validate CDG Pools--

All configuration validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.181571" elapsed="0.000000"/>
</kw>
<doc>Validate the configured CDG Pool is correct as per file spec [cnc-cdg-pools.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.175164" elapsed="0.007426">--Validate CDG Pools--

All configuration validated:0 Errors.
</status>
</test>
<test id="s1-t25" name="Validate CNC Data Gateway Health" line="206">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.183606" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.182590" elapsed="0.001016"/>
</kw>
<kw name="validate-cnc-cdg-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.183606" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.183606" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.183606" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.183606" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.184572" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.184572" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.184572" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.184572" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg-health.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-cdg-health.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.184572" level="INFO">${LoadData} = ['cdg1.demo.dcloud.cisco.com']:operState:OS_UP</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-health.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.185596" level="INFO">${RESP} = ('PASS', "['cdg1.demo.dcloud.cisco.com']:operState:OS_UP")</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-cdg-health.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.184572" elapsed="0.001024"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.185596" level="INFO">${MSG} = --Validate CDG Health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CDG Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.185596" level="INFO">${appsVALID} = ['cdg1.demo.dcloud.cisco.com']:operState:OS_UP</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.185596" level="INFO">1 lines returned</msg>
<msg time="2024-12-12T15:58:37.185596" level="INFO">@{appsVALID} = [ ['cdg1.demo.dcloud.cisco.com']:operState:OS_UP ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.185596" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DATAGW_OPER}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000993"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.186589" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<var name="${item}">['cdg1.demo.dcloud.cisco.com']:operState:OS_UP</var>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000993"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000993"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000993"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.185596" elapsed="0.000993"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.186589" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.186589" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.186589" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.186589" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.186589" level="INFO">List has one item:
PASS:['cdg1.demo.dcloud.cisco.com']:operState:OS_UP:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.186589" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.186589" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.186589" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CDG health</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.187590" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.187590" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.187590" level="INFO">${MSG} = --Validate CDG Health--

All configuration validated:0 Errors</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll configuration validated:${FAIL_COUNT} Errors</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.187590" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.187590" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the data gateway health on the suite variable of ``CNC_DATAGW_OPER``</doc>
<status status="PASS" start="2024-12-12T15:58:37.183606" elapsed="0.003984"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.187590" level="INFO">Set test message to:
--Validate CDG Health--

All configuration validated:0 Errors
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.187590" elapsed="0.000000"/>
</kw>
<doc>Validate the operational state of the CDG(s) as per file spec [cnc-cdg-health.txt]</doc>
<tag>DATA_GATEWAY</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.182590" elapsed="0.005000">--Validate CDG Health--

All configuration validated:0 Errors
</status>
</test>
<test id="s1-t26" name="Validate CNC Entitlements" line="213">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.188572" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.188572" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-entitlement" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.189584" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.189584" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.189584" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.189584" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.189584" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-entitlements.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-entitlements.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.190590" level="INFO">${LoadData} = Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'C...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.001006"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-entitlements.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.001006"/>
</kw>
<msg time="2024-12-12T15:58:37.190590" level="INFO">${RESP} = ('PASS', "Service Health|name:['CAA_RTM']\nService Health|version:['1.0']\nCrosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWA...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-entitlements.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.001006"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.190590" level="INFO">${MSG} = --Validate CNC Entitlements--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Entitlements--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.190590" level="INFO">${appsVALID} = Service Health|name:['CAA_RTM']
Service Health|version:['1.0']
Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'C...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.190590" level="INFO">10 lines returned</msg>
<msg time="2024-12-12T15:58:37.190590" level="INFO">@{appsVALID} = [ Service Health|name:['CAA_RTM'] | Service Health|version:['1.0'] | Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RT...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.191572" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000982"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.191572" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<var name="${item}">Service Health|name:['CAA_RTM']</var>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.191572" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.191572" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<var name="${item}">Service Health|version:['1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.191572" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.193096" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-12T15:58:37.191572" elapsed="0.001524"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.193096" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.001035"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.194131" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.193096" elapsed="0.001035"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.194131" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.195142" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.001011"/>
</kw>
<var name="${item}">Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']</var>
<status status="PASS" start="2024-12-12T15:58:37.194131" elapsed="0.001011"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.195142" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.195142" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.195142" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.001017"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.196159" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<var name="${item}">Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-12T15:58:37.195142" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.196159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.196159" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000983"/>
</kw>
<var name="${item}">Health Insights and Change Automation|version:['1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.196159" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.197142" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.197142" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']</var>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.001017"/>
</kw>
<msg time="2024-12-12T15:58:37.198159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_ENTITLEMENTS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.001017"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.198159" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.000000"/>
</kw>
<var name="${item}">Crosswork Platform Services|version:['1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.197142" elapsed="0.001017"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.007569"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.007569"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.190590" elapsed="0.007569"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.198159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.198159" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.001002"/>
</if>
<var name="${item}">Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']</var>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.199161" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</if>
<var name="${item}">Crosswork Platform Services|version:['1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.199161" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.199161" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000982"/>
</if>
<var name="${item}">Service Health|name:['CAA_RTM']</var>
<status status="PASS" start="2024-12-12T15:58:37.199161" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.200143" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</if>
<var name="${item}">Service Health|version:['1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.001018"/>
</kw>
<msg time="2024-12-12T15:58:37.201161" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.001018"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</if>
<var name="${item}">Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']</var>
<status status="PASS" start="2024-12-12T15:58:37.200143" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.201161" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</if>
<var name="${item}">Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000998"/>
</kw>
<msg time="2024-12-12T15:58:37.202159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</if>
<var name="${item}">Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-12T15:58:37.201161" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.202159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</if>
<var name="${item}">Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.203159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</if>
<var name="${item}">Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']</var>
<status status="PASS" start="2024-12-12T15:58:37.202159" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.203159" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}WARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</if>
<var name="${item}">Health Insights and Change Automation|version:['1.0', '1.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_ENTITLEMENTS}</value>
<status status="PASS" start="2024-12-12T15:58:37.198159" elapsed="0.005000"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.203159" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.204159" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.203159" elapsed="0.001000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.204159" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.204159" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.204159" level="INFO">List length is 10 and it contains following items:
0: PASS:Service Health|name:['CAA_RTM']:App found in validation list, but not in system
1: PASS:Service Health|version:['1.0']:App found in validation list, but not in system
2: PASS:Crosswork Network Controller|name:['CNC_RTU', 'CNC_GEO_RTU', 'CNC-ERTM-SMALL', 'CNC_ARTM_SMALL', 'CW_EXTERNAL_COLLECT', 'NTWAUTO_RTM', 'CNC_CAHI_RTU']:App found in validation list, but not in system
3: PASS:Crosswork Network Controller|version:['1.0', '1.0', '1.0', '1.0', '1.0', '1.0', '1.0']:App found in validation list, but not in system
4: PASS:Crosswork Optimization Engine|name:['OPTM-RTM-ESS', 'OPTM-RTU-FP-BW', 'OPTM-RTM-ADV', 'OPTM-RTU-SVR']:App found in validation list, but not in system
5: PASS:Crosswork Optimization Engine|version:['1.0', '1.0', '1.0', '1.0']:App found in validation list, but not in system
6: PASS:Health Insights and Change Automation|name:['NTWAUTO_RTM', 'CNC_CAHI_RTU']:App found in validation list, but not in system
7: PASS:Health Insights and Change Automation|version:['1.0', '1.0']:App found in validation list, but not in system
8: PASS:Crosswork Platform Services|name:['CW_EXTERNAL_COLLECT']:App found in validation list, but not in system
9: PASS:Crosswork Platform Services|version:['1.0']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.204159" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.204159" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC entitlements</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.204159" level="INFO">${MSG} = --Validate CNC Entitlements--

All entitlements validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll entitlements validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.204159" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.204159" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC entitlements based on the suite variable of ``CNC_ENTITLEMENTS``</doc>
<status status="PASS" start="2024-12-12T15:58:37.189584" elapsed="0.014575"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.205169" level="INFO">Set test message to:
--Validate CNC Entitlements--

All entitlements validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.205169" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Entitlements and RTM as per file spec [cnc-entitlements.txt]</doc>
<tag>LICENSING</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.188572" elapsed="0.016597">--Validate CNC Entitlements--

All entitlements validated:0 Errors.
</status>
</test>
<test id="s1-t27" name="Validate Platform Summary" line="220">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.206142" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.206142" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-platform" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.207142" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.207142" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.207142" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.207142" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.207142" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-platform.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-platform.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.208161" level="INFO">${LoadData} = SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataVIP:['198.18.2.219']
Dat...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.001019"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-platform.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.001019"/>
</kw>
<msg time="2024-12-12T15:58:37.208161" level="INFO">${RESP} = ('PASS', "SchemaVersion:['7.0.0']\nCNC_VM_Image:[]\nClusterIPStack:['IPv4']\nManagementVIP:['198.18.134.219']\nManagementIPNetmask:['255.255.192.0']\nManagementIPGateway:['198.18.128.1']\nDataVIP:['19...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-platform.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.207142" elapsed="0.001019"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.208161" level="INFO">${MSG} = --Validate CNC Platform--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Platform--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.208161" level="INFO">${appsVALID} = SchemaVersion:['7.0.0']
CNC_VM_Image:[]
ClusterIPStack:['IPv4']
ManagementVIP:['198.18.134.219']
ManagementIPNetmask:['255.255.192.0']
ManagementIPGateway:['198.18.128.1']
DataVIP:['198.18.2.219']
Dat...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.208161" level="INFO">15 lines returned</msg>
<msg time="2024-12-12T15:58:37.208161" level="INFO">@{appsVALID} = [ SchemaVersion:['7.0.0'] | CNC_VM_Image:[] | ClusterIPStack:['IPv4'] | ManagementVIP:['198.18.134.219'] | ManagementIPNetmask:['255.255.192.0'] | ManagementIPGateway:['198.18.128.1'] | DataVIP:['198....</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.208161" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.208161" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</kw>
<var name="${item}">SchemaVersion:['7.0.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.209685" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.209685" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<var name="${item}">CNC_VM_Image:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.209685" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.001045"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.210730" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<var name="${item}">ClusterIPStack:['IPv4']</var>
<status status="PASS" start="2024-12-12T15:58:37.209685" elapsed="0.001045"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.210730" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.211716" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementVIP:['198.18.134.219']</var>
<status status="PASS" start="2024-12-12T15:58:37.210730" elapsed="0.000986"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.211716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.211716" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPNetmask:['255.255.192.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000999"/>
</kw>
<msg time="2024-12-12T15:58:37.212715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.212715" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<var name="${item}">ManagementIPGateway:['198.18.128.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.211716" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.212715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.213715" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<var name="${item}">DataVIP:['198.18.2.219']</var>
<status status="PASS" start="2024-12-12T15:58:37.212715" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.213715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.213715" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPNetmask:['255.255.255.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.213715" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.214717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.214717" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<var name="${item}">DataIPGateway:['198.18.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.214717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.001001"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.215718" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<var name="${item}">DomainName:['demo.dcloud.cisco.com']</var>
<status status="PASS" start="2024-12-12T15:58:37.214717" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.215718" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.215718" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000000"/>
</kw>
<var name="${item}">NTP:['ntp.demo.dcloud.cisco.com']</var>
<status status="PASS" start="2024-12-12T15:58:37.215718" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.216716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.216716" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</kw>
<var name="${item}">DNS:['198.18.133.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.217716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.217716" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<var name="${item}">RamDiskSize:[4]</var>
<status status="PASS" start="2024-12-12T15:58:37.216716" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.217716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.218715" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<var name="${item}">ThinProvisioned:[True]</var>
<status status="PASS" start="2024-12-12T15:58:37.217716" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.218715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PLATFORM}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.218715" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</kw>
<var name="${item}">Timezone:['']</var>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.010554"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.010554"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.208161" elapsed="0.010554"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.219715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</if>
<var name="${item}">SchemaVersion:['7.0.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.219715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.219715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.219715" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.001002"/>
</if>
<var name="${item}">CNC_VM_Image:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.219715" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.220717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</if>
<var name="${item}">ClusterIPStack:['IPv4']</var>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.220717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</if>
<var name="${item}">ManagementVIP:['198.18.134.219']</var>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.220717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.220717" elapsed="0.001506"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.001506"/>
</if>
<var name="${item}">ManagementIPNetmask:['255.255.192.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.220717" elapsed="0.001506"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.222223" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</if>
<var name="${item}">ManagementIPGateway:['198.18.128.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.222223" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.222223" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.001022"/>
</if>
<var name="${item}">DataVIP:['198.18.2.219']</var>
<status status="PASS" start="2024-12-12T15:58:37.222223" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.223245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</if>
<var name="${item}">DataIPNetmask:['255.255.255.0']</var>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.223245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.223245" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.001000"/>
</if>
<var name="${item}">DataIPGateway:['198.18.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.223245" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.224245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</if>
<var name="${item}">DomainName:['demo.dcloud.cisco.com']</var>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.224245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.224245" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000999"/>
</if>
<var name="${item}">NTP:['ntp.demo.dcloud.cisco.com']</var>
<status status="PASS" start="2024-12-12T15:58:37.224245" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.225244" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</if>
<var name="${item}">DNS:['198.18.133.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.225244" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.226259" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.225244" elapsed="0.001015"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.001015"/>
</if>
<var name="${item}">RamDiskSize:[4]</var>
<status status="PASS" start="2024-12-12T15:58:37.225244" elapsed="0.001015"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226259" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.226259" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226259" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.226259" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.226259" elapsed="0.000510"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.226259" elapsed="0.000510"/>
</if>
<var name="${item}">ThinProvisioned:[True]</var>
<status status="PASS" start="2024-12-12T15:58:37.226259" elapsed="0.000510"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.226769" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</if>
<var name="${item}">Timezone:['']</var>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_PLATFORM}</value>
<status status="PASS" start="2024-12-12T15:58:37.218715" elapsed="0.008054"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.226769" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.226769" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.226769" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.226769" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.227772" level="INFO">List length is 15 and it contains following items:
0: PASS:SchemaVersion:['7.0.0']:App found in validation list, but not in system
1: PASS:CNC_VM_Image:[]:App found in validation list, but not in system
2: PASS:ClusterIPStack:['IPv4']:App found in validation list, but not in system
3: PASS:ManagementVIP:['198.18.134.219']:App found in validation list, but not in system
4: PASS:ManagementIPNetmask:['255.255.192.0']:App found in validation list, but not in system
5: PASS:ManagementIPGateway:['198.18.128.1']:App found in validation list, but not in system
6: PASS:DataVIP:['198.18.2.219']:App found in validation list, but not in system
7: PASS:DataIPNetmask:['255.255.255.0']:App found in validation list, but not in system
8: PASS:DataIPGateway:['198.18.2.1']:App found in validation list, but not in system
9: PASS:DomainName:['demo.dcloud.cisco.com']:App found in validation list, but not in system
10: PASS:NTP:['ntp.demo.dcloud.cisco.com']:App found in validation list, but not in system
11: PASS:DNS:['198.18.133.1']:App found in validation list, but not in system
12: PASS:RamDiskSize:[4]:App found in validation list, but not in system
13: PASS:ThinProvisioned:[True]:App found in validation list, but not in system
14: PASS:Timezone:['']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.226769" elapsed="0.001003"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.227772" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.227772" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.227772" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.227772" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC Platform configuration.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.227772" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.227772" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.227772" level="INFO">${MSG} = --Validate CNC Platform--

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.227772" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.227772" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the platform spec based on the suite variable of ``CNC_PLATFORM``</doc>
<status status="PASS" start="2024-12-12T15:58:37.206142" elapsed="0.021630"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.228775" level="INFO">Set test message to:
--Validate CNC Platform--

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.228775" elapsed="0.000000"/>
</kw>
<doc>Validate key information on CNC Platform and hosting as per file spec [cnc-platform.txt]</doc>
<tag>PASS</tag>
<tag>PLATFORM</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.205169" elapsed="0.023606">--Validate CNC Platform--

All tests passed. Failures:0
</status>
</test>
<test id="s1-t28" name="Validate CNC Versions" line="227">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.229775" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.229775" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-app-versions" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.230798" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.230798" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.230798" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.230798" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.230798" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.231793" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-apps.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-apps.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.231793" level="INFO">${LoadData} = capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-apps.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.231793" level="INFO">${RESP} = ('PASS', 'capp-ca:7.0.0-rc.62+build.65\ncapp-hi:7.0.0-rc.60+build.62\ncapp-common-ems-services:7.0.0-rc.760+build.767\ncapp-aa:7.0.0-rc.71+build.77\ncapp-cat:7.0.0-rc.65+build.68\ncapp-coe:7.0.0-rc.73...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-apps.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.231793" level="INFO">${MSG} = --Validate CNC app versions--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC app versions--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.232794" level="INFO">${appsVALID} = capp-ca:7.0.0-rc.62+build.65
capp-hi:7.0.0-rc.60+build.62
capp-common-ems-services:7.0.0-rc.760+build.767
capp-aa:7.0.0-rc.71+build.77
capp-cat:7.0.0-rc.65+build.68
capp-coe:7.0.0-rc.73+build.78
capp-...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.232794" level="INFO">7 lines returned</msg>
<msg time="2024-12-12T15:58:37.232794" level="INFO">@{appsVALID} = [ capp-ca:7.0.0-rc.62+build.65 | capp-hi:7.0.0-rc.60+build.62 | capp-common-ems-services:7.0.0-rc.760+build.767 | capp-aa:7.0.0-rc.71+build.77 | capp-cat:7.0.0-rc.65+build.68 | capp-coe:7.0.0-rc.73+bu...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.232794" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.233776" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000982"/>
</kw>
<var name="${item}">capp-ca:7.0.0-rc.62+build.65</var>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.233776" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.233776" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-hi:7.0.0-rc.60+build.62</var>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.233776" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.234793" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-common-ems-services:7.0.0-rc.760+build.767</var>
<status status="PASS" start="2024-12-12T15:58:37.233776" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.234793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.235793" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-aa:7.0.0-rc.71+build.77</var>
<status status="PASS" start="2024-12-12T15:58:37.234793" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.235793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.235793" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-cat:7.0.0-rc.65+build.68</var>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.236797" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.001004"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.236797" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-coe:7.0.0-rc.73+build.78</var>
<status status="PASS" start="2024-12-12T15:58:37.235793" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.236797" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_APP_VERSIONS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.237776" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<var name="${item}">capp-infra:7.0.0-rc.73+build.85</var>
<status status="PASS" start="2024-12-12T15:58:37.236797" elapsed="0.000979"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.232794" elapsed="0.004982"/>
</for>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.237776" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</if>
<var name="${item}">capp-ca:7.0.0-rc.62+build.65</var>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.001016"/>
</kw>
<msg time="2024-12-12T15:58:37.238792" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.001016"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</if>
<var name="${item}">capp-hi:7.0.0-rc.60+build.62</var>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.001016"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.238792" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</if>
<var name="${item}">capp-common-ems-services:7.0.0-rc.760+build.767</var>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.239793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</if>
<var name="${item}">capp-aa:7.0.0-rc.71+build.77</var>
<status status="PASS" start="2024-12-12T15:58:37.238792" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.239793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</if>
<var name="${item}">capp-cat:7.0.0-rc.65+build.68</var>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.240793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</if>
<var name="${item}">capp-coe:7.0.0-rc.73+build.78</var>
<status status="PASS" start="2024-12-12T15:58:37.239793" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.240793" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</if>
<var name="${item}">capp-infra:7.0.0-rc.73+build.85</var>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_APP_VERSIONS}</value>
<status status="PASS" start="2024-12-12T15:58:37.237776" elapsed="0.003017"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.009000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.231793" elapsed="0.009000"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.240793" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.241794" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.240793" elapsed="0.001001"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.241794" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.241794" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.241794" level="INFO">List length is 7 and it contains following items:
0: PASS:capp-ca:7.0.0-rc.62+build.65:App found in validation list, but not in system
1: PASS:capp-hi:7.0.0-rc.60+build.62:App found in validation list, but not in system
2: PASS:capp-common-ems-services:7.0.0-rc.760+build.767:App found in validation list, but not in system
3: PASS:capp-aa:7.0.0-rc.71+build.77:App found in validation list, but not in system
4: PASS:capp-cat:7.0.0-rc.65+build.68:App found in validation list, but not in system
5: PASS:capp-coe:7.0.0-rc.73+build.78:App found in validation list, but not in system
6: PASS:capp-infra:7.0.0-rc.73+build.85:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.241794" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.241794" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC App versions.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.241794" level="INFO">${MSG} = --Validate CNC app versions--

All versions validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll versions validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.241794" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.241794" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC application versions based on the suite variable of ``CNC_APP_VERSIONS``</doc>
<status status="PASS" start="2024-12-12T15:58:37.230798" elapsed="0.011996"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.242794" level="INFO">Set test message to:
--Validate CNC app versions--

All versions validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.242794" elapsed="0.000000"/>
</kw>
<doc>Validate the configured CNC products are correct as per file spec [cnc-apps.txt]</doc>
<tag>APPLICATIONS</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.229775" elapsed="0.013019">--Validate CNC app versions--

All versions validated:0 Errors.
</status>
</test>
<test id="s1-t29" name="Validate NSO Service Types" line="234">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.244000" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.244000" elapsed="0.000000"/>
</kw>
<kw name="validate-nso-service-types" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.245005" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.245005" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.245005" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.245005" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.245005" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.246003" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-nso-service-types.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-nso-service-types.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.246003" level="INFO">${LoadData} = TRANSPORT:Tunnel
TRANSPORT:ODN-Template
TRANSPORT:Policy
TRANSPORT:Circuit-Style Policy
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000998"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-nso-service-types.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000998"/>
</kw>
<msg time="2024-12-12T15:58:37.246003" level="INFO">${RESP} = ('PASS', 'TRANSPORT:Tunnel\nTRANSPORT:ODN-Template\nTRANSPORT:Policy\nTRANSPORT:Circuit-Style Policy\nNETWORK_SLICE:NSS\nVPN:L3VPN-Service\nVPN:L2VPN-Service')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-nso-service-types.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.245005" elapsed="0.000998"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.246003" level="INFO">${MSG} = --Validate CNC NSO Service Types--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC NSO Service Types--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.246003" level="INFO">${appsVALID} = TRANSPORT:Tunnel
TRANSPORT:ODN-Template
TRANSPORT:Policy
TRANSPORT:Circuit-Style Policy
NETWORK_SLICE:NSS
VPN:L3VPN-Service
VPN:L2VPN-Service</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.246003" level="INFO">7 lines returned</msg>
<msg time="2024-12-12T15:58:37.246003" level="INFO">@{appsVALID} = [ TRANSPORT:Tunnel | TRANSPORT:ODN-Template | TRANSPORT:Policy | TRANSPORT:Circuit-Style Policy | NETWORK_SLICE:NSS | VPN:L3VPN-Service | VPN:L2VPN-Service ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.001001"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.247004" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.247004" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:Tunnel</var>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.247004" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.001017"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.248021" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<var name="${item}">TRANSPORT:ODN-Template</var>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.248021" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.249021" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.001000"/>
</kw>
<var name="${item}">TRANSPORT:Policy</var>
<status status="PASS" start="2024-12-12T15:58:37.248021" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.249021" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.250021" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.001000"/>
</kw>
<var name="${item}">TRANSPORT:Circuit-Style Policy</var>
<status status="PASS" start="2024-12-12T15:58:37.249021" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.250021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.250021" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.250021" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.250021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.250021" elapsed="0.000983"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.251004" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<var name="${item}">NETWORK_SLICE:NSS</var>
<status status="PASS" start="2024-12-12T15:58:37.250021" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.251004" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.251004" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</kw>
<var name="${item}">VPN:L3VPN-Service</var>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.252003" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICE_TYPES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.252003" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<var name="${item}">VPN:L2VPN-Service</var>
<status status="PASS" start="2024-12-12T15:58:37.251004" elapsed="0.000999"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.247004" elapsed="0.004999"/>
</for>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.252003" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.252003" elapsed="0.001014"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.001014"/>
</if>
<var name="${item}">TRANSPORT:Tunnel</var>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.253017" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</if>
<var name="${item}">TRANSPORT:ODN-Template</var>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.253017" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.253017" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.001006"/>
</if>
<var name="${item}">NETWORK_SLICE:NSS</var>
<status status="PASS" start="2024-12-12T15:58:37.253017" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.254023" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</if>
<var name="${item}">VPN:L3VPN-Service</var>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.254023" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.254023" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000998"/>
</if>
<var name="${item}">VPN:L2VPN-Service</var>
<status status="PASS" start="2024-12-12T15:58:37.254023" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.255021" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</if>
<var name="${item}">TRANSPORT:Circuit-Style Policy</var>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.255021" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</if>
<var name="${item}">TRANSPORT:Policy</var>
<status status="PASS" start="2024-12-12T15:58:37.255021" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_SERVICE_TYPES}</value>
<status status="PASS" start="2024-12-12T15:58:37.252003" elapsed="0.003018"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.009018"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.246003" elapsed="0.010018"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.256021" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.256021" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.256021" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.256021" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.256021" level="INFO">List length is 7 and it contains following items:
0: PASS:TRANSPORT:Tunnel:App found in validation list, but not in system
1: PASS:TRANSPORT:ODN-Template:App found in validation list, but not in system
2: PASS:TRANSPORT:Policy:App found in validation list, but not in system
3: PASS:TRANSPORT:Circuit-Style Policy:App found in validation list, but not in system
4: PASS:NETWORK_SLICE:NSS:App found in validation list, but not in system
5: PASS:VPN:L3VPN-Service:App found in validation list, but not in system
6: PASS:VPN:L2VPN-Service:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.256021" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.256021" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for NSO Service types</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.256021" level="INFO">${MSG} = --Validate CNC NSO Service Types--

All service types validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll service types validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.256021" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.256021" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO service types based on the suite variable of ``CNC_SERVICE_TYPES``</doc>
<status status="PASS" start="2024-12-12T15:58:37.244000" elapsed="0.012021"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.257021" level="INFO">Set test message to:
--Validate CNC NSO Service Types--

All service types validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.257021" elapsed="0.000000"/>
</kw>
<doc>Validate the available NSO service models are correct as per file spec [cnc-nso-service-types.txt]</doc>
<tag>NSO</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.242794" elapsed="0.014227">--Validate CNC NSO Service Types--

All service types validated:0 Errors.
</status>
</test>
<test id="s1-t30" name="Validate CNC/NSO Services" line="241">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.258021" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-services" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.258021" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.258021" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.258021" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.258021" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.259529" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.001508"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.259595" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-services.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-services.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.259595" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.259595" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.259595" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-services.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.259595" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.259595" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-services.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.259595" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.260534" level="INFO">${MSG} = --Validate CNC Services--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Services--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.260534" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.260534" level="INFO">0 lines returned</msg>
<msg time="2024-12-12T15:58:37.260534" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SERVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.260534" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.260534" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.260534" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.261553" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.261553" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.261553" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.261553" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.261553" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC Services</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.261553" level="INFO">${MSG} = --Validate CNC Services--

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.261553" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.261553" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO service types based on the suite variable of ``CNC_SERVICES``</doc>
<status status="PASS" start="2024-12-12T15:58:37.258021" elapsed="0.003532"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.262552" level="INFO">Set test message to:
--Validate CNC Services--

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.262552" elapsed="0.000000"/>
</kw>
<doc>Validate implemented networks services are correct as per the file spec [cnc-services.txt]</doc>
<tag>SERVICES</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.257021" elapsed="0.005531">--Validate CNC Services--

All tests passed. Failures:0
</status>
</test>
<test id="s1-t31" name="Validate CNC/NSO Transport" line="248">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.263533" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.262552" elapsed="0.000981"/>
</kw>
<kw name="validate-cnc-transport" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.263533" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.263533" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.264551" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.264551" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.264551" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.264551" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.264551" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-transport.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-transport.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.265550" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000999"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-transport.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000999"/>
</kw>
<msg time="2024-12-12T15:58:37.265550" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-transport.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.264551" elapsed="0.000999"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.265550" level="INFO">${MSG} = --Validate CNC Transport--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Transport--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.265550" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.265550" level="INFO">0 lines returned</msg>
<msg time="2024-12-12T15:58:37.265550" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_TRANSPORT}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.265550" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.265550" elapsed="0.001003"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.265550" elapsed="0.001003"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.001003"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.265550" elapsed="0.001003"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.266553" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.266553" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.266553" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.266553" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.266553" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.266553" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.266553" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC Transport services</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.266553" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.267538" level="INFO">${MSG} = --Validate CNC Transport--

All tests passed. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.267538" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.267538" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the running NSO transport services based on the suite variable of ``CNC_TRANSPORT``</doc>
<status status="PASS" start="2024-12-12T15:58:37.263533" elapsed="0.004005"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.267538" level="INFO">Set test message to:
--Validate CNC Transport--

All tests passed. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.267538" elapsed="0.000000"/>
</kw>
<doc>Validate implemented transport are correct as per the file spec [cnc-services.txt]</doc>
<tag>SERVICES</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.262552" elapsed="0.004986">--Validate CNC Transport--

All tests passed. Failures:0
</status>
</test>
<test id="s1-t32" name="Validate CNC Credentials" line="255">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.268559" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.268559" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-credentials" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.269551" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.269551" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.269551" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.269551" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.269551" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.269551" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-credentials.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-credentials.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.270551" level="INFO">${LoadData} = coe|user_name : ['admin']
coe|type : ['ROBOT_USERPASS_HTTPS']
demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']
demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.001000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-credentials.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.270551" level="INFO">${RESP} = ('PASS', "coe|user_name : ['admin']\ncoe|type : ['ROBOT_USERPASS_HTTPS']\ndemo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']\ndemo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TE...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-credentials.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.269551" elapsed="0.001000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.270551" level="INFO">${MSG} = --Validate Credentials--
</msg>
<arg>${MSG}</arg>
<arg>--Validate Credentials--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.270551" level="INFO">${appsVALID} = coe|user_name : ['admin']
coe|type : ['ROBOT_USERPASS_HTTPS']
demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']
demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.270551" level="INFO">18 lines returned</msg>
<msg time="2024-12-12T15:58:37.270551" level="INFO">@{appsVALID} = [ coe|user_name : ['admin'] | coe|type : ['ROBOT_USERPASS_HTTPS'] | demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco'] | demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET'...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.270551" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.271551" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<var name="${item}">coe|user_name : ['admin']</var>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.271551" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.272550" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<var name="${item}">coe|type : ['ROBOT_USERPASS_HTTPS']</var>
<status status="PASS" start="2024-12-12T15:58:37.271551" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.272550" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.272550" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<var name="${item}">demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']</var>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.272550" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.272550" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</kw>
<var name="${item}">demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT_USERPASS_ADMIN', 'ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTP', 'ROBOT_USERPASS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.274076" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.001526"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.274076" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<var name="${item}">csm|user_name : ['cw-admin']</var>
<status status="PASS" start="2024-12-12T15:58:37.272550" elapsed="0.001526"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.274076" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.001014"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.275090" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<var name="${item}">csm|type : ['ROBOT_USERPASS_SSH']</var>
<status status="PASS" start="2024-12-12T15:58:37.274076" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.275090" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.276091" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.001001"/>
</kw>
<var name="${item}">nso1|user_name : ['admin', 'admin', 'admin']</var>
<status status="PASS" start="2024-12-12T15:58:37.275090" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.276091" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.276091" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<var name="${item}">nso1|type : ['ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.276091" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.277265" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<var name="${item}">nso-syslog|user_name : ['cisco']</var>
<status status="PASS" start="2024-12-12T15:58:37.276091" elapsed="0.001174"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.277265" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.278289" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.001024"/>
</kw>
<var name="${item}">nso-syslog|type : ['ROBOT_USERPASS_SSH']</var>
<status status="PASS" start="2024-12-12T15:58:37.277265" elapsed="0.001024"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.278289" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.278289" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</kw>
<var name="${item}">external|user_name : ['cw-admin']</var>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.279286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.279286" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<var name="${item}">external|type : ['ROBOT_USERPASS_SSH']</var>
<status status="PASS" start="2024-12-12T15:58:37.278289" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.279286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.280285" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce|user_name : ['cisco', 'cisco']</var>
<status status="PASS" start="2024-12-12T15:58:37.279286" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.280285" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.280285" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.281286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.281286" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<var name="${item}">ca_device_auth_nso|user_name : ['cisco', 'cisco']</var>
<status status="PASS" start="2024-12-12T15:58:37.280285" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.281286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000983"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.282269" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<var name="${item}">ca_device_auth_nso|type : ['ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.281286" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.282269" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.282269" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</kw>
<var name="${item}">demo-cpe|user_name : ['cisco']</var>
<status status="PASS" start="2024-12-12T15:58:37.282269" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.283271" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_CREDENTIALS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.283271" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<var name="${item}">demo-cpe|type : ['ROBOT_USERPASS_SSH']</var>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.012720"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.012720"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.270551" elapsed="0.012720"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.283271" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.283271" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.283271" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.283271" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.283271" level="INFO">List length is 18 and it contains following items:
0: PASS:coe|user_name : ['admin']:App found in validation list, but not in system
1: PASS:coe|type : ['ROBOT_USERPASS_HTTPS']:App found in validation list, but not in system
2: PASS:demo|user_name : ['cisco', 'cisco', 'cisco', 'cisco', 'cisco', 'cisco']:App found in validation list, but not in system
3: PASS:demo|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_TELNET', 'ROBOT_USERPASS_ADMIN', 'ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTP', 'ROBOT_USERPASS_GNMI']:App found in validation list, but not in system
4: PASS:csm|user_name : ['cw-admin']:App found in validation list, but not in system
5: PASS:csm|type : ['ROBOT_USERPASS_SSH']:App found in validation list, but not in system
6: PASS:nso1|user_name : ['admin', 'admin', 'admin']:App found in validation list, but not in system
7: PASS:nso1|type : ['ROBOT_USERPASS_NETCONF', 'ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']:App found in validation list, but not in system
8: PASS:nso-syslog|user_name : ['cisco']:App found in validation list, but not in system
9: PASS:nso-syslog|type : ['ROBOT_USERPASS_SSH']:App found in validation list, but not in system
10: PASS:external|user_name : ['cw-admin']:App found in validation list, but not in system
11: PASS:external|type : ['ROBOT_USERPASS_SSH']:App found in validation list, but not in system
12: PASS:sr-pce|user_name : ['cisco', 'cisco']:App found in validation list, but not in system
13: PASS:sr-pce|type : ['ROBOT_USERPASS_SSH', 'ROBOT_USERPASS_HTTP']:App found in validation list, but not in system
14: PASS:ca_device_auth_nso|user_name : ['cisco', 'cisco']:App found in validation list, but not in system
15: PASS:ca_device_auth_nso|type : ['ROBOT_USERPASS_HTTPS', 'ROBOT_USERPASS_HTTP']:App found in validation list, but not in system
16: PASS:demo-cpe|user_name : ['cisco']:App found in validation list, but not in system
17: PASS:demo-cpe|type : ['ROBOT_USERPASS_SSH']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.283271" elapsed="0.001015"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.284286" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.284286" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.284286" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.284286" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for CNC Credential configuration.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.284286" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.284286" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.284286" level="INFO">${MSG} = --Validate Credentials--

All credentials validated. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll credentials validated. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.284286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.284286" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the application health based on the suite variable of ``CNC_CREDENTIALS``</doc>
<status status="PASS" start="2024-12-12T15:58:37.268559" elapsed="0.015727"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.285268" level="INFO">Set test message to:
--Validate Credentials--

All credentials validated. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.285268" elapsed="0.000000"/>
</kw>
<doc>Validate CNC credentials are correct as per the file spec [cnc-credentials.txt]</doc>
<tag>CREDENTIALS</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.267538" elapsed="0.017999">--Validate Credentials--

All credentials validated. Failures:0
</status>
</test>
<test id="s1-t33" name="Validate CNC Providers" line="262">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.286565" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.285537" elapsed="0.001028"/>
</kw>
<kw name="validate-cnc-providers" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.286565" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.286565" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.286565" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.286565" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.287588" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-providers.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-providers.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.287588" level="INFO">${LoadData} = nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_T...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-providers.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.287588" level="INFO">${RESP} = ('PASS', "nso201|profile:['nso1']\nnso201|connectivity_info..port:[2022, 8888, 8080]\nnso201|connectivity_info..timeout:['90', '90', '90']\nnso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', ...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-providers.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.001023"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.287588" level="INFO">${MSG} = --Validate CNC providers--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC providers--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.287588" level="INFO">${appsVALID} = nso201|profile:['nso1']
nso201|connectivity_info..port:[2022, 8888, 8080]
nso201|connectivity_info..timeout:['90', '90', '90']
nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_T...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.288584" level="INFO">20 lines returned</msg>
<msg time="2024-12-12T15:58:37.288584" level="INFO">@{appsVALID} = [ nso201|profile:['nso1'] | nso201|connectivity_info..port:[2022, 8888, 8080] | nso201|connectivity_info..timeout:['90', '90', '90'] | nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBO...</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.288584" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.288584" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</kw>
<var name="${item}">nso201|profile:['nso1']</var>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.001022"/>
</kw>
<msg time="2024-12-12T15:58:37.289606" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.001022"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.289606" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<var name="${item}">nso201|connectivity_info..port:[2022, 8888, 8080]</var>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.289606" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000981"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.290587" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<var name="${item}">nso201|connectivity_info..timeout:['90', '90', '90']</var>
<status status="PASS" start="2024-12-12T15:58:37.289606" elapsed="0.000981"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.290587" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.290587" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</kw>
<var name="${item}">nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_HTTPS', 'ROBOT_MSVC_TRANS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.291567" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.291567" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<var name="${item}">nso201|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '...</var>
<status status="PASS" start="2024-12-12T15:58:37.290587" elapsed="0.000980"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.291567" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.291567" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-09|profile:['sr-pce']</var>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.293072" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.001505"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.293072" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-09|connectivity_info..port:[8080]</var>
<status status="PASS" start="2024-12-12T15:58:37.291567" elapsed="0.001505"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.293072" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.294081" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-09|connectivity_info..timeout:['90']</var>
<status status="PASS" start="2024-12-12T15:58:37.293072" elapsed="0.001009"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.294081" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.295112" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.001031"/>
</kw>
<var name="${item}">sr-pce-09|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.294081" elapsed="0.001031"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.295112" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.295112" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-09|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}]]</var>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.296106" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000994"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.296106" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-10|profile:['sr-pce']</var>
<status status="PASS" start="2024-12-12T15:58:37.295112" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.296106" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000983"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.297089" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-10|connectivity_info..port:[8080]</var>
<status status="PASS" start="2024-12-12T15:58:37.296106" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.297089" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.297089" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-10|connectivity_info..timeout:['90']</var>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.001024"/>
</kw>
<msg time="2024-12-12T15:58:37.298113" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.001024"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.298113" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-10|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']</var>
<status status="PASS" start="2024-12-12T15:58:37.297089" elapsed="0.001024"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.298113" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000993"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.299106" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<var name="${item}">sr-pce-10|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}]]</var>
<status status="PASS" start="2024-12-12T15:58:37.298113" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.299106" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.299106" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</kw>
<var name="${item}">syslog|profile:['nso-syslog']</var>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000998"/>
</kw>
<msg time="2024-12-12T15:58:37.300104" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.300104" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<var name="${item}">syslog|connectivity_info..port:[22]</var>
<status status="PASS" start="2024-12-12T15:58:37.299106" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.300104" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.301104" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<var name="${item}">syslog|connectivity_info..timeout:['30']</var>
<status status="PASS" start="2024-12-12T15:58:37.300104" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.301104" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.301104" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</kw>
<var name="${item}">syslog|connectivity_info..type:['ROBOT_MSVC_TRANS_SSH']</var>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.302087" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_PROVIDERS}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000983"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.302087" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<var name="${item}">syslog|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]</var>
<status status="PASS" start="2024-12-12T15:58:37.301104" elapsed="0.000983"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.288584" elapsed="0.013503"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.014499"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.287588" elapsed="0.014499"/>
</if>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.302087" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.302087" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.302087" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.302087" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.302087" level="INFO">List length is 20 and it contains following items:
0: PASS:nso201|profile:['nso1']:App found in validation list, but not in system
1: PASS:nso201|connectivity_info..port:[2022, 8888, 8080]:App found in validation list, but not in system
2: PASS:nso201|connectivity_info..timeout:['90', '90', '90']:App found in validation list, but not in system
3: PASS:nso201|connectivity_info..type:['ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_HTTPS', 'ROBOT_MSVC_TRANS_HTTP']:App found in validation list, but not in system
4: PASS:nso201|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]:App found in validation list, but not in system
5: PASS:sr-pce-09|profile:['sr-pce']:App found in validation list, but not in system
6: PASS:sr-pce-09|connectivity_info..port:[8080]:App found in validation list, but not in system
7: PASS:sr-pce-09|connectivity_info..timeout:['90']:App found in validation list, but not in system
8: PASS:sr-pce-09|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']:App found in validation list, but not in system
9: PASS:sr-pce-09|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.9', 'mask': '32'}]]:App found in validation list, but not in system
10: PASS:sr-pce-10|profile:['sr-pce']:App found in validation list, but not in system
11: PASS:sr-pce-10|connectivity_info..port:[8080]:App found in validation list, but not in system
12: PASS:sr-pce-10|connectivity_info..timeout:['90']:App found in validation list, but not in system
13: PASS:sr-pce-10|connectivity_info..type:['ROBOT_MSVC_TRANS_HTTP']:App found in validation list, but not in system
14: PASS:sr-pce-10|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.10', 'mask': '32'}]]:App found in validation list, but not in system
15: PASS:syslog|profile:['nso-syslog']:App found in validation list, but not in system
16: PASS:syslog|connectivity_info..port:[22]:App found in validation list, but not in system
17: PASS:syslog|connectivity_info..timeout:['30']:App found in validation list, but not in system
18: PASS:syslog|connectivity_info..type:['ROBOT_MSVC_TRANS_SSH']:App found in validation list, but not in system
19: PASS:syslog|connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.134.28', 'mask': '32'}]]:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.302087" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.302087" elapsed="0.001043"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.303130" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.303130" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} provider(s) entries failed validation.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.303130" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.303130" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.303130" level="INFO">${MSG} = --Validate CNC providers--

All provider entries validated. Failures:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll provider entries validated. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.303130" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.303130" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC Providers (NSO,CDG etc) based on the suite variable of ``CNC_PROVIDERS``</doc>
<status status="PASS" start="2024-12-12T15:58:37.286565" elapsed="0.016565"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.303130" level="INFO">Set test message to:
--Validate CNC providers--

All provider entries validated. Failures:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.303130" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Providers are correct as per the file spec [cnc-providers.txt]</doc>
<tag>PASS</tag>
<tag>PROVIDERS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.285537" elapsed="0.017593">--Validate CNC providers--

All provider entries validated. Failures:0
</status>
</test>
<test id="s1-t34" name="Validate CNC Devices" line="269">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.305087" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.304113" elapsed="0.000974"/>
</kw>
<kw name="validate-cnc-devices" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.305087" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.305087" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.305087" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.305087" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.306110" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-devices.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-devices.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.306110" level="INFO">${LoadData} = ['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_info.software_v...</msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.306110" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.306110" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-devices.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.306110" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.306110" level="INFO">${RESP} = ('PASS', "['node-4']:profile:['demo']\n['node-4']:dg_name:['CDG_Pool_1-1']\n['node-4']:reachability_check:['REACH_CHECK_ENABLE']\n['node-4']:product_info.software_type:['IOS XR']\n['node-4']:product_i...</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-devices.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.001023"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.306110" level="INFO">${MSG} = --Validate CNC Devices--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Devices--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.306110" elapsed="0.000980"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.307090" level="INFO">${appsVALID} = ['node-4']:profile:['demo']
['node-4']:dg_name:['CDG_Pool_1-1']
['node-4']:reachability_check:['REACH_CHECK_ENABLE']
['node-4']:product_info.software_type:['IOS XR']
['node-4']:product_info.software_v...</msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.307090" level="INFO">120 lines returned</msg>
<msg time="2024-12-12T15:58:37.307090" level="INFO">@{appsVALID} = [ ['node-4']:profile:['demo'] | ['node-4']:dg_name:['CDG_Pool_1-1'] | ['node-4']:reachability_check:['REACH_CHECK_ENABLE'] | ['node-4']:product_info.software_type:['IOS XR'] | ['node-4']:product_info....</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.307090" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.308087" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.308087" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.308087" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.308087" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.309591" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.308087" elapsed="0.001504"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.309591" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.309591" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.309591" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.310643" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.310643" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.310643" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.311678" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.310643" elapsed="0.001035"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.311678" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000972"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.312650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.311678" elapsed="0.000972"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.312650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.312650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.313683" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.001033"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.313683" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.312650" elapsed="0.001033"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.313683" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000969"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.314652" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-4']:provider_node_id:['node-4']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.313683" elapsed="0.000969"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.314652" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.314652" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.315687" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.001035"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.315687" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.314652" elapsed="0.001035"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.315687" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.316691" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.315687" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.316691" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.316691" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.317676" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.317676" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.316691" elapsed="0.000985"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.317676" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000974"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.318650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.317676" elapsed="0.000974"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.318650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.318650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.001000"/>
</kw>
<var name="${item}">['node-1']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.318650" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.319650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.319650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.319650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.001023"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.320673" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.319650" elapsed="0.001023"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.320673" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.320673" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-1']:provider_node_id:['node-1']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.320673" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.321692" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.321692" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.322650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000958"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.322650" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.321692" elapsed="0.000958"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.322650" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.323675" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.322650" elapsed="0.001025"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.323675" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.323675" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.324649" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.324649" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.323675" elapsed="0.000974"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.324649" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.324649" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.324649" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.001525"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.326174" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.324649" elapsed="0.001525"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.326174" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.327206" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.001032"/>
</kw>
<var name="${item}">['node-2']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.326174" elapsed="0.001032"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.327206" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.327206" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.328248" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.001042"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.328248" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-2']:provider_node_id:['node-2']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.327206" elapsed="0.001042"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.328248" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.329212" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.328248" elapsed="0.000964"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.329212" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.329212" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.330254" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.330254" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.329212" elapsed="0.001042"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.330254" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000983"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.331237" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.330254" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.331237" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.331237" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.332230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.332230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.331237" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.332230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.333230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.332230" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.333230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.333230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.334230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.334230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.333230" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.334230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000981"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.335211" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-7']:provider_node_id:['node-7']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.334230" elapsed="0.000981"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.335211" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.335211" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.335211" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.336229" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.336229" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.336229" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.336229" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.336229" elapsed="0.001000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.337229" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.336229" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.337229" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.337229" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000986"/>
</kw>
<var name="${item}">['node-8']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.337229" elapsed="0.000986"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.338215" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.338215" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.338215" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.339212" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.338215" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.339212" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.339212" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.339212" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.340211" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.340211" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.340211" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.341230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.340211" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.341230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.341230" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.341230" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.001513"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.342743" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-8']:provider_node_id:['node-8']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.341230" elapsed="0.001513"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.342743" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.343803" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.001060"/>
</kw>
<var name="${item}">['node-5']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.342743" elapsed="0.001060"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.343803" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.343803" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.344820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.001017"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.344820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.343803" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.344820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.345839" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.344820" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.345839" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.345839" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.346837" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.346837" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.345839" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.346837" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.001001"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.347838" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.346837" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.347838" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.347838" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.001000"/>
</kw>
<msg time="2024-12-12T15:58:37.348838" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.348838" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-5']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.347838" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.348838" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.349838" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.001000"/>
</kw>
<var name="${item}">['node-5']:provider_node_id:['node-5']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.348838" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.349838" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.349838" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.001001"/>
</kw>
<msg time="2024-12-12T15:58:37.350839" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.001001"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.350839" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.349838" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.350839" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000998"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.351837" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.350839" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.351837" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.351837" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.352837" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.352837" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.351837" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.353821" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000984"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.353821" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.352837" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.353821" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.354820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.353821" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.354820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.354820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.355820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.355820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.354820" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.355820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.001000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.356820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-6']:provider_node_id:['node-6']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.355820" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.356820" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.356820" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.001043"/>
</kw>
<msg time="2024-12-12T15:58:37.357863" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.001043"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.357863" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.356820" elapsed="0.001043"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.357863" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.357863" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.357863" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.001533"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.359396" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.357863" elapsed="0.001533"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.359396" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.359396" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.001059"/>
</kw>
<var name="${item}">['node-3']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.359396" elapsed="0.001059"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.360455" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.360455" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.361438" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000983"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.361438" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.360455" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.361438" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.362433" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000995"/>
</kw>
<var name="${item}">['node-3']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.361438" elapsed="0.000995"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.362433" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.362433" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.363433" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.363433" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<var name="${item}">['node-3']:provider_node_id:['node-3']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.362433" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.363433" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.363433" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.363433" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.364433" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.364433" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000983"/>
</kw>
<msg time="2024-12-12T15:58:37.365416" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000983"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.365416" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.364433" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.365416" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.001025"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.366441" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.365416" elapsed="0.001025"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.366441" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.366441" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000993"/>
</kw>
<msg time="2024-12-12T15:58:37.367434" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000993"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.367434" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.366441" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.367434" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.001001"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.368435" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.367434" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.368435" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.368435" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.368435" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.369417" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.369417" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.369417" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.001018"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.370435" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-14.nso-topology']:provider_node_id:['cpe-14']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.369417" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.370435" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.370435" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.370435" elapsed="0.000979"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.371414" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.371414" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.372414" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.001000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.372414" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.371414" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.372414" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.373416" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.372414" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.373416" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.373416" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.374456" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.001040"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.374456" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.373416" elapsed="0.001040"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.374456" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.374456" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.374456" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.376181" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.374456" elapsed="0.001725"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.376181" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.376181" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.376181" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.377191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.377191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-11.nso-topology']:provider_node_id:['cpe-11']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.377191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.378191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.377191" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.378191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.379224" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.378191" elapsed="0.001033"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.379224" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.380190" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.379224" elapsed="0.000966"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.380190" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.380190" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000999"/>
</kw>
<msg time="2024-12-12T15:58:37.381189" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.381189" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.380190" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.381189" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.001027"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.382216" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.381189" elapsed="0.001027"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.382216" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.382216" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000992"/>
</kw>
<msg time="2024-12-12T15:58:37.383208" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000992"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.383208" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.382216" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.383208" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.384191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.383208" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.384191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.384191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-12.nso-topology']:provider_node_id:['cpe-12']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.384191" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.385189" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.385189" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.386207" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.001018"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.386207" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.385189" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.386207" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000985"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.387192" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.386207" elapsed="0.000985"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.387192" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.387192" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.388190" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000998"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.388190" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.387192" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.388190" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.389191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.388190" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.389191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.389191" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.390213" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.390213" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.389191" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.390213" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.390213" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.001511"/>
</kw>
<msg time="2024-12-12T15:58:37.391724" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_DEVICES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.001511"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.391724" level="INFO">Set tag 'PASS'.</msg>
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.000000"/>
</kw>
<var name="${item}">['cpe-13.nso-topology']:provider_node_id:['cpe-13']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.390213" elapsed="0.001511"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.084634"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.084634"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.307090" elapsed="0.084634"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.391724" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.392734" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.392734" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.391724" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.001010"/>
</if>
<var name="${item}">['node-4']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.001010"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.392734" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.393245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.392734" elapsed="0.000511"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.392734" elapsed="0.000511"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.393245" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.394253" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.001008"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.393245" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.394253" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.395300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.001047"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.394253" elapsed="0.001047"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.395300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.395300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.395300" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.396282" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.397278" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000996"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</if>
<var name="${item}">['node-4']:provider_node_id:['node-4']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.396282" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.397278" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.398279" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.397278" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.398279" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.001022"/>
</kw>
<msg time="2024-12-12T15:58:37.399301" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.001022"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.398279" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.399301" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.400300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.399301" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.400300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.401283" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.400300" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.401283" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.401283" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.402260" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</if>
<var name="${item}">['node-1']:provider_node_id:['node-1']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.402260" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.403300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.001040"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.402260" elapsed="0.001040"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.403300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.404284" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000984"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.403300" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.404284" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.405277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000993"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.404284" elapsed="0.000993"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.405277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.406277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.405277" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.406277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.407277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-2']:provider_node_id:['node-2']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.406277" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.407277" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.408300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.001023"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.407277" elapsed="0.001023"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.408300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.409286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000986"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.408300" elapsed="0.000986"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.409286" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.001143"/>
</kw>
<msg time="2024-12-12T15:58:37.410429" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.001143"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.409286" elapsed="0.001143"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.410429" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.411436" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.001007"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.410429" elapsed="0.001007"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.411436" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.411436" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.412435" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</if>
<var name="${item}">['node-7']:provider_node_id:['node-7']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.412435" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.412435" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.413434" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.413434" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.413434" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.414596" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.414596" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.414435" elapsed="0.000161"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.414596" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.414596" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.414596" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.414596" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.414435" elapsed="0.000161"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.415142" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.415142" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.415142" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.416171" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.416171" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.416171" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000998"/>
</if>
<var name="${item}">['node-8']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.416171" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.417169" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.418172" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.001003"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</if>
<var name="${item}">['node-8']:provider_node_id:['node-8']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.417169" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.418172" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.418172" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.001016"/>
</if>
<var name="${item}">['node-5']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.418172" elapsed="0.001016"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.419188" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.419188" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.419188" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.420191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.420191" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.420191" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.421173" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.421173" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.421173" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.422192" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.422192" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.423176" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</if>
<var name="${item}">['node-5']:provider_node_id:['node-5']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.422192" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.423176" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</if>
<var name="${item}">['node-6']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.424168" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000992"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</if>
<var name="${item}">['node-6']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.423176" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.424168" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.424168" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.001000"/>
</if>
<var name="${item}">['node-6']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.424168" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.425168" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</if>
<var name="${item}">['node-6']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.425168" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.425168" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.426150" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.425168" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000982"/>
</if>
<var name="${item}">['node-6']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.425168" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426150" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.426150" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426150" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.426150" elapsed="0.000507"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.426150" elapsed="0.000507"/>
</if>
<var name="${item}">['node-6']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.426150" elapsed="0.000507"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.426657" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</if>
<var name="${item}">['node-6']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.426657" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.001028"/>
</if>
<var name="${item}">['node-6']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.426657" elapsed="0.001028"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.427685" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</if>
<var name="${item}">['node-6']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.427685" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.427685" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.001013"/>
</if>
<var name="${item}">['node-6']:provider_node_id:['node-6']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.427685" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.428698" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:profile:['demo']</var>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.428698" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.428698" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.429727" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.429727" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.001004"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.429727" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.001004"/>
</if>
<var name="${item}">['node-3']:product_info.software_type:['IOS XR']</var>
<status status="PASS" start="2024-12-12T15:58:37.429727" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.430731" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:product_info.software_version:['24.2.1']</var>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.430731" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.430731" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000987"/>
</if>
<var name="${item}">['node-3']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.430731" elapsed="0.000987"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.431718" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']</var>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.431718" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.431718" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000979"/>
</if>
<var name="${item}">['node-3']:connectivity_info..port:[22, 161, 830, 57400]</var>
<status status="PASS" start="2024-12-12T15:58:37.431718" elapsed="0.000979"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.432697" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32...</var>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.432697" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</if>
<var name="${item}">['node-3']:provider_node_id:['node-3']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.432697" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.433700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.433700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.434723" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.433700" elapsed="0.001023"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.434723" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.435717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000994"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.434723" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.435717" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.435717" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.001001"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.435717" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.436718" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.436718" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.436718" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.437715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.437715" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-14.nso-topology']:provider_node_id:['cpe-14']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.437715" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.438716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.438716" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.438716" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.439700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.439700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.439700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.440700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.440700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.440700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.441722" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.441722" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.441722" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.441722" elapsed="0.000978"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000978"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.441722" elapsed="0.000978"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.442700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.442700" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-11.nso-topology']:provider_node_id:['cpe-11']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.443936" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.001236"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.442700" elapsed="0.001236"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.443936" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.001005"/>
</kw>
<msg time="2024-12-12T15:58:37.444941" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.001005"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.443936" elapsed="0.001005"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.444941" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.001002"/>
</kw>
<msg time="2024-12-12T15:58:37.445943" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.444941" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.445943" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.001020"/>
</kw>
<msg time="2024-12-12T15:58:37.446963" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.001020"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.445943" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.446963" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000979"/>
</kw>
<msg time="2024-12-12T15:58:37.447942" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000979"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.446963" elapsed="0.000979"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.447942" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-12.nso-topology']:provider_node_id:['cpe-12']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.448962" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.001020"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:profile:['demo-cpe']</var>
<status status="PASS" start="2024-12-12T15:58:37.447942" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.448962" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:dg_name:['CDG_Pool_1-1']</var>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.449959" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.448962" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.449959" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:product_info.software_type:['IOS XE']</var>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.450959" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:product_info.software_version:['15.6(2)T']</var>
<status status="PASS" start="2024-12-12T15:58:37.449959" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.450959" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:product_info.manufacturer:['Cisco Systems']</var>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.451958" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']</var>
<status status="PASS" start="2024-12-12T15:58:37.450959" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.451958" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..port:[22, 161]</var>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.452958" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.5...</var>
<status status="PASS" start="2024-12-12T15:58:37.451958" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.452958" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Appears to be a new entry not in the validation list.\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</if>
<var name="${item}">['cpe-13.nso-topology']:provider_node_id:['cpe-13']:provider_name:['nso201']</var>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_DEVICES}</value>
<status status="PASS" start="2024-12-12T15:58:37.391724" elapsed="0.061234"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.453959" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.453959" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.452958" elapsed="0.001001"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.453959" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.453959" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.453959" level="INFO">List length is 120 and it contains following items:
0: PASS:['node-4']:profile:['demo']:App found in validation list, but not in system
1: PASS:['node-4']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
2: PASS:['node-4']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
3: PASS:['node-4']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
4: PASS:['node-4']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
5: PASS:['node-4']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
6: PASS:['node-4']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
7: PASS:['node-4']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
8: PASS:['node-4']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.4', 'mask': '32'}]]:App found in validation list, but not in system
9: PASS:['node-4']:provider_node_id:['node-4']:provider_name:['nso201']:App found in validation list, but not in system
10: PASS:['node-1']:profile:['demo']:App found in validation list, but not in system
11: PASS:['node-1']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
12: PASS:['node-1']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
13: PASS:['node-1']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
14: PASS:['node-1']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
15: PASS:['node-1']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
16: PASS:['node-1']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
17: PASS:['node-1']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
18: PASS:['node-1']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.1', 'mask': '32'}]]:App found in validation list, but not in system
19: PASS:['node-1']:provider_node_id:['node-1']:provider_name:['nso201']:App found in validation list, but not in system
20: PASS:['node-2']:profile:['demo']:App found in validation list, but not in system
21: PASS:['node-2']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
22: PASS:['node-2']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
23: PASS:['node-2']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
24: PASS:['node-2']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
25: PASS:['node-2']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
26: PASS:['node-2']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
27: PASS:['node-2']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
28: PASS:['node-2']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.2', 'mask': '32'}]]:App found in validation list, but not in system
29: PASS:['node-2']:provider_node_id:['node-2']:provider_name:['nso201']:App found in validation list, but not in system
30: PASS:['node-7']:profile:['demo']:App found in validation list, but not in system
31: PASS:['node-7']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
32: PASS:['node-7']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
33: PASS:['node-7']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
34: PASS:['node-7']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
35: PASS:['node-7']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
36: PASS:['node-7']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
37: PASS:['node-7']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
38: PASS:['node-7']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.7', 'mask': '32'}]]:App found in validation list, but not in system
39: PASS:['node-7']:provider_node_id:['node-7']:provider_name:['nso201']:App found in validation list, but not in system
40: PASS:['node-8']:profile:['demo']:App found in validation list, but not in system
41: PASS:['node-8']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
42: PASS:['node-8']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
43: PASS:['node-8']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
44: PASS:['node-8']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
45: PASS:['node-8']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
46: PASS:['node-8']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
47: PASS:['node-8']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
48: PASS:['node-8']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.8', 'mask': '32'}]]:App found in validation list, but not in system
49: PASS:['node-8']:provider_node_id:['node-8']:provider_name:['nso201']:App found in validation list, but not in system
50: PASS:['node-5']:profile:['demo']:App found in validation list, but not in system
51: PASS:['node-5']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
52: PASS:['node-5']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
53: PASS:['node-5']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
54: PASS:['node-5']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
55: PASS:['node-5']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
56: PASS:['node-5']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
57: PASS:['node-5']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
58: PASS:['node-5']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.5', 'mask': '32'}]]:App found in validation list, but not in system
59: PASS:['node-5']:provider_node_id:['node-5']:provider_name:['nso201']:App found in validation list, but not in system
60: PASS:['node-6']:profile:['demo']:App found in validation list, but not in system
61: PASS:['node-6']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
62: PASS:['node-6']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
63: PASS:['node-6']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
64: PASS:['node-6']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
65: PASS:['node-6']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
66: PASS:['node-6']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
67: PASS:['node-6']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
68: PASS:['node-6']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.6', 'mask': '32'}]]:App found in validation list, but not in system
69: PASS:['node-6']:provider_node_id:['node-6']:provider_name:['nso201']:App found in validation list, but not in system
70: PASS:['node-3']:profile:['demo']:App found in validation list, but not in system
71: PASS:['node-3']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
72: PASS:['node-3']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
73: PASS:['node-3']:product_info.software_type:['IOS XR']:App found in validation list, but not in system
74: PASS:['node-3']:product_info.software_version:['24.2.1']:App found in validation list, but not in system
75: PASS:['node-3']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
76: PASS:['node-3']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP', 'ROBOT_MSVC_TRANS_NETCONF', 'ROBOT_MSVC_TRANS_GNMI']:App found in validation list, but not in system
77: PASS:['node-3']:connectivity_info..port:[22, 161, 830, 57400]:App found in validation list, but not in system
78: PASS:['node-3']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.19.1.3', 'mask': '32'}]]:App found in validation list, but not in system
79: PASS:['node-3']:provider_node_id:['node-3']:provider_name:['nso201']:App found in validation list, but not in system
80: PASS:['cpe-14.nso-topology']:profile:['demo-cpe']:App found in validation list, but not in system
81: PASS:['cpe-14.nso-topology']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
82: PASS:['cpe-14.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
83: PASS:['cpe-14.nso-topology']:product_info.software_type:['IOS XE']:App found in validation list, but not in system
84: PASS:['cpe-14.nso-topology']:product_info.software_version:['15.6(2)T']:App found in validation list, but not in system
85: PASS:['cpe-14.nso-topology']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
86: PASS:['cpe-14.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']:App found in validation list, but not in system
87: PASS:['cpe-14.nso-topology']:connectivity_info..port:[22, 161]:App found in validation list, but not in system
88: PASS:['cpe-14.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.54', 'mask': '32'}]]:App found in validation list, but not in system
89: PASS:['cpe-14.nso-topology']:provider_node_id:['cpe-14']:provider_name:['nso201']:App found in validation list, but not in system
90: PASS:['cpe-11.nso-topology']:profile:['demo-cpe']:App found in validation list, but not in system
91: PASS:['cpe-11.nso-topology']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
92: PASS:['cpe-11.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
93: PASS:['cpe-11.nso-topology']:product_info.software_type:['IOS XE']:App found in validation list, but not in system
94: PASS:['cpe-11.nso-topology']:product_info.software_version:['15.6(2)T']:App found in validation list, but not in system
95: PASS:['cpe-11.nso-topology']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
96: PASS:['cpe-11.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']:App found in validation list, but not in system
97: PASS:['cpe-11.nso-topology']:connectivity_info..port:[22, 161]:App found in validation list, but not in system
98: PASS:['cpe-11.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.51', 'mask': '32'}]]:App found in validation list, but not in system
99: PASS:['cpe-11.nso-topology']:provider_node_id:['cpe-11']:provider_name:['nso201']:App found in validation list, but not in system
100: PASS:['cpe-12.nso-topology']:profile:['demo-cpe']:App found in validation list, but not in system
101: PASS:['cpe-12.nso-topology']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
102: PASS:['cpe-12.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
103: PASS:['cpe-12.nso-topology']:product_info.software_type:['IOS XE']:App found in validation list, but not in system
104: PASS:['cpe-12.nso-topology']:product_info.software_version:['15.6(2)T']:App found in validation list, but not in system
105: PASS:['cpe-12.nso-topology']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
106: PASS:['cpe-12.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']:App found in validation list, but not in system
107: PASS:['cpe-12.nso-topology']:connectivity_info..port:[22, 161]:App found in validation list, but not in system
108: PASS:['cpe-12.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.52', 'mask': '32'}]]:App found in validation list, but not in system
109: PASS:['cpe-12.nso-topology']:provider_node_id:['cpe-12']:provider_name:['nso201']:App found in validation list, but not in system
110: PASS:['cpe-13.nso-topology']:profile:['demo-cpe']:App found in validation list, but not in system
111: PASS:['cpe-13.nso-topology']:dg_name:['CDG_Pool_1-1']:App found in validation list, but not in system
112: PASS:['cpe-13.nso-topology']:reachability_check:['REACH_CHECK_ENABLE']:App found in validation list, but not in system
113: PASS:['cpe-13.nso-topology']:product_info.software_type:['IOS XE']:App found in validation list, but not in system
114: PASS:['cpe-13.nso-topology']:product_info.software_version:['15.6(2)T']:App found in validation list, but not in system
115: PASS:['cpe-13.nso-topology']:product_info.manufacturer:['Cisco Systems']:App found in validation list, but not in system
116: PASS:['cpe-13.nso-topology']:connectivity_info..type:['ROBOT_MSVC_TRANS_SSH', 'ROBOT_MSVC_TRANS_SNMP']:App found in validation list, but not in system
117: PASS:['cpe-13.nso-topology']:connectivity_info..port:[22, 161]:App found in validation list, but not in system
118: PASS:['cpe-13.nso-topology']:connectivity_info..ipaddrs:[[{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}], [{'inet_af': 'ROBOT_INET_ADDR_TYPE_v4', 'inet_addr': '198.18.1.53', 'mask': '32'}]]:App found in validation list, but not in system
119: PASS:['cpe-13.nso-topology']:provider_node_id:['cpe-13']:provider_name:['nso201']:App found in validation list, but not in system</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.453959" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.453959" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for Device configuration</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.454961" level="INFO">${MSG} = --Validate CNC Devices--

All configuration validated:0 Errors.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nAll configuration validated:${FAIL_COUNT} Errors.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.453959" elapsed="0.001002"/>
</kw>
<msg time="2024-12-12T15:58:37.454961" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC services/applications based on the suite variable of ``CNC_DEVICES``</doc>
<status status="PASS" start="2024-12-12T15:58:37.305087" elapsed="0.149874"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.455180" level="INFO">Set test message to:
--Validate CNC Devices--

All configuration validated:0 Errors.
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.455180" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Device info is correct, reachable and in operational OK state as per the file spec [cnc-devices.txt]</doc>
<tag>DEVICE</tag>
<tag>PASS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.304113" elapsed="0.151067">--Validate CNC Devices--

All configuration validated:0 Errors.
</status>
</test>
<test id="s1-t35" name="Validate CNC Devices State/Health" line="276">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.456859" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.455823" elapsed="0.001036"/>
</kw>
<kw name="validate-cnc-device-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.456859" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.456859" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.456859" elapsed="0.000997"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">@{VALIDATE_LIST} = [ DOWN | UNREACHABLE | ERROR | DEGRADED | errors ]</msg>
<var>@{VALIDATE_LIST}</var>
<arg>DOWN</arg>
<arg>UNREACHABLE</arg>
<arg>ERROR</arg>
<arg>DEGRADED</arg>
<arg>errors</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">${MSG} = --Validate CNC Device Health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC Device Health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="INFO">['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.457856" level="FAIL">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.457856" elapsed="0.000000">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.457856" level="INFO">${RESP} = ('FAIL', "'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.459386" level="FAIL">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.459386" elapsed="0.000000">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.459386" level="INFO">${RESP} = ('FAIL', "'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.459386" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.459386" level="FAIL">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.459386" elapsed="0.001018">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.460404" level="INFO">${RESP} = ('FAIL', "'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.459386" elapsed="0.001018"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.460404" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.459386" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.461405" level="FAIL">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.460404" elapsed="0.001001">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.461405" level="INFO">${RESP} = ('FAIL', "'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.460404" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.460404" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.461405" level="FAIL">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.461405" elapsed="0.000000">'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.461405" level="INFO">${RESP} = ('FAIL', "'['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.461405" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.461405" elapsed="0.001019"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.461405" elapsed="0.001019"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.461405" elapsed="0.001019"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.004568"/>
</for>
<var name="${iter}">['node-4']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.004568"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.462424" level="INFO">['node-4']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.462424" level="FAIL">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.462424" elapsed="0.000000">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.462424" level="INFO">${RESP} = ('FAIL', "'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.462424" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.000997"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.463421" level="FAIL">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.463421" elapsed="0.000000">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.463421" level="INFO">${RESP} = ('FAIL', "'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000984"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.463421" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.463421" elapsed="0.000984"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.463421" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.464405" level="FAIL">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.464405" elapsed="0.000000">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.464405" level="INFO">${RESP} = ('FAIL', "'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.464405" level="FAIL">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.464405" elapsed="0.000000">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.464405" level="INFO">${RESP} = ('FAIL', "'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.464405" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.464405" elapsed="0.001012"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.465417" level="FAIL">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.465417" elapsed="0.000000">'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.465417" level="INFO">${RESP} = ('FAIL', "'['node-4']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.001030"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.001030"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.465417" elapsed="0.001030"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.465417" elapsed="0.001030"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.465417" elapsed="0.001030"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.004023"/>
</for>
<var name="${iter}">['node-4']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.462424" elapsed="0.004023"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.466447" level="INFO">['node-4']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.466447" level="FAIL">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.466447" elapsed="0.000000">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.466447" level="INFO">${RESP} = ('FAIL', "'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000982"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000982"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.466447" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.000982"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.467429" level="FAIL">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.467429" elapsed="0.000000">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.467429" level="INFO">${RESP} = ('FAIL', "'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.467429" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.468421" level="FAIL">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.467429" elapsed="0.000992">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.468421" level="INFO">${RESP} = ('FAIL', "'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.467429" elapsed="0.000992"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.467429" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.468421" level="FAIL">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.468421" elapsed="0.000000">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.468421" level="INFO">${RESP} = ('FAIL', "'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.468421" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.468421" elapsed="0.001000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.468421" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.469421" level="FAIL">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.469421" elapsed="0.000000">'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.469421" level="INFO">${RESP} = ('FAIL', "'['node-4']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.469421" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.469421" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.003974"/>
</for>
<var name="${iter}">['node-4']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.466447" elapsed="0.003974"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.470421" level="INFO">['node-4']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.470421" level="FAIL">'['node-4']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.470421" elapsed="0.000000">'['node-4']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.470421" level="INFO">${RESP} = ('FAIL', "'['node-4']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000985"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000985"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.470421" elapsed="0.000985"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.000985"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.000985"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.471406" level="FAIL">'['node-4']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.471406" elapsed="0.000000">'['node-4']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.471406" level="INFO">${RESP} = ('FAIL', "'['node-4']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.471406" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.471406" level="FAIL">'['node-4']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.471406" elapsed="0.001037">'['node-4']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.472443" level="INFO">${RESP} = ('FAIL', "'['node-4']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.471406" elapsed="0.001037"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.471406" elapsed="0.001037"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.472443" level="FAIL">'['node-4']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.472443" elapsed="0.000000">'['node-4']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.472443" level="INFO">${RESP} = ('FAIL', "'['node-4']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.001002"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.001002"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.472443" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.472443" elapsed="0.001002"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.472443" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.473445" level="FAIL">'['node-4']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.473445" elapsed="0.000000">'['node-4']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.473445" level="INFO">${RESP} = ('FAIL', "'['node-4']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.473445" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.473445" elapsed="0.000991"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.004015"/>
</for>
<var name="${iter}">['node-4']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.470421" elapsed="0.004015"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.474436" level="INFO">['node-4']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.474436" level="FAIL">'['node-4']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.474436" elapsed="0.000000">'['node-4']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.474436" level="INFO">${RESP} = ('FAIL', "'['node-4']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.474436" level="FAIL">'['node-4']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.474436" elapsed="0.000000">'['node-4']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.474436" level="INFO">${RESP} = ('FAIL', "'['node-4']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.001743"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.001743"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.474436" elapsed="0.001743"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.001743"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.001743"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.476269" level="FAIL">'['node-4']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.476269" elapsed="0.000000">'['node-4']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.476269" level="INFO">${RESP} = ('FAIL', "'['node-4']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000920"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000920"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.476269" elapsed="0.000920"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.476269" elapsed="0.000920"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.476269" elapsed="0.000920"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.477189" level="FAIL">'['node-4']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.477189" elapsed="0.000000">'['node-4']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.477189" level="INFO">${RESP} = ('FAIL', "'['node-4']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.477189" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.477189" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.477189" elapsed="0.000998"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.477189" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.478187" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.478187" level="INFO">Checking if errors:[] is equal to ['node-4']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.479189" level="FAIL">'['node-4']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.478187" elapsed="0.001002">'['node-4']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.479189" level="INFO">${equal} = ('FAIL', "'['node-4']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.001002"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.478187" elapsed="0.001002"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.004753"/>
</for>
<var name="${iter}">['node-4']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.474436" elapsed="0.004753"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.479189" level="INFO">['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.479189" level="FAIL">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.479189" elapsed="0.000000">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.480187" level="INFO">${RESP} = ('FAIL', "'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.480187" level="FAIL">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.480187" elapsed="0.000000">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.480187" level="INFO">${RESP} = ('FAIL', "'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.480187" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.480187" elapsed="0.000999"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.480187" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.481186" level="FAIL">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.481186" elapsed="0.000000">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.481186" level="INFO">${RESP} = ('FAIL', "'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.001034"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.481186" elapsed="0.001034"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.481186" elapsed="0.001034"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.481186" elapsed="0.001034"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.482220" level="FAIL">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.482220" elapsed="0.000000">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.482220" level="INFO">${RESP} = ('FAIL', "'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.482220" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.483207" level="FAIL">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.483207" elapsed="0.000000">'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.483207" level="INFO">${RESP} = ('FAIL', "'['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.482220" elapsed="0.000987"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.482220" elapsed="0.000987"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.004018"/>
</for>
<var name="${iter}">['node-1']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.479189" elapsed="0.004018"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.483207" level="INFO">['node-1']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.484205" level="FAIL">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.484205" elapsed="0.000000">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.484205" level="INFO">${RESP} = ('FAIL', "'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.484205" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.485205" level="FAIL">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.484205" elapsed="0.001000">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.485205" level="INFO">${RESP} = ('FAIL', "'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.484205" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.484205" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.485205" level="FAIL">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.485205" elapsed="0.000000">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.485205" level="INFO">${RESP} = ('FAIL', "'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.485205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.485205" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.485205" elapsed="0.001000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.485205" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.486205" level="FAIL">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.486205" elapsed="0.000000">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.486205" level="INFO">${RESP} = ('FAIL', "'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.001001"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.001001"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.486205" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.486205" elapsed="0.001001"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.486205" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.487206" level="FAIL">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.487206" elapsed="0.000000">'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.487206" level="INFO">${RESP} = ('FAIL', "'['node-1']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.487206" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.003999"/>
</for>
<var name="${iter}">['node-1']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.483207" elapsed="0.003999"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.488207" level="INFO">['node-1']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.488207" level="FAIL">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.488207" elapsed="0.000000">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.488207" level="INFO">${RESP} = ('FAIL', "'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.488207" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.000999"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.489206" level="FAIL">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.489206" elapsed="0.000000">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.489206" level="INFO">${RESP} = ('FAIL', "'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.489206" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.490227" level="FAIL">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.490227" elapsed="0.000000">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.490227" level="INFO">${RESP} = ('FAIL', "'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.489206" elapsed="0.001021"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.489206" elapsed="0.001021"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.490227" level="FAIL">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.490227" elapsed="0.000000">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.490227" level="INFO">${RESP} = ('FAIL', "'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.490227" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.490227" elapsed="0.001002"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.490227" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.491229" level="FAIL">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.491229" elapsed="0.000000">'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.491229" level="INFO">${RESP} = ('FAIL', "'['node-1']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492213" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492213" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000984"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000984"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.491229" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.491229" elapsed="0.000984"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.491229" elapsed="0.000984"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.004006"/>
</for>
<var name="${iter}">['node-1']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.488207" elapsed="0.004006"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.492213" level="INFO">['node-1']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.492213" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.492725" level="FAIL">'['node-1']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.492725" elapsed="0.000000">'['node-1']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.492725" level="INFO">${RESP} = ('FAIL', "'['node-1']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.492725" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.492725" level="FAIL">'['node-1']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.492725" elapsed="0.001006">'['node-1']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.493731" level="INFO">${RESP} = ('FAIL', "'['node-1']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.492725" elapsed="0.001006"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.492725" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.493731" level="FAIL">'['node-1']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.493731" elapsed="0.000000">'['node-1']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.493731" level="INFO">${RESP} = ('FAIL', "'['node-1']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.493731" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.493731" elapsed="0.001006"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.493731" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.494737" level="FAIL">'['node-1']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.494737" elapsed="0.000000">'['node-1']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.494737" level="INFO">${RESP} = ('FAIL', "'['node-1']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.494737" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.494737" elapsed="0.001001"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.494737" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.495738" level="FAIL">'['node-1']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.495738" elapsed="0.000000">'['node-1']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.495738" level="INFO">${RESP} = ('FAIL', "'['node-1']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.001000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.001000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.495738" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.495738" elapsed="0.001000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.495738" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.492213" elapsed="0.004525"/>
</for>
<var name="${iter}">['node-1']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.492213" elapsed="0.004525"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.496738" level="INFO">['node-1']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.496738" level="FAIL">'['node-1']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.496738" elapsed="0.000000">'['node-1']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.496738" level="INFO">${RESP} = ('FAIL', "'['node-1']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.001010"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.497748" level="FAIL">'['node-1']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.497748" elapsed="0.000000">'['node-1']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.497748" level="INFO">${RESP} = ('FAIL', "'['node-1']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.497748" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.498778" level="FAIL">'['node-1']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.497748" elapsed="0.001030">'['node-1']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.498778" level="INFO">${RESP} = ('FAIL', "'['node-1']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.497748" elapsed="0.001030"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.498778" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.497748" elapsed="0.001030"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.498778" level="FAIL">'['node-1']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.498778" elapsed="0.000000">'['node-1']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.499761" level="INFO">${RESP} = ('FAIL', "'['node-1']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.498778" elapsed="0.000983"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.498778" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.499761" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.499761" level="INFO">Checking if errors:[] is equal to ['node-1']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.500756" level="FAIL">'['node-1']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.500756" elapsed="0.000000">'['node-1']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.500756" level="INFO">${equal} = ('FAIL', "'['node-1']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000995"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.499761" elapsed="0.000995"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.004018"/>
</for>
<var name="${iter}">['node-1']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.496738" elapsed="0.004018"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.500756" level="INFO">['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.501737" level="FAIL">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.501737" elapsed="0.000000">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.501737" level="INFO">${RESP} = ('FAIL', "'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.501737" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.000981"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.501737" level="FAIL">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.501737" elapsed="0.000000">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.502736" level="INFO">${RESP} = ('FAIL', "'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.501737" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.501737" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.502736" level="FAIL">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.502736" elapsed="0.000000">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.502736" level="INFO">${RESP} = ('FAIL', "'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.502736" elapsed="0.001018"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.502736" elapsed="0.001018"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.502736" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.503754" level="FAIL">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.503754" elapsed="0.000000">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.503754" level="INFO">${RESP} = ('FAIL', "'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.503754" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.504754" level="FAIL">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.504754" elapsed="0.000000">'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.504754" level="INFO">${RESP} = ('FAIL', "'['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.504754" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.003998"/>
</for>
<var name="${iter}">['node-2']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.500756" elapsed="0.003998"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.504754" level="INFO">['node-2']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.504754" elapsed="0.001001"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.505755" level="FAIL">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.505755" elapsed="0.000000">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.505755" level="INFO">${RESP} = ('FAIL', "'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.505755" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.506754" level="FAIL">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.506754" elapsed="0.000000">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.506754" level="INFO">${RESP} = ('FAIL', "'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.506754" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.505755" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.506754" level="FAIL">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.506754" elapsed="0.000986">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.507740" level="INFO">${RESP} = ('FAIL', "'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.506754" elapsed="0.000986"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.507740" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.506754" elapsed="0.000986"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.507740" level="FAIL">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.507740" elapsed="0.000000">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.507740" level="INFO">${RESP} = ('FAIL', "'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.507740" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.507740" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.508739" level="FAIL">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.508739" elapsed="0.000000">'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.508739" level="INFO">${RESP} = ('FAIL', "'['node-2']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.509737" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.509737" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.508739" elapsed="0.000998"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.505755" elapsed="0.003982"/>
</for>
<var name="${iter}">['node-2']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.504754" elapsed="0.004983"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.509737" level="INFO">['node-2']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.509737" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.510241" level="FAIL">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.510241" elapsed="0.000000">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.510241" level="INFO">${RESP} = ('FAIL', "'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.511247" level="FAIL">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.511247" elapsed="0.000000">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.511247" level="INFO">${RESP} = ('FAIL', "'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.001006"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.511247" level="FAIL">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.511247" elapsed="0.000000">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.511247" level="INFO">${RESP} = ('FAIL', "'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.511247" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.511247" elapsed="0.001005"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.511247" elapsed="0.001005"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.511247" elapsed="0.001005"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.512252" level="FAIL">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.512252" elapsed="0.000000">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.512252" level="INFO">${RESP} = ('FAIL', "'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.001038"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.001038"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.512252" elapsed="0.001038"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.512252" elapsed="0.001038"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.512252" elapsed="0.001038"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.513290" level="FAIL">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.513290" elapsed="0.000000">'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.513290" level="INFO">${RESP} = ('FAIL', "'['node-2']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.513290" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.510241" elapsed="0.003049"/>
</for>
<var name="${iter}">['node-2']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.509737" elapsed="0.003553"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.514278" level="INFO">['node-2']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.514278" level="FAIL">'['node-2']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.514278" elapsed="0.000000">'['node-2']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.514278" level="INFO">${RESP} = ('FAIL', "'['node-2']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.515277" level="FAIL">'['node-2']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.515277" elapsed="0.000000">'['node-2']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.515277" level="INFO">${RESP} = ('FAIL', "'['node-2']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.515277" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.515277" level="FAIL">'['node-2']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.515277" elapsed="0.000000">'['node-2']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.516277" level="INFO">${RESP} = ('FAIL', "'['node-2']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.515277" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.515277" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.516277" level="FAIL">'['node-2']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.516277" elapsed="0.000000">'['node-2']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.516277" level="INFO">${RESP} = ('FAIL', "'['node-2']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.516277" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.516277" elapsed="0.000981"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.516277" elapsed="0.000981"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.516277" elapsed="0.000981"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.517258" level="FAIL">'['node-2']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.517258" elapsed="0.000000">'['node-2']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.517258" level="INFO">${RESP} = ('FAIL', "'['node-2']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.001021"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.001021"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.517258" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.517258" elapsed="0.001021"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.517258" elapsed="0.001021"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.004001"/>
</for>
<var name="${iter}">['node-2']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.514278" elapsed="0.004001"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.518279" level="INFO">['node-2']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.518279" level="FAIL">'['node-2']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.518279" elapsed="0.000000">'['node-2']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.518279" level="INFO">${RESP} = ('FAIL', "'['node-2']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.001020"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.001020"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.518279" elapsed="0.001020"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.001020"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.519299" level="FAIL">'['node-2']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.519299" elapsed="0.000000">'['node-2']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.519299" level="INFO">${RESP} = ('FAIL', "'['node-2']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.519299" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.520285" level="FAIL">'['node-2']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.520285" elapsed="0.000000">'['node-2']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.520285" level="INFO">${RESP} = ('FAIL', "'['node-2']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.520285" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.520285" elapsed="0.001014"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.521299" level="FAIL">'['node-2']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.521299" elapsed="0.000000">'['node-2']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.521299" level="INFO">${RESP} = ('FAIL', "'['node-2']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.521299" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.522300" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.521299" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.522300" level="INFO">Checking if errors:[] is equal to ['node-2']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.522300" level="FAIL">'['node-2']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.522300" elapsed="0.000000">'['node-2']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.522300" level="INFO">${equal} = ('FAIL', "'['node-2']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.522300" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.521299" elapsed="0.001001"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.004021"/>
</for>
<var name="${iter}">['node-2']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.518279" elapsed="0.005021"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.523300" level="INFO">['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.523300" level="FAIL">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.523300" elapsed="0.000000">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.523300" level="INFO">${RESP} = ('FAIL', "'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.524259" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.000959"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.536327" level="FAIL">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.536327" elapsed="0.000000">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.536327" level="INFO">${RESP} = ('FAIL', "'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.536327" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.536327" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.536327" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.536327" elapsed="0.001002"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.536327" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.537329" level="FAIL">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.537329" elapsed="0.000000">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.537329" level="INFO">${RESP} = ('FAIL', "'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.537329" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.538354" level="FAIL">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.538354" elapsed="0.000000">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.538354" level="INFO">${RESP} = ('FAIL', "'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.538354" level="FAIL">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.538354" elapsed="0.000000">'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.538354" level="INFO">${RESP} = ('FAIL', "'['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.538354" elapsed="0.000992"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000992"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.538354" elapsed="0.000992"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.016046"/>
</for>
<var name="${iter}">['node-7']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.523300" elapsed="0.016046"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.539346" level="INFO">['node-7']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.539346" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.540327" level="FAIL">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.539346" elapsed="0.000981">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.540327" level="INFO">${RESP} = ('FAIL', "'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.539346" elapsed="0.000981"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.539346" elapsed="0.000981"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.540327" level="FAIL">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.540327" elapsed="0.000000">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.540327" level="INFO">${RESP} = ('FAIL', "'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.540327" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000999"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.540327" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.540327" elapsed="0.000999"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.540327" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.541326" level="FAIL">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.541326" elapsed="0.000000">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.541326" level="INFO">${RESP} = ('FAIL', "'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.541326" level="FAIL">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.541326" elapsed="0.000000">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.541326" level="INFO">${RESP} = ('FAIL', "'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.001504"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.541326" elapsed="0.001504"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.001504"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.541326" elapsed="0.001504"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.542830" level="FAIL">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.542830" elapsed="0.000000">'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.542830" level="INFO">${RESP} = ('FAIL', "'['node-7']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.542830" elapsed="0.001047"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.539346" elapsed="0.004531"/>
</for>
<var name="${iter}">['node-7']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.539346" elapsed="0.004531"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.543877" level="INFO">['node-7']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.543877" level="FAIL">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.543877" elapsed="0.000000">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.543877" level="INFO">${RESP} = ('FAIL', "'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.000965"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.544842" level="FAIL">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.544842" elapsed="0.000000">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.544842" level="INFO">${RESP} = ('FAIL', "'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.544842" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.545837" level="FAIL">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.544842" elapsed="0.000995">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.545837" level="INFO">${RESP} = ('FAIL', "'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.544842" elapsed="0.000995"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.545837" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.544842" elapsed="0.000995"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.545837" level="FAIL">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.545837" elapsed="0.000000">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.546838" level="INFO">${RESP} = ('FAIL', "'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.545837" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.545837" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.546838" level="FAIL">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.546838" elapsed="0.000000">'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.546838" level="INFO">${RESP} = ('FAIL', "'['node-7']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.546838" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.546838" elapsed="0.001000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.546838" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.003961"/>
</for>
<var name="${iter}">['node-7']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.543877" elapsed="0.003961"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.547838" level="INFO">['node-7']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.547838" level="FAIL">'['node-7']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.547838" elapsed="0.000000">'['node-7']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.547838" level="INFO">${RESP} = ('FAIL', "'['node-7']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.547838" elapsed="0.001022"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.001022"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.001022"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.548860" level="FAIL">'['node-7']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.548860" elapsed="0.000000">'['node-7']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.548860" level="INFO">${RESP} = ('FAIL', "'['node-7']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000995"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000995"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.548860" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.548860" elapsed="0.000995"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.548860" elapsed="0.000995"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.549855" level="FAIL">'['node-7']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.549855" elapsed="0.000000">'['node-7']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.549855" level="INFO">${RESP} = ('FAIL', "'['node-7']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.549855" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.549855" elapsed="0.000999"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.549855" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.550854" level="FAIL">'['node-7']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.550854" elapsed="0.000000">'['node-7']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.550854" level="INFO">${RESP} = ('FAIL', "'['node-7']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.550854" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.551854" level="FAIL">'['node-7']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.551854" elapsed="0.000000">'['node-7']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.551854" level="INFO">${RESP} = ('FAIL', "'['node-7']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.550854" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.550854" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.004016"/>
</for>
<var name="${iter}">['node-7']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.547838" elapsed="0.004016"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.551854" level="INFO">['node-7']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.551854" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.552854" level="FAIL">'['node-7']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.552854" elapsed="0.000000">'['node-7']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.552854" level="INFO">${RESP} = ('FAIL', "'['node-7']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.552854" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.551854" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.553882" level="FAIL">'['node-7']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.553882" elapsed="0.000000">'['node-7']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.553882" level="INFO">${RESP} = ('FAIL', "'['node-7']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.552854" elapsed="0.001028"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000508"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000508"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.553882" elapsed="0.000508"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.553882" elapsed="0.000508"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.552854" elapsed="0.001536"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.554390" level="FAIL">'['node-7']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.554390" elapsed="0.000000">'['node-7']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.554390" level="INFO">${RESP} = ('FAIL', "'['node-7']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.554390" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.555423" level="FAIL">'['node-7']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.555423" elapsed="0.000000">'['node-7']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.555423" level="INFO">${RESP} = ('FAIL', "'['node-7']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.554390" elapsed="0.001033"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.555423" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.554390" elapsed="0.001033"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.556397" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.555423" elapsed="0.000974"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.556397" level="INFO">Checking if errors:[] is equal to ['node-7']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.556397" level="FAIL">'['node-7']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.556397" elapsed="0.000000">'['node-7']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.556397" level="INFO">${equal} = ('FAIL', "'['node-7']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.556397" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.555423" elapsed="0.000974"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.551854" elapsed="0.004543"/>
</for>
<var name="${iter}">['node-7']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.551854" elapsed="0.004543"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.557417" level="INFO">['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.557417" level="FAIL">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.557417" elapsed="0.000000">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.557417" level="INFO">${RESP} = ('FAIL', "'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000998"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.557417" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.000998"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.558415" level="FAIL">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.558415" elapsed="0.000000">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.558415" level="INFO">${RESP} = ('FAIL', "'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.558415" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.559417" level="FAIL">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.558415" elapsed="0.001002">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.559417" level="INFO">${RESP} = ('FAIL', "'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.558415" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000511"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000511"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.559417" elapsed="0.000511"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.559417" elapsed="0.000511"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.558415" elapsed="0.001513"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.559928" level="FAIL">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.559928" elapsed="0.000000">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.559928" level="INFO">${RESP} = ('FAIL', "'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.559928" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.560952" level="FAIL">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.560952" elapsed="0.000000">'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.560952" level="INFO">${RESP} = ('FAIL', "'['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.559928" elapsed="0.001024"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.559928" elapsed="0.001024"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.003535"/>
</for>
<var name="${iter}">['node-8']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.557417" elapsed="0.003535"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.560952" level="INFO">['node-8']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.560952" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.561952" level="FAIL">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.561952" elapsed="0.000000">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.561952" level="INFO">${RESP} = ('FAIL', "'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.561952" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.560952" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.561952" level="FAIL">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.561952" elapsed="0.000000">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.562951" level="INFO">${RESP} = ('FAIL', "'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.561952" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.561952" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.562951" level="FAIL">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.562951" elapsed="0.000000">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.562951" level="INFO">${RESP} = ('FAIL', "'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.562951" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.562951" elapsed="0.001001"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.562951" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.563952" level="FAIL">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.563952" elapsed="0.000000">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.563952" level="INFO">${RESP} = ('FAIL', "'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.563952" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.564951" level="FAIL">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.564951" elapsed="0.000000">'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.564951" level="INFO">${RESP} = ('FAIL', "'['node-8']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.564951" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.560952" elapsed="0.003999"/>
</for>
<var name="${iter}">['node-8']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.560952" elapsed="0.003999"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.565951" level="INFO">['node-8']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.565951" level="FAIL">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.565951" elapsed="0.000000">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.565951" level="INFO">${RESP} = ('FAIL', "'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.566950" level="FAIL">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.566950" elapsed="0.000000">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.566950" level="INFO">${RESP} = ('FAIL', "'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.566950" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.567976" level="FAIL">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.566950" elapsed="0.001026">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.567976" level="INFO">${RESP} = ('FAIL', "'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.566950" elapsed="0.001026"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.566950" elapsed="0.001026"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.567976" level="FAIL">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.567976" elapsed="0.000000">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.567976" level="INFO">${RESP} = ('FAIL', "'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.567976" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.567976" elapsed="0.000984"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.567976" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.568960" level="FAIL">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.568960" elapsed="0.000000">'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.568960" level="INFO">${RESP} = ('FAIL', "'['node-8']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000993"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.568960" elapsed="0.000993"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.568960" elapsed="0.000993"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.568960" elapsed="0.000993"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.004002"/>
</for>
<var name="${iter}">['node-8']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.565951" elapsed="0.004002"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.569953" level="INFO">['node-8']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.569953" level="FAIL">'['node-8']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.569953" elapsed="0.000000">'['node-8']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.569953" level="INFO">${RESP} = ('FAIL', "'['node-8']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.569953" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.000999"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.570952" level="FAIL">'['node-8']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.570952" elapsed="0.000000">'['node-8']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.570952" level="INFO">${RESP} = ('FAIL', "'['node-8']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.570952" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.570952" elapsed="0.000984"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.570952" elapsed="0.000984"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.571936" level="FAIL">'['node-8']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.571936" elapsed="0.000000">'['node-8']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.571936" level="INFO">${RESP} = ('FAIL', "'['node-8']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.571936" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.572935" level="FAIL">'['node-8']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.571936" elapsed="0.000999">'['node-8']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.572935" level="INFO">${RESP} = ('FAIL', "'['node-8']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.571936" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.571936" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.572935" level="FAIL">'['node-8']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.572935" elapsed="0.000000">'['node-8']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.572935" level="INFO">${RESP} = ('FAIL', "'['node-8']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.002982"/>
</for>
<var name="${iter}">['node-8']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.569953" elapsed="0.002982"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.574439" level="INFO">['node-8']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.001504"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.574439" level="FAIL">'['node-8']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.574439" elapsed="0.000000">'['node-8']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.574439" level="INFO">${RESP} = ('FAIL', "'['node-8']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.574439" level="FAIL">'['node-8']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.574439" elapsed="0.000000">'['node-8']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.574439" level="INFO">${RESP} = ('FAIL', "'['node-8']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.001518"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.001518"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.574439" elapsed="0.001518"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.001518"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.001518"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.575957" level="FAIL">'['node-8']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.575957" elapsed="0.000000">'['node-8']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.575957" level="INFO">${RESP} = ('FAIL', "'['node-8']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.575957" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.576965" level="FAIL">'['node-8']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.576965" elapsed="0.000000">'['node-8']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.576965" level="INFO">${RESP} = ('FAIL', "'['node-8']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.575957" elapsed="0.001008"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.575957" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.576965" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.577972" level="INFO">Checking if errors:[] is equal to ['node-8']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.577972" level="FAIL">'['node-8']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.577972" elapsed="0.000000">'['node-8']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.577972" level="INFO">${equal} = ('FAIL', "'['node-8']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.577972" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.001007"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.002008"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.576965" elapsed="0.002008"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.574439" elapsed="0.004534"/>
</for>
<var name="${iter}">['node-8']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.572935" elapsed="0.006038"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.578973" level="INFO">['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.578973" level="FAIL">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.578973" elapsed="0.000000">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.578973" level="INFO">${RESP} = ('FAIL', "'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.578973" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.000999"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.579972" level="FAIL">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.579972" elapsed="0.000000">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.579972" level="INFO">${RESP} = ('FAIL', "'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.579972" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.579972" level="FAIL">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.579972" elapsed="0.001000">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.580972" level="INFO">${RESP} = ('FAIL', "'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.579972" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.579972" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.580972" level="FAIL">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.580972" elapsed="0.000000">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.580972" level="INFO">${RESP} = ('FAIL', "'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.580972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.580972" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.580972" elapsed="0.001001"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.580972" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.581973" level="FAIL">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.581973" elapsed="0.000000">'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.581973" level="INFO">${RESP} = ('FAIL', "'['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.581973" elapsed="0.000999"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.003999"/>
</for>
<var name="${iter}">['node-5']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.578973" elapsed="0.003999"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.582972" level="INFO">['node-5']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.582972" level="FAIL">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.582972" elapsed="0.000000">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.582972" level="INFO">${RESP} = ('FAIL', "'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.001024"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.001024"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.582972" elapsed="0.001024"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.001024"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.001024"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.583996" level="FAIL">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.583996" elapsed="0.000000">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.583996" level="INFO">${RESP} = ('FAIL', "'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.583996" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.584990" level="FAIL">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.584990" elapsed="0.000000">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.584990" level="INFO">${RESP} = ('FAIL', "'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.583996" elapsed="0.000994"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.584990" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.583996" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.584990" level="FAIL">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.584990" elapsed="0.000000">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.585989" level="INFO">${RESP} = ('FAIL', "'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.584990" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.584990" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.585989" level="FAIL">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.585989" elapsed="0.000000">'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.585989" level="INFO">${RESP} = ('FAIL', "'['node-5']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.585989" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.585989" elapsed="0.000984"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.585989" elapsed="0.000984"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.585989" elapsed="0.000984"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.004001"/>
</for>
<var name="${iter}">['node-5']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.582972" elapsed="0.004001"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.586973" level="INFO">['node-5']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.586973" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.587973" level="FAIL">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.587973" elapsed="0.000000">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.587973" level="INFO">${RESP} = ('FAIL', "'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.586973" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.587973" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.586973" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.588971" level="FAIL">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.588971" elapsed="0.000000">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.588971" level="INFO">${RESP} = ('FAIL', "'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.588971" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.001000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.001000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.588971" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.588971" elapsed="0.001000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.588971" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.589971" level="FAIL">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.589971" elapsed="0.000000">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.589971" level="INFO">${RESP} = ('FAIL', "'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.589971" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.001001"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.001001"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.589971" elapsed="0.001001"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.589971" elapsed="0.001001"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.589971" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.590972" level="FAIL">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.590972" elapsed="0.000000">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.590972" level="INFO">${RESP} = ('FAIL', "'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.590972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.590972" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.590972" elapsed="0.001000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.590972" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.591972" level="FAIL">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.591972" elapsed="0.000000">'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.591972" level="INFO">${RESP} = ('FAIL', "'['node-5']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.591972" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.591972" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.591972" elapsed="0.001002"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.591972" elapsed="0.001002"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.586973" elapsed="0.006001"/>
</for>
<var name="${iter}">['node-5']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.586973" elapsed="0.006001"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.592974" level="INFO">['node-5']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.592974" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.592974" level="FAIL">'['node-5']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.592974" elapsed="0.000000">'['node-5']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.594219" level="INFO">${RESP} = ('FAIL', "'['node-5']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.592974" elapsed="0.001245"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.594219" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.592974" elapsed="0.001245"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.595225" level="FAIL">'['node-5']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.595225" elapsed="0.000000">'['node-5']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.595225" level="INFO">${RESP} = ('FAIL', "'['node-5']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.594219" elapsed="0.001006"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.595225" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.594219" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.596229" level="FAIL">'['node-5']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.596229" elapsed="0.000000">'['node-5']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.596229" level="INFO">${RESP} = ('FAIL', "'['node-5']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.596229" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.596229" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.597226" level="FAIL">'['node-5']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.597226" elapsed="0.000000">'['node-5']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.597226" level="INFO">${RESP} = ('FAIL', "'['node-5']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.597226" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.597226" elapsed="0.000999"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.597226" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.598225" level="FAIL">'['node-5']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.598225" elapsed="0.000000">'['node-5']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.598225" level="INFO">${RESP} = ('FAIL', "'['node-5']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.598225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.599227" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.599227" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.001002"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.001002"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.598225" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.598225" elapsed="0.001002"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.598225" elapsed="0.001002"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.592974" elapsed="0.006253"/>
</for>
<var name="${iter}">['node-5']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.592974" elapsed="0.006253"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.599227" level="INFO">['node-5']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.599227" level="FAIL">'['node-5']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.599227" elapsed="0.000000">'['node-5']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.599227" level="INFO">${RESP} = ('FAIL', "'['node-5']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.599227" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.599227" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.599227" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.000999"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.600226" level="FAIL">'['node-5']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.600226" elapsed="0.000000">'['node-5']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.600226" level="INFO">${RESP} = ('FAIL', "'['node-5']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.600226" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.601225" level="FAIL">'['node-5']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.601225" elapsed="0.000000">'['node-5']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.601225" level="INFO">${RESP} = ('FAIL', "'['node-5']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.600226" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.601225" level="FAIL">'['node-5']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.601225" elapsed="0.000000">'['node-5']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.601225" level="INFO">${RESP} = ('FAIL', "'['node-5']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.601225" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.601225" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.602226" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.602226" level="INFO">Checking if errors:[] is equal to ['node-5']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.603228" level="FAIL">'['node-5']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.603228" elapsed="0.000000">'['node-5']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.603228" level="INFO">${equal} = ('FAIL', "'['node-5']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.001002"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.602226" elapsed="0.001002"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.004001"/>
</for>
<var name="${iter}">['node-5']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.599227" elapsed="0.004001"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.603228" level="INFO">['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.604226" level="FAIL">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.604226" elapsed="0.000000">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.604226" level="INFO">${RESP} = ('FAIL', "'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.604226" level="FAIL">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.604226" elapsed="0.000000">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.604226" level="INFO">${RESP} = ('FAIL', "'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.605226" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.604226" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.604226" elapsed="0.001000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.604226" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.605499" level="FAIL">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.605499" elapsed="0.000000">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.605499" level="INFO">${RESP} = ('FAIL', "'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.605499" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.606563" level="FAIL">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.606563" elapsed="0.000000">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.606563" level="INFO">${RESP} = ('FAIL', "'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.605499" elapsed="0.001064"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.605499" elapsed="0.001064"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.606563" level="FAIL">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.606563" elapsed="0.000000">'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.606563" level="INFO">${RESP} = ('FAIL', "'['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.606563" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607588" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607588" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607588" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607762" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607762" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.607588" elapsed="0.000174"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.607588" elapsed="0.000174"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.606563" elapsed="0.001199"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.606563" elapsed="0.001199"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.606563" elapsed="0.001199"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.004534"/>
</for>
<var name="${iter}">['node-6']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.603228" elapsed="0.004534"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.607762" level="INFO">['node-6']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.607762" level="FAIL">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.607762" elapsed="0.000000">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.607762" level="INFO">${RESP} = ('FAIL', "'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.607762" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.608766" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.607762" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.001004"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.608766" level="FAIL">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.608766" elapsed="0.000514">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.609280" level="INFO">${RESP} = ('FAIL', "'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.608766" elapsed="0.000514"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.608766" elapsed="0.000514"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.609280" level="FAIL">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.609280" elapsed="0.000000">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.609280" level="INFO">${RESP} = ('FAIL', "'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.609280" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.610287" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.609280" elapsed="0.001007"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.609280" elapsed="0.001007"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.610794" level="FAIL">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.610794" elapsed="0.000000">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.610794" level="INFO">${RESP} = ('FAIL', "'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.610794" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.610794" level="FAIL">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.610794" elapsed="0.000000">'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.611819" level="INFO">${RESP} = ('FAIL', "'['node-6']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.610794" elapsed="0.001025"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.610794" elapsed="0.001025"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.004057"/>
</for>
<var name="${iter}">['node-6']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.607762" elapsed="0.004057"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.611819" level="INFO">['node-6']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.611819" level="FAIL">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.611819" elapsed="0.000000">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.612837" level="INFO">${RESP} = ('FAIL', "'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.001018"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.612837" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.613835" level="FAIL">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.612837" elapsed="0.000998">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.613835" level="INFO">${RESP} = ('FAIL', "'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.612837" elapsed="0.000998"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.612837" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.613835" level="FAIL">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.613835" elapsed="0.000000">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.613835" level="INFO">${RESP} = ('FAIL', "'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.613835" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.613835" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.614836" level="FAIL">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.614836" elapsed="0.000000">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.614836" level="INFO">${RESP} = ('FAIL', "'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.614836" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.614836" elapsed="0.001000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.614836" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.615836" level="FAIL">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.615836" elapsed="0.000000">'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.615836" level="INFO">${RESP} = ('FAIL', "'['node-6']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.615836" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.004017"/>
</for>
<var name="${iter}">['node-6']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.611819" elapsed="0.004017"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.616969" level="INFO">['node-6']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.616969" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.616969" level="FAIL">'['node-6']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.616969" elapsed="0.000506">'['node-6']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.617475" level="INFO">${RESP} = ('FAIL', "'['node-6']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.616969" elapsed="0.000506"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.616969" elapsed="0.000506"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.617475" level="FAIL">'['node-6']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.617475" elapsed="0.000000">'['node-6']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.617475" level="INFO">${RESP} = ('FAIL', "'['node-6']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.617475" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.617475" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.617475" elapsed="0.001010"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.617475" elapsed="0.001010"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.618485" level="FAIL">'['node-6']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.618485" elapsed="0.000000">'['node-6']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.618485" level="INFO">${RESP} = ('FAIL', "'['node-6']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.001009"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.001009"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.618485" elapsed="0.001009"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.618485" elapsed="0.001009"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.618485" elapsed="0.001009"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.619494" level="FAIL">'['node-6']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.619494" elapsed="0.000000">'['node-6']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.619494" level="INFO">${RESP} = ('FAIL', "'['node-6']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.619494" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.620485" level="FAIL">'['node-6']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.620485" elapsed="0.000000">'['node-6']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.620485" level="INFO">${RESP} = ('FAIL', "'['node-6']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.620485" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.616969" elapsed="0.003516"/>
</for>
<var name="${iter}">['node-6']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.616969" elapsed="0.003516"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.621484" level="INFO">['node-6']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.620485" elapsed="0.000999"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.621484" level="FAIL">'['node-6']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.621484" elapsed="0.000000">'['node-6']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.621484" level="INFO">${RESP} = ('FAIL', "'['node-6']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.622517" level="FAIL">'['node-6']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.621484" elapsed="0.001033">'['node-6']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.622517" level="INFO">${RESP} = ('FAIL', "'['node-6']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.001033"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.001033"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.622517" level="FAIL">'['node-6']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.622517" elapsed="0.000000">'['node-6']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.622517" level="INFO">${RESP} = ('FAIL', "'['node-6']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.622517" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.623482" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.622517" elapsed="0.000965"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.622517" elapsed="0.000965"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.622517" elapsed="0.000965"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.624500" level="FAIL">'['node-6']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.624500" elapsed="0.000000">'['node-6']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.624500" level="INFO">${RESP} = ('FAIL', "'['node-6']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.623482" elapsed="0.001018"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.623482" elapsed="0.001018"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.624500" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.624500" level="INFO">Checking if errors:[] is equal to ['node-6']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.624500" level="FAIL">'['node-6']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.624500" elapsed="0.000000">'['node-6']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.626011" level="INFO">${equal} = ('FAIL', "'['node-6']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.001511"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.626011" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.626011" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.626011" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.626011" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.626011" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.001511"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.001511"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.624500" elapsed="0.001511"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.621484" elapsed="0.004527"/>
</for>
<var name="${iter}">['node-6']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.620485" elapsed="0.005526"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.627022" level="INFO">['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.627022" level="FAIL">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.627022" elapsed="0.000000">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.627022" level="INFO">${RESP} = ('FAIL', "'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.001008"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.001008"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.627022" elapsed="0.001008"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.001008"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.628030" level="FAIL">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.628030" elapsed="0.000000">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.628030" level="INFO">${RESP} = ('FAIL', "'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000998"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.628030" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.628030" elapsed="0.000998"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.628030" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.629028" level="FAIL">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.629028" elapsed="0.000000">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.629028" level="INFO">${RESP} = ('FAIL', "'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.629028" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.630027" level="FAIL">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.630027" elapsed="0.000000">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.630027" level="INFO">${RESP} = ('FAIL', "'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.630027" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.630027" level="FAIL">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.630027" elapsed="0.000000">'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.631027" level="INFO">${RESP} = ('FAIL', "'['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.630027" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.630027" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.004005"/>
</for>
<var name="${iter}">['node-3']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.627022" elapsed="0.004005"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.631027" level="INFO">['node-3']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.632028" level="FAIL">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.631027" elapsed="0.001001">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.632028" level="INFO">${RESP} = ('FAIL', "'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.632028" level="FAIL">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.632028" elapsed="0.000000">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.632028" level="INFO">${RESP} = ('FAIL', "'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.632028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.632028" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.633030" level="FAIL">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.633030" elapsed="0.000000">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.633030" level="INFO">${RESP} = ('FAIL', "'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.633030" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.633030" elapsed="0.000998"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.633030" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.634028" level="FAIL">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.634028" elapsed="0.000000">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.634028" level="INFO">${RESP} = ('FAIL', "'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.634028" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.634028" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.635027" level="FAIL">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.635027" elapsed="0.000000">'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.635027" level="INFO">${RESP} = ('FAIL', "'['node-3']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.635027" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.004000"/>
</for>
<var name="${iter}">['node-3']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.631027" elapsed="0.004000"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.636030" level="INFO">['node-3']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.635027" elapsed="0.001003"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.636030" level="FAIL">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.636030" elapsed="0.000000">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.636030" level="INFO">${RESP} = ('FAIL', "'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.636030" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.637070" level="FAIL">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.637070" elapsed="0.000000">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.637070" level="INFO">${RESP} = ('FAIL', "'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.637070" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.638055" level="FAIL">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.638055" elapsed="0.000000">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.638055" level="INFO">${RESP} = ('FAIL', "'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.637070" elapsed="0.000985"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.638055" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.637070" elapsed="0.000985"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.638055" level="FAIL">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.638055" elapsed="0.000000">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.639047" level="INFO">${RESP} = ('FAIL', "'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.638055" elapsed="0.000992"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.638055" elapsed="0.000992"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.639047" level="FAIL">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.639047" elapsed="0.000000">'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.639047" level="INFO">${RESP} = ('FAIL', "'['node-3']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.639047" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.639047" elapsed="0.000985"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.639047" elapsed="0.000985"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.639047" elapsed="0.000985"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.636030" elapsed="0.004002"/>
</for>
<var name="${iter}">['node-3']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.635027" elapsed="0.005005"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.640032" level="INFO">['node-3']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.640032" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.640032" level="FAIL">'['node-3']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.640032" elapsed="0.000000">'['node-3']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.641062" level="INFO">${RESP} = ('FAIL', "'['node-3']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.640032" elapsed="0.001030"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.640032" elapsed="0.001030"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.641062" level="FAIL">'['node-3']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.641062" elapsed="0.000000">'['node-3']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.641062" level="INFO">${RESP} = ('FAIL', "'['node-3']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.641062" elapsed="0.000967"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.641062" elapsed="0.000967"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.641062" elapsed="0.000967"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.642029" level="FAIL">'['node-3']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.642029" elapsed="0.000000">'['node-3']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.642029" level="INFO">${RESP} = ('FAIL', "'['node-3']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.643028" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.643028" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.642029" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.642029" elapsed="0.000999"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.642029" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.643028" level="FAIL">'['node-3']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.643028" elapsed="0.000000">'['node-3']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.643028" level="INFO">${RESP} = ('FAIL', "'['node-3']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.643028" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.643028" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.643028" elapsed="0.001063"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.643028" elapsed="0.001063"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.643028" elapsed="0.001063"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.644091" level="FAIL">'['node-3']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.644091" elapsed="0.000000">'['node-3']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.644091" level="INFO">${RESP} = ('FAIL', "'['node-3']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.644091" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.640032" elapsed="0.004059"/>
</for>
<var name="${iter}">['node-3']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.640032" elapsed="0.005065"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.645097" level="INFO">['node-3']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.645097" level="FAIL">'['node-3']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.645097" elapsed="0.000000">'['node-3']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.645097" level="INFO">${RESP} = ('FAIL', "'['node-3']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.646097" level="FAIL">'['node-3']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.646097" elapsed="0.000000">'['node-3']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.646097" level="INFO">${RESP} = ('FAIL', "'['node-3']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.646097" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.647096" level="FAIL">'['node-3']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.647096" elapsed="0.000000">'['node-3']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.647096" level="INFO">${RESP} = ('FAIL', "'['node-3']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.647096" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.648096" level="FAIL">'['node-3']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.648096" elapsed="0.000000">'['node-3']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.648096" level="INFO">${RESP} = ('FAIL', "'['node-3']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.647096" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.647096" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.648096" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.648096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.649099" level="INFO">Checking if errors:[] is equal to ['node-3']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.649099" level="FAIL">'['node-3']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.649099" elapsed="0.000000">'['node-3']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.649099" level="INFO">${equal} = ('FAIL', "'['node-3']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.648096" elapsed="0.001003"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.648096" elapsed="0.001003"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.004002"/>
</for>
<var name="${iter}">['node-3']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.645097" elapsed="0.004002"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.649099" level="INFO">['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.650098" level="FAIL">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.650098" elapsed="0.000000">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.650098" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.651101" level="FAIL">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.651101" elapsed="0.000000">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.651101" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.001003"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.651101" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.001003"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.651101" level="FAIL">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.651101" elapsed="0.000000">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.652098" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.651101" elapsed="0.000997"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.651101" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.652098" level="FAIL">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.652098" elapsed="0.000000">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.652098" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000999"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.652098" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.652098" elapsed="0.000999"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.652098" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.653097" level="FAIL">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.653097" elapsed="0.000000">'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.653097" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.653097" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.650098" elapsed="0.002999"/>
</for>
<var name="${iter}">['cpe-14.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.649099" elapsed="0.003998"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.654096" level="INFO">['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.654096" level="FAIL">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.654096" elapsed="0.000000">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.654096" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.655097" level="FAIL">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.655097" elapsed="0.000000">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.655097" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.655097" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.655097" level="FAIL">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.655097" elapsed="0.001001">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.656098" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.655097" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.655097" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.656098" level="FAIL">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.656098" elapsed="0.000000">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.656098" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.001017"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.001017"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.656098" elapsed="0.001017"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.656098" elapsed="0.001017"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.656098" elapsed="0.001017"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.657115" level="FAIL">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.657115" elapsed="0.000000">'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.657115" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.657115" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.654096" elapsed="0.003019"/>
</for>
<var name="${iter}">['cpe-14.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.653097" elapsed="0.004018"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.658116" level="INFO">['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.658116" level="FAIL">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.658116" elapsed="0.000000">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.658116" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.658116" level="FAIL">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.658116" elapsed="0.000000">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.658116" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.658116" elapsed="0.001532"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.001532"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.001532"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.659648" level="FAIL">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.659648" elapsed="0.000000">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.659648" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.659648" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.659648" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.660668" level="FAIL">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.660668" elapsed="0.000000">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.660668" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.660668" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.661669" level="FAIL">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.661669" elapsed="0.000000">'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.661669" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.660668" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.660668" elapsed="0.001001"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.003553"/>
</for>
<var name="${iter}">['cpe-14.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.658116" elapsed="0.003553"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.661669" level="INFO">['cpe-14.nso-topology']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.661669" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.662692" level="FAIL">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.662692" elapsed="0.000000">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.662692" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.662692" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.662692" level="FAIL">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.662692" elapsed="0.000000">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.663686" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.662692" elapsed="0.000994"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.662692" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.663686" level="FAIL">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.663686" elapsed="0.000000">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.663686" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.663686" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.663686" elapsed="0.000982"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.663686" elapsed="0.000982"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.663686" elapsed="0.000982"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.664668" level="FAIL">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.664668" elapsed="0.000000">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.664668" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.664668" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.665665" level="FAIL">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.665665" elapsed="0.000000">'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.665665" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.665665" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.661669" elapsed="0.003996"/>
</for>
<var name="${iter}">['cpe-14.nso-topology']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.661669" elapsed="0.003996"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.666695" level="INFO">['cpe-14.nso-topology']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.666695" level="FAIL">'['cpe-14.nso-topology']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.666695" elapsed="0.000000">'['cpe-14.nso-topology']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.666695" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.667666" level="FAIL">'['cpe-14.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.667666" elapsed="0.000000">'['cpe-14.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.667666" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000971"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.667666" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.000971"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.668666" level="FAIL">'['cpe-14.nso-topology']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.668666" elapsed="0.000000">'['cpe-14.nso-topology']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.668666" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.001029"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.668666" elapsed="0.001029"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.668666" elapsed="0.001029"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.668666" elapsed="0.001029"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.669695" level="FAIL">'['cpe-14.nso-topology']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.669695" elapsed="0.000000">'['cpe-14.nso-topology']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.669695" level="INFO">${RESP} = ('FAIL', "'['cpe-14.nso-topology']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.669695" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.670685" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.669695" elapsed="0.000990"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.670685" level="INFO">Checking if errors:[] is equal to ['cpe-14.nso-topology']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.670685" level="FAIL">'['cpe-14.nso-topology']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.670685" elapsed="0.000000">'['cpe-14.nso-topology']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.670685" level="INFO">${equal} = ('FAIL', "'['cpe-14.nso-topology']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.670685" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.669695" elapsed="0.000990"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.666695" elapsed="0.004990"/>
</for>
<var name="${iter}">['cpe-14.nso-topology']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.665665" elapsed="0.006020"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.671685" level="INFO">['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.671685" level="FAIL">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.671685" elapsed="0.000000">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.671685" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000985"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000985"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.671685" elapsed="0.000985"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.000985"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.000985"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.672670" level="FAIL">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.672670" elapsed="0.000000">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.672670" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.001013"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.001013"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.672670" elapsed="0.001013"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.672670" elapsed="0.001013"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.672670" elapsed="0.001013"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.673683" level="FAIL">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.673683" elapsed="0.000000">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.673683" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.673683" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.674685" level="FAIL">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.674685" elapsed="0.000000">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.674685" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.674685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000546"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000546"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.674685" elapsed="0.000546"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.674685" elapsed="0.000546"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.673683" elapsed="0.001548"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.675231" level="FAIL">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.675231" elapsed="0.000000">'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.675231" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.675231" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.003546"/>
</for>
<var name="${iter}">['cpe-11.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.671685" elapsed="0.003546"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.676282" level="INFO">['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.675231" elapsed="0.001051"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.676282" level="FAIL">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.676282" elapsed="0.000000">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.676282" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.676282" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.676282" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.676282" elapsed="0.001012"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.676282" elapsed="0.001012"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.676282" elapsed="0.001012"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.677294" level="FAIL">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.677294" elapsed="0.000000">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.677294" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.677294" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.677294" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.677294" elapsed="0.001006"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.677294" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.678300" level="FAIL">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.678300" elapsed="0.000000">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.678300" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.678300" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679328" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679328" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679491" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679491" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679491" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.679328" elapsed="0.000163"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.679328" elapsed="0.000163"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.678300" elapsed="0.001191"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.678300" elapsed="0.001191"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.678300" elapsed="0.001191"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.679998" level="FAIL">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.679998" elapsed="0.000000">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.679998" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.679491" elapsed="0.000507"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.679998" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.679491" elapsed="0.000507"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.681044" level="FAIL">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.679998" elapsed="0.001046">'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.681044" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.679998" elapsed="0.001046"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.679998" elapsed="0.001046"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.676282" elapsed="0.004762"/>
</for>
<var name="${iter}">['cpe-11.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.675231" elapsed="0.005813"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.681044" level="INFO">['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.681044" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.682007" level="FAIL">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.682007" elapsed="0.000000">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.682007" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.682007" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.681044" elapsed="0.000963"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.683006" level="FAIL">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.682007" elapsed="0.000999">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.683006" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.682007" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.682007" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.683006" level="FAIL">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.683006" elapsed="0.000000">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.683006" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.001021"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.001021"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.683006" elapsed="0.001021"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.683006" elapsed="0.001021"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.683006" elapsed="0.001021"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.684027" level="FAIL">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.684027" elapsed="0.000000">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.684027" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.684027" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.685023" level="FAIL">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.685023" elapsed="0.000000">'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.685023" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.681044" elapsed="0.003979"/>
</for>
<var name="${iter}">['cpe-11.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.681044" elapsed="0.003979"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.685023" level="INFO">['cpe-11.nso-topology']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.686022" level="FAIL">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.686022" elapsed="0.000000">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.686022" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.686022" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.687005" level="FAIL">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.687005" elapsed="0.000000">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.687005" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.686022" elapsed="0.000983"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.686022" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.687005" level="FAIL">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.687005" elapsed="0.000000">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.687005" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.687005" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.687005" elapsed="0.001019"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.687005" elapsed="0.001019"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.687005" elapsed="0.001019"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.688024" level="FAIL">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.688024" elapsed="0.000000">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.688024" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000999"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.688024" elapsed="0.000999"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.688024" elapsed="0.000999"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.688024" elapsed="0.000999"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.689023" level="FAIL">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.689023" elapsed="0.000000">'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.689023" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.689023" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.004000"/>
</for>
<var name="${iter}">['cpe-11.nso-topology']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.685023" elapsed="0.004000"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.690023" level="INFO">['cpe-11.nso-topology']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.690023" level="FAIL">'['cpe-11.nso-topology']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.690023" elapsed="0.000000">'['cpe-11.nso-topology']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.690023" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.691048" level="FAIL">'['cpe-11.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.690023" elapsed="0.001025">'['cpe-11.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.691048" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.001025"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.691048" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.001025"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.691048" level="FAIL">'['cpe-11.nso-topology']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.691048" elapsed="0.000000">'['cpe-11.nso-topology']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.692006" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.691048" elapsed="0.000958"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.691048" elapsed="0.000958"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.692006" level="FAIL">'['cpe-11.nso-topology']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.692006" elapsed="0.000000">'['cpe-11.nso-topology']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.692006" level="INFO">${RESP} = ('FAIL', "'['cpe-11.nso-topology']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.693004" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.693004" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.692006" elapsed="0.000998"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.693004" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.694063" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.693004" elapsed="0.001059"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.694063" level="INFO">Checking if errors:[] is equal to ['cpe-11.nso-topology']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.694063" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.694063" level="FAIL">'['cpe-11.nso-topology']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.694063" elapsed="0.000000">'['cpe-11.nso-topology']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.694063" level="INFO">${equal} = ('FAIL', "'['cpe-11.nso-topology']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.694063" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.695073" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.695073" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.695073" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.694063" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.694063" elapsed="0.001010"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.694063" elapsed="0.001010"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.694063" elapsed="0.001010"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.693004" elapsed="0.002069"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.690023" elapsed="0.005050"/>
</for>
<var name="${iter}">['cpe-11.nso-topology']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.689023" elapsed="0.006050"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.695073" level="INFO">['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.695073" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.695073" level="FAIL">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.695073" elapsed="0.000000">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.695073" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.695073" elapsed="0.001000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.695073" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.696073" level="FAIL">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.696073" elapsed="0.000000">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.696073" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.696073" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.696073" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.696073" elapsed="0.000996"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.696073" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.697069" level="FAIL">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.697069" elapsed="0.000000">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.697069" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.001002"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.001002"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.697069" elapsed="0.001002"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.697069" elapsed="0.001002"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.697069" elapsed="0.001002"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.698071" level="FAIL">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.698071" elapsed="0.000000">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.698071" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.698071" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.699070" level="FAIL">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.698071" elapsed="0.000999">'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.699070" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.698071" elapsed="0.000999"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.698071" elapsed="0.000999"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.695073" elapsed="0.003997"/>
</for>
<var name="${iter}">['cpe-12.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.695073" elapsed="0.003997"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.699070" level="INFO">['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.700071" level="FAIL">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.700071" elapsed="0.000000">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.700071" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.700071" level="FAIL">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.700071" elapsed="0.000000">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.700071" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.700071" elapsed="0.001038"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.700071" elapsed="0.001038"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.700071" elapsed="0.001038"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.701109" level="FAIL">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.701109" elapsed="0.000000">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.701109" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.701109" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.702095" level="FAIL">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.702095" elapsed="0.000000">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.702095" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.702095" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.701109" elapsed="0.000986"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.702095" level="FAIL">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.702095" elapsed="0.001017">'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.703112" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.702095" elapsed="0.001017"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.702095" elapsed="0.001017"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.004042"/>
</for>
<var name="${iter}">['cpe-12.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.699070" elapsed="0.004042"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.703112" level="INFO">['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.704095" level="FAIL">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.703112" elapsed="0.000983">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.704095" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.000983"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.000983"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.704095" level="FAIL">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.704095" elapsed="0.000000">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.704095" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000994"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000994"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.704095" elapsed="0.000994"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.704095" elapsed="0.000994"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.704095" elapsed="0.000994"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.705089" level="FAIL">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.705089" elapsed="0.000000">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.705089" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.705089" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.706088" level="FAIL">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.706088" elapsed="0.000000">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.706088" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.706088" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.706088" level="FAIL">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.706088" elapsed="0.001002">'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.707090" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.706088" elapsed="0.001002"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.706088" elapsed="0.001002"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.003978"/>
</for>
<var name="${iter}">['cpe-12.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.703112" elapsed="0.003978"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.707090" level="INFO">['cpe-12.nso-topology']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.707090" level="FAIL">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.707090" elapsed="0.000980">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.708070" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.000980"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.000980"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.708070" level="FAIL">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.708070" elapsed="0.000000">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.708070" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.708070" level="FAIL">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.708070" elapsed="0.000000">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.709594" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.001524"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.709594" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.708070" elapsed="0.001524"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.710616" level="FAIL">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.710616" elapsed="0.000000">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.710616" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.710616" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.710616" elapsed="0.001005"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.710616" elapsed="0.001005"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.710616" elapsed="0.001005"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.711621" level="FAIL">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.711621" elapsed="0.000000">'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.711621" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.711621" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.711621" elapsed="0.001000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.711621" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.005531"/>
</for>
<var name="${iter}">['cpe-12.nso-topology']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.707090" elapsed="0.005531"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.712621" level="INFO">['cpe-12.nso-topology']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.712621" level="FAIL">'['cpe-12.nso-topology']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.712621" elapsed="0.000000">'['cpe-12.nso-topology']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.712621" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.713621" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.712621" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.001000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.713621" level="FAIL">'['cpe-12.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.713621" elapsed="0.000000">'['cpe-12.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.714652" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.713621" elapsed="0.001031"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.713621" elapsed="0.001031"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.714652" level="FAIL">'['cpe-12.nso-topology']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.714652" elapsed="0.000000">'['cpe-12.nso-topology']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.714652" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000972"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000972"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.714652" elapsed="0.000972"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.714652" elapsed="0.000972"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.714652" elapsed="0.000972"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.715624" level="FAIL">'['cpe-12.nso-topology']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.715624" elapsed="0.000000">'['cpe-12.nso-topology']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.715624" level="INFO">${RESP} = ('FAIL', "'['cpe-12.nso-topology']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.715624" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.716666" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.715624" elapsed="0.001042"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.716666" level="INFO">Checking if errors:[] is equal to ['cpe-12.nso-topology']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.716666" level="FAIL">'['cpe-12.nso-topology']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.716666" elapsed="0.000000">'['cpe-12.nso-topology']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.716666" level="INFO">${equal} = ('FAIL', "'['cpe-12.nso-topology']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.716666" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.715624" elapsed="0.001042"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.004045"/>
</for>
<var name="${iter}">['cpe-12.nso-topology']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.712621" elapsed="0.004045"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.717624" level="INFO">['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.717624" level="FAIL">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.717624" elapsed="0.000000">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.717624" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.001032"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.001032"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.717624" elapsed="0.001032"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.001032"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.001032"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.718656" level="FAIL">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.718656" elapsed="0.000000">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.718656" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.718656" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.719644" level="FAIL">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.718656" elapsed="0.000988">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.719644" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.718656" elapsed="0.000988"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.718656" elapsed="0.000988"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.719644" level="FAIL">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.719644" elapsed="0.000000">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.719644" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.719644" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000997"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.719644" elapsed="0.000997"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.719644" elapsed="0.000997"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.719644" elapsed="0.000997"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.720641" level="FAIL">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.720641" elapsed="0.000000">'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.720641" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.720641" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.720641" elapsed="0.001000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.720641" elapsed="0.001000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.004017"/>
</for>
<var name="${iter}">['cpe-13.nso-topology']:admin_state:['ROBOT_ADMIN_STATE_UP']</var>
<status status="PASS" start="2024-12-12T15:58:37.717624" elapsed="0.004017"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.721641" level="INFO">['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.721641" level="FAIL">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.721641" elapsed="0.000000">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.721641" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.001024"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.722665" level="FAIL">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.722665" elapsed="0.000000">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.722665" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.722665" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.723624" level="FAIL">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.722665" elapsed="0.000959">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.723624" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.722665" elapsed="0.000959"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.722665" elapsed="0.000959"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.723624" level="FAIL">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.723624" elapsed="0.000000">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.723624" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.723624" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.723624" elapsed="0.001023"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.723624" elapsed="0.001023"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.723624" elapsed="0.001023"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.724647" level="FAIL">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.724647" elapsed="0.000000">'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.724647" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.003006"/>
</for>
<var name="${iter}">['cpe-13.nso-topology']:operational_state:['ROBOT_OPER_STATE_OK']</var>
<status status="PASS" start="2024-12-12T15:58:37.721641" elapsed="0.003006"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.724647" level="INFO">['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.726158" level="FAIL">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.726158" elapsed="0.000000">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.726158" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.001511"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.726158" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.001511"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.727166" level="FAIL">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.727166" elapsed="0.000000">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.727166" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.726158" elapsed="0.001008"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.727166" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.726158" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.728174" level="FAIL">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.727166" elapsed="0.001008">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.728174" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.727166" elapsed="0.001008"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.728174" elapsed="0.000000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.727166" elapsed="0.001008"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.729212" level="FAIL">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.729212" elapsed="0.000000">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.729212" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.728174" elapsed="0.001038"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.729212" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.728174" elapsed="0.001038"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.729212" level="FAIL">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.729212" elapsed="0.000962">'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.730174" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.729212" elapsed="0.000962"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.729212" elapsed="0.000962"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.005527"/>
</for>
<var name="${iter}">['cpe-13.nso-topology']:reachability_state:['CONN_STATE_REACHABLE']</var>
<status status="PASS" start="2024-12-12T15:58:37.724647" elapsed="0.005527"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.730174" level="INFO">['cpe-13.nso-topology']:nso_state:['SYNCED']</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.731194" level="FAIL">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.730174" elapsed="0.001020">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.731194" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.001020"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.001020"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.731194" level="FAIL">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.731194" elapsed="0.000000">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.731194" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.731194" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.731194" elapsed="0.001006"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.731194" elapsed="0.001006"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.731194" elapsed="0.001006"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.732200" level="FAIL">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.732200" elapsed="0.000000">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.732200" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.732200" elapsed="0.000996"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.732200" elapsed="0.000996"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.732200" elapsed="0.000996"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.733196" level="FAIL">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.733196" elapsed="0.000000">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.733196" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.733196" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.734192" level="FAIL">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.734192" elapsed="0.000000">'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'</status>
</kw>
<msg time="2024-12-12T15:58:37.734192" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:nso_state:['SYNCED']' does not contain 'errors'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.004018"/>
</for>
<var name="${iter}">['cpe-13.nso-topology']:nso_state:['SYNCED']</var>
<status status="PASS" start="2024-12-12T15:58:37.730174" elapsed="0.004018"/>
</iter>
<iter>
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.734192" level="INFO">['cpe-13.nso-topology']:errors:[]</msg>
<arg>${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.735191" level="FAIL">'['cpe-13.nso-topology']:errors:[]' does not contain 'DOWN'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.735191" elapsed="0.000000">'['cpe-13.nso-topology']:errors:[]' does not contain 'DOWN'</status>
</kw>
<msg time="2024-12-12T15:58:37.735191" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:errors:[]' does not contain 'DOWN'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</if>
<var name="${validate}">DOWN</var>
<status status="PASS" start="2024-12-12T15:58:37.735191" elapsed="0.000000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.736192" level="FAIL">'['cpe-13.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.735191" elapsed="0.001001">'['cpe-13.nso-topology']:errors:[]' does not contain 'UNREACHABLE'</status>
</kw>
<msg time="2024-12-12T15:58:37.736192" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:errors:[]' does not contain 'UNREACHABLE'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.735191" elapsed="0.001001"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</if>
<var name="${validate}">UNREACHABLE</var>
<status status="PASS" start="2024-12-12T15:58:37.735191" elapsed="0.001001"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.736192" level="FAIL">'['cpe-13.nso-topology']:errors:[]' does not contain 'ERROR'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.736192" elapsed="0.000000">'['cpe-13.nso-topology']:errors:[]' does not contain 'ERROR'</status>
</kw>
<msg time="2024-12-12T15:58:37.736192" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:errors:[]' does not contain 'ERROR'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.736192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.736192" elapsed="0.001000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.736192" elapsed="0.001000"/>
</if>
<var name="${validate}">ERROR</var>
<status status="PASS" start="2024-12-12T15:58:37.736192" elapsed="0.001000"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.737192" level="FAIL">'['cpe-13.nso-topology']:errors:[]' does not contain 'DEGRADED'</msg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.737192" elapsed="0.000000">'['cpe-13.nso-topology']:errors:[]' does not contain 'DEGRADED'</status>
</kw>
<msg time="2024-12-12T15:58:37.737192" level="INFO">${RESP} = ('FAIL', "'['cpe-13.nso-topology']:errors:[]' does not contain 'DEGRADED'")</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.001004"/>
</branch>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.001004"/>
</if>
<status status="NOT RUN" start="2024-12-12T15:58:37.737192" elapsed="0.001004"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.737192" elapsed="0.001004"/>
</if>
<var name="${validate}">DEGRADED</var>
<status status="PASS" start="2024-12-12T15:58:37.737192" elapsed="0.001004"/>
</iter>
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Contain" owner="BuiltIn">
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.738196" level="INFO">${RESP} = ('PASS', None)</msg>
<var>${RESP}</var>
<arg>Should Contain</arg>
<arg>${iter}</arg>
<arg>${validate}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Log" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.738196" level="INFO">Checking if errors:[] is equal to ['cpe-13.nso-topology']:errors:[]</msg>
<arg>Checking if errors:[] is equal to ${iter}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Should Not Contain" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.738196" level="FAIL">'['cpe-13.nso-topology']:errors:[]' contains 'errors:[]'</msg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Fails if ``container`` contains ``item`` one or more times.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.738196" elapsed="0.000000">'['cpe-13.nso-topology']:errors:[]' contains 'errors:[]'</status>
</kw>
<msg time="2024-12-12T15:58:37.738196" level="INFO">${equal} = ('FAIL', "'['cpe-13.nso-topology']:errors:[]' contains 'errors:[]'")</msg>
<var>${equal}</var>
<arg>Should Not Contain</arg>
<arg>${iter}</arg>
<arg>errors:[]</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${equal}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${iter}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.738196" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>---</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<status status="NOT RUN" start="2024-12-12T15:58:37.738196" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000995"/>
</if>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000995"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000995"/>
</if>
<var name="${validate}">errors</var>
<status status="PASS" start="2024-12-12T15:58:37.738196" elapsed="0.000995"/>
</iter>
<var>${validate}</var>
<value>@{VALIDATE_LIST}</value>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.004999"/>
</for>
<var name="${iter}">['cpe-13.nso-topology']:errors:[]</var>
<status status="PASS" start="2024-12-12T15:58:37.734192" elapsed="0.004999"/>
</iter>
<var>${iter}</var>
<value>@{CNC_DEVICES_HEALTH}</value>
<status status="PASS" start="2024-12-12T15:58:37.457856" elapsed="0.281335"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.739191" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.739191" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.739191" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.739191" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.739191" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.739191" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.739191" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} Failures were seen on one or more devices.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.739191" elapsed="0.000982"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.740173" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.740173" level="INFO">${MSG} = --Validate CNC Device Health--

No device errors detect. Errors:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nNo device errors detect. Errors:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.740173" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.740173" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Validates the CNC services/applications based on the suite variable of ``CNC_DEVICES_HEALTH``</doc>
<status status="PASS" start="2024-12-12T15:58:37.456859" elapsed="0.283314"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.740173" level="INFO">Set test message to:
--Validate CNC Device Health--

No device errors detect. Errors:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.740173" elapsed="0.000000"/>
</kw>
<doc>Validate CNC Device health and state info is correct as per the file spec [cnc-devices.txt]</doc>
<tag>DEVICE</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.455823" elapsed="0.284350">--Validate CNC Device Health--

No device errors detect. Errors:0
</status>
</test>
<test id="s1-t36" name="Validate CNC SWIM Images" line="283">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.741173" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.741173" elapsed="0.000000"/>
</kw>
<kw name="validate-swim-images" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.741173" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.741173" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.741173" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.741173" elapsed="0.001537"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.742710" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.742710" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.742900" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.742900" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="Load Data from File" owner="CW_Keywords">
<kw name="Get File" owner="OperatingSystem">
<msg time="2024-12-12T15:58:37.743409" level="INFO" html="true">Getting file '&lt;a href="file://C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-images.txt"&gt;C:\temp\RoboWorks\Suites\crosswork\ENV\dclouddemo\cnc-images.txt&lt;/a&gt;'.</msg>
<msg time="2024-12-12T15:58:37.743409" level="INFO">${LoadData} = </msg>
<var>${LoadData}</var>
<arg>${loadFile}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2024-12-12T15:58:37.743409" elapsed="0.000000"/>
</kw>
<return>
<value>${LoadData}</value>
<status status="PASS" start="2024-12-12T15:58:37.743409" elapsed="0.000000"/>
</return>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-images.txt</arg>
<status status="PASS" start="2024-12-12T15:58:37.743409" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.743409" level="INFO">${RESP} = ('PASS', '')</msg>
<var>${RESP}</var>
<arg>Load Data from File</arg>
<arg>${BASE}${/}ENV${/}${ENV}${/}cnc-images.txt</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.742900" elapsed="0.000509"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.744471" level="INFO">${MSG} = --Validate CNC images--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC images--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.743409" elapsed="0.001062"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;PASS&quot;">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.744471" level="INFO">${appsVALID} = </msg>
<var>${appsVALID}</var>
<arg>${RESP}[1]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<kw name="Split To Lines" owner="String">
<msg time="2024-12-12T15:58:37.744471" level="INFO">0 lines returned</msg>
<msg time="2024-12-12T15:58:37.744471" level="INFO">@{appsVALID} = [ ]</msg>
<var>@{appsVALID}</var>
<arg>${appsVALID}</arg>
<doc>Splits the given string to lines.</doc>
<status status="PASS" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${CNC_SWIM_IMAGES}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>"${RESP}[0]"=="FAIL"</arg>
<arg>Set Test Variable</arg>
<arg>${MSG}</arg>
<arg>${MSG}${${RESP}[0]X}: [${ENV}]:${item}\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]}</arg>
<arg>${RESP}[0]:${item}:App found in validation list, but not in system</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>${RESP}[0]</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{appsVALID}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</for>
<status status="PASS" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.744471" elapsed="0.000000"/>
</if>
<for flavor="IN">
<iter>
<kw name="Run Keyword And Ignore Error" owner="BuiltIn">
<kw name="List Should Contain Value" owner="Collections">
<msg time="2024-12-12T15:58:37.745477" level="FAIL">[ ] does not contain value '[]'.</msg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<status status="FAIL" start="2024-12-12T15:58:37.745477" elapsed="0.000000">[ ] does not contain value '[]'.</status>
</kw>
<msg time="2024-12-12T15:58:37.745477" level="INFO">${RESP} = ('FAIL', "[ ] does not contain value '[]'.")</msg>
<var>${RESP}</var>
<arg>List Should Contain Value</arg>
<arg>${appsVALID}</arg>
<arg>${item}</arg>
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</kw>
<if>
<branch type="IF" condition="&quot;${RESP}[0]&quot; == &quot;FAIL&quot;">
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.745477" level="INFO">${MSG} = --Validate CNC images--

WARN: [] Not in valid list.</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nWARN: ${item} Not in valid list.</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${${RESP}[0]-REV}</arg>
<arg>${RESP}[0]:${item}</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</branch>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</if>
<var name="${item}">[]</var>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>${CNC_SWIM_IMAGES}</value>
<status status="PASS" start="2024-12-12T15:58:37.745477" elapsed="0.000000"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.746476" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.746476" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.746476" level="INFO">Length is 1.</msg>
<msg time="2024-12-12T15:58:37.746476" level="INFO">${FAIL_COUNT_REV} = 1</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.746476" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.746476" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.746476" level="INFO">List has one item:
FAIL:[]</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} validation(s) failed for SWIM images</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.747477" level="INFO">Execution passed with message:
Appears to be a new entry not in the validation list.</msg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-12T15:58:37.747477" elapsed="0.000000">Appears to be a new entry not in the validation list.</status>
</kw>
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.746476" elapsed="0.001001">Appears to be a new entry not in the validation list.</status>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}\nAll tests passed. Failures:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.747477" elapsed="0.000000"/>
</kw>
<var>${RESP}</var>
<doc>Validates the SWIM images based on the suite variable of ``CNC_SWIM_IMAGES``</doc>
<status status="PASS" start="2024-12-12T15:58:37.741173" elapsed="0.006304">Appears to be a new entry not in the validation list.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.747477" level="INFO">Set test message to:
--Validate CNC images--

WARN: [] Not in valid list.
Appears to be a new entry not in the validation list.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.747477" elapsed="0.000000"/>
</kw>
<doc>Validate Software Image repository as per the file spec [cnc-images.txt]</doc>
<tag>SWIM</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.741173" elapsed="0.006304">--Validate CNC images--

WARN: [] Not in valid list.
Appears to be a new entry not in the validation list.</status>
</test>
<test id="s1-t37" name="Validate CNC Application Health" line="290">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.748478" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.748478" elapsed="0.000000"/>
</kw>
<kw name="validate-cnc-application-health" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.749476" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${CNC_APP_DEGRADED}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.749476" level="INFO">${MSG} = --Validate CNC app health--
</msg>
<arg>${MSG}</arg>
<arg>--Validate CNC app health--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}FAIL: [${ENV}]:${item} is Degraded\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.749476" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>FAIL</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.750495" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.749476" elapsed="0.001019"/>
</iter>
<var>${item}</var>
<value>@{CNC_APP_DEGRADED}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.749476" elapsed="0.001019"/>
</for>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} applications degraded.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.750495" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<kw name="Pass Execution" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.750495" level="INFO">Execution passed with message:
0 applications were listed as degraded.</msg>
<arg>${FAIL_COUNT} applications were listed as degraded.</arg>
<doc>Skips rest of the current test, setup, or teardown with PASS status.</doc>
<status status="PASS" start="2024-12-12T15:58:37.750495" elapsed="0.000000">0 applications were listed as degraded.</status>
</kw>
<arg>${FAIL_COUNT} == 0</arg>
<arg>pass execution</arg>
<arg>${FAIL_COUNT} applications were listed as degraded.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.750495" elapsed="0.000000">0 applications were listed as degraded.</status>
</kw>
<var>${RESP}</var>
<doc>Validates the application health based on the suite variable of ``CNC_APP_DEGRADED``</doc>
<status status="PASS" start="2024-12-12T15:58:37.749476" elapsed="0.001019">0 applications were listed as degraded.</status>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.750495" level="INFO">Set test message to:
--Validate CNC app health--

0 applications were listed as degraded.</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.750495" elapsed="0.000000"/>
</kw>
<doc>Ensure all CNC applications are healthy</doc>
<tag>APPLICATIONS</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.748478" elapsed="0.002017">--Validate CNC app health--

0 applications were listed as degraded.</status>
</test>
<test id="s1-t38" name="Validate Device Alarms" line="297">
<kw name="Set Test Variable" owner="BuiltIn" type="SETUP">
<msg time="2024-12-12T15:58:37.751475" level="INFO">${MSG} = </msg>
<arg>${MSG}</arg>
<arg>${EMPTY}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.751475" elapsed="0.000000"/>
</kw>
<kw name="validate-device-alarms" owner="CW_Keywords">
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">@{FAIL} = [ ]</msg>
<var>@{FAIL}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">@{PASS} = [ ]</msg>
<var>@{PASS}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">@{PASS-REV} = [ ]</msg>
<var>@{PASS-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">@{FAIL-REV} = [ ]</msg>
<var>@{FAIL-REV}</var>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Create List" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">@{VALIDATE_LIST} = [ DOWN | UNREACHABLE | ERROR | DEGRADED | errors ]</msg>
<var>@{VALIDATE_LIST}</var>
<arg>DOWN</arg>
<arg>UNREACHABLE</arg>
<arg>ERROR</arg>
<arg>DEGRADED</arg>
<arg>errors</arg>
<doc>Returns a list containing given items.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">${MSG} = --Reported Device Alarms--
</msg>
<arg>${MSG}</arg>
<arg>--Reported Device Alarms--\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.752477" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.752477" level="INFO">${ALARM_COUNT} = 0</msg>
<var>${ALARM_COUNT}</var>
<arg>${CNC_DEVICE_ALARMS}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.000000"/>
</kw>
<for flavor="IN">
<iter>
<kw name="Log" owner="BuiltIn">
<arg>${item}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<arg>${MSG}</arg>
<arg>${MSG}${FAILX}: [${ENV}]:${item}\n</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Append To List" owner="Collections">
<arg>${FAIL}</arg>
<arg>FAIL</arg>
<doc>Adds ``values`` to the end of ``list``.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Set Tags" owner="BuiltIn">
<arg>FAIL</arg>
<doc>Adds given ``tags`` for the current test or all tests in a suite.</doc>
<status status="NOT RUN" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<var name="${item}"/>
<status status="NOT RUN" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</iter>
<var>${item}</var>
<value>@{CNC_DEVICE_ALARMS}</value>
<status status="NOT RUN" start="2024-12-12T15:58:37.752477" elapsed="0.001038"/>
</for>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.753515" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.753515" level="INFO">${FAIL_COUNT} = 0</msg>
<var>${FAIL_COUNT}</var>
<arg>${FAIL}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Get Length" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.753515" level="INFO">Length is 0.</msg>
<msg time="2024-12-12T15:58:37.753515" level="INFO">${FAIL_COUNT_REV} = 0</msg>
<var>${FAIL_COUNT_REV}</var>
<arg>${FAIL-REV}</arg>
<doc>Returns and logs the length of the given item as an integer.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.753515" level="INFO">List is empty.</msg>
<arg>${PASS}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.753515" level="INFO">List is empty.</msg>
<arg>${FAIL}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Log List" owner="Collections">
<msg time="2024-12-12T15:58:37.753515" level="INFO">List is empty.</msg>
<arg>${FAIL-REV}</arg>
<doc>Logs the length and contents of the ``list`` using given ``level``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.000000"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT} &gt; 0</arg>
<arg>fail</arg>
<arg>${FAIL_COUNT} Failures were seen on one or more devices.</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.753515" elapsed="0.001006"/>
</kw>
<kw name="Run Keyword If" owner="BuiltIn">
<arg>${FAIL_COUNT_REV} &gt; 0</arg>
<arg>pass execution</arg>
<arg>Appears to be a new entry not in the validation list.\n</arg>
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<status status="PASS" start="2024-12-12T15:58:37.754521" elapsed="0.000000"/>
</kw>
<kw name="Set Test Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.754521" level="INFO">${MSG} = --Reported Device Alarms--

No device errors detect. Errors:0</msg>
<arg>${MSG}</arg>
<arg>${MSG}\nNo device errors detect. Errors:${FAIL_COUNT}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="PASS" start="2024-12-12T15:58:37.754521" elapsed="0.000000"/>
</kw>
<msg time="2024-12-12T15:58:37.754521" level="INFO">${RESP} = None</msg>
<var>${RESP}</var>
<doc>Checks and reports on the presence of device level alarms captured during ``get-device-alarms`` and stored in  of ``CNC_DEVICE_ALARMS``</doc>
<status status="PASS" start="2024-12-12T15:58:37.752477" elapsed="0.002044"/>
</kw>
<kw name="Set Test Message" owner="BuiltIn" type="TEARDOWN">
<msg time="2024-12-12T15:58:37.754521" level="INFO">Set test message to:
--Reported Device Alarms--

No device errors detect. Errors:0
</msg>
<arg>${MSG}\n${TEST MESSAGE}</arg>
<doc>Sets message for the current test case.</doc>
<status status="PASS" start="2024-12-12T15:58:37.754521" elapsed="0.000000"/>
</kw>
<doc>Report on any active device alarms in critical or major</doc>
<tag>ALARMS</tag>
<tag>DEVICE</tag>
<tag>VALIDATE</tag>
<status status="PASS" start="2024-12-12T15:58:37.751475" elapsed="0.003046">--Reported Device Alarms--

No device errors detect. Errors:0
</status>
</test>
<kw name="Suite Teardown" owner="CW_Keywords" type="TEARDOWN">
<kw name="Delete CNC Token" owner="CW_Keywords">
<kw name="Log Variables" owner="BuiltIn">
<arg>level=TRACE</arg>
<doc>Logs all variables in the current scope with given log level.</doc>
<status status="PASS" start="2024-12-12T15:58:37.755478" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.756496" level="INFO">${myurl} = /crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc</msg>
<var>${myurl}</var>
<arg>/crosswork/sso/v1/tickets/${myTGT}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2024-12-12T15:58:37.756496" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2024-12-12T15:58:37.756496" level="INFO">${headers} = {}</msg>
<var>${headers}</var>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.756496" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Content-type=application/json</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.756496" elapsed="0.000000"/>
</kw>
<kw name="Set To Dictionary" owner="Collections">
<arg>${headers}</arg>
<arg>Authorization=Bearer ${token}</arg>
<doc>Adds the given ``key_value_pairs`` and/or ``items`` to the ``dictionary``.</doc>
<status status="PASS" start="2024-12-12T15:58:37.756496" elapsed="0.000000"/>
</kw>
<kw name="DELETE On Session" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:37.906830" level="INFO">DELETE Request : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 path_url=/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6Ijg5ZTY0NDViLWI1MzYtNDU2OS1iZDkwLWY5M2VlN2Y0OGMxZCJ9.eyJjbGllbnRJcEFkZHJlc3MiOiIxOTguMTguMTM0LjIyMSIsInN1YiI6ImFkbWluIiwiYXV0aEhhbmRsZU5hbWUiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNGcm9tTmV3TG9naW4iOnRydWUsImF1dGhlbnRpY2F0aW9uRGF0ZSI6IjIwMjQtMTItMTJUMDU6NTg6MjkuNjgxODg0MzM4WiIsInBvbGljeV9pZCI6ImFkbWluIiwic3VjY2Vzc2Z1bEF1dGhlbnRpY2F0aW9uSGFuZGxlcnMiOiJRdWVyeURhdGFiYXNlQXV0aGVudGljYXRpb25IYW5kbGVyIiwiaXNzIjoiaHR0cHM6Ly9jcm9zc3dvcmsuZGVtby5kY2xvdWQuY2lzY28uY29tOjMwNjAzL2Nyb3Nzd29yay9zc28iLCJ1c2VyQWdlbnQiOiJweXRob24tcmVxdWVzdHMvMi4zMi4zIiwiY3JlZGVudGlhbFR5cGUiOiJVc2VybmFtZVBhc3N3b3JkQ3JlZGVudGlhbCIsImF1ZCI6Imh0dHBzOi8vMS4yLjMuNC9hcHAtZGFzaGJvYXJkL2FwcC1kYXNoYm9hcmQiLCJhdXRoZW50aWNhdGlvbk1ldGhvZCI6IlF1ZXJ5RGF0YWJhc2VBdXRoZW50aWNhdGlvbkhhbmRsZXIiLCJnZW9Mb2NhdGlvbiI6InVua25vd24iLCJkZXZpY2VBY2Nlc3NHcm91cHMiOiJBTEwtQUNDRVNTIiwic2VydmVySXBBZGRyZXNzIjoiMTAuMjQ0LjAuMjkiLCJsb25nVGVybUF1dGhlbnRpY2F0aW9uUmVxdWVzdFRva2VuVXNlZCI6ZmFsc2UsImNoYW5nZV9wd2QiOiJmYWxzZSIsImV4cCI6MTczNDAxMTkwOSwiaWF0IjoxNzMzOTgzMTA5LCJqdGkiOiJTVC03Mi0zWjZuN3lvSk9CVzhsOXBpTWRja0lJb0VnVUN3a2RIb05TVk9NWXBnajNRM042dFRaaGN3Mk1rUFcwOUpLV2RiYXJpN3loLUIxaDdsR215ZGxKeGMtRkJ1N2tySFRVemZXd0ZvV1BFV1RqdU9aSVdrRE9xeFZoWGMwZ2M3dHhreDJoS1kwN213ODRXeHlQdE85OVdwcXRrYkdBNHViQnItLWNhcy04NGRjNWNjOTlmLTV2MmdjIiwidXNlcm5hbWUiOiJhZG1pbiJ9.mpC7stNsYRHZmhxaDtjClmpuJK96DYXFeqv4UxyFvNVVI5t1obxxR7xE5BwjHoVOmRtPQipySLMnSK_p-bWgnw', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:37.906830" level="INFO">DELETE Response : url=https://198.18.134.219:30603/crosswork/sso/v1/tickets/TGT-72-Zy9MISUqG0BY-NtKYo5Ivd-qNw0b1-kFMeR68MsbTzY-Tfm7Yqu999U8nhBnestImcM-cas-84dc5cc99f-5v2gc 
 status=200, reason=OK 
 headers={'Date': 'Thu, 12 Dec 2024 05:58:37 GMT', 'Content-Length': '0', 'Connection': 'keep-alive', 'Cache-Control': 'no-cache, no-store, max-age=0, must-revalidate, : private, no-cache, no-store, max-age=0, must-revalidate', 'Expires': '0', 'Pragma': 'no-cache', 'Requestid': '4710c337-d043-4dda-b28a-ad062ec85058', 'Strict-Transport-Security': 'max-age=15768000 ; includeSubDomains, max-age=31536000; includeSubDomains; preload', 'X-Content-Type-Options': 'nosniff, nosniff', 'X-Frame-Options': 'DENY, deny', 'X-Ratelimit-Limit': '0', 'X-Ratelimit-Remaining': '0', 'X-Ratelimit-Reset': '0', 'X-Tyk-Api-Expires': 'Thu, 02 Jan 3000 15:04:00 UTC', 'X-Xss-Protection': '1; mode=block, 1; mode=block', 'Server': 'Webserver', 'Content-Security-Policy': "default-src https:; frame-ancestors 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; base-uri 'self'; media-src 'self'; object-src 'none'; font-src 'self' data:; connect-src 'self' https://api.mapbox.com; img-src 'self' data: blob: https://api.mapbox.com; style-src 'self' https://cdn.jsdelivr.net/npm/angular-calendar 'unsafe-inline'; child-src https: blob:;"} 
 body=None 
 </msg>
<msg time="2024-12-12T15:58:37.907831" level="INFO">C:\Users\siprice\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.12_qbz5n2kfra8p0\LocalCache\local-packages\Python312\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '198.18.134.219'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-12-12T15:58:37.907831" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>cw</arg>
<arg>${myurl}</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-12-12T15:58:37.756496" elapsed="0.151335"/>
</kw>
<doc>Dispose of CNC token</doc>
<status status="PASS" start="2024-12-12T15:58:37.755478" elapsed="0.152353"/>
</kw>
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2024-12-12T15:58:37.907831" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2024-12-12T15:58:37.907831" elapsed="0.000000"/>
</kw>
<tag>teardown</tag>
<doc>Dispose of Sessions</doc>
<status status="PASS" start="2024-12-12T15:58:37.755478" elapsed="0.152353"/>
</kw>
<doc>System, environment and configuration baseline and verification.</doc>
<status status="PASS" start="2024-12-12T15:58:28.480227" elapsed="9.427604"/>
</suite>
<statistics>
<total>
<stat pass="38" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0" skip="0">ALARMS</stat>
<stat pass="4" fail="0" skip="0">APPLICATIONS</stat>
<stat pass="1" fail="0" skip="0">AUTH</stat>
<stat pass="2" fail="0" skip="0">CREDENTIALS</stat>
<stat pass="20" fail="0" skip="0">DATA-COLLECTION</stat>
<stat pass="5" fail="0" skip="0">DATA_GATEWAY</stat>
<stat pass="5" fail="0" skip="0">DEVICE</stat>
<stat pass="1" fail="0" skip="0">KPIS</stat>
<stat pass="3" fail="0" skip="0">LICENSING</stat>
<stat pass="2" fail="0" skip="0">NSO</stat>
<stat pass="10" fail="0" skip="0">PASS</stat>
<stat pass="3" fail="0" skip="0">PLATFORM</stat>
<stat pass="2" fail="0" skip="0">PROVIDERS</stat>
<stat pass="4" fail="0" skip="0">SERVICES</stat>
<stat pass="2" fail="0" skip="0">SETUP-TASKS</stat>
<stat pass="1" fail="0" skip="0">SLICING</stat>
<stat pass="2" fail="0" skip="0">SWIM</stat>
<stat pass="1" fail="0" skip="0">SYSLOG</stat>
<stat pass="16" fail="0" skip="0">VALIDATE</stat>
</tag>
<suite>
<stat pass="38" fail="0" skip="0" id="s1" name="Cnc">Cnc</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
